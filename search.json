[{"path":"https://drieslab.github.io/GiottoVisuals/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 GiottoVisuals authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/articles/intro_to_GiottoVisuals.html","id":"description-of-the-module-giottovisuals","dir":"Articles","previous_headings":"","what":"Description of the module GiottoVisuals","title":"Introduction to GiottoVisuals","text":"GiottoVisuals contains main plotting functions Giotto Suite. full examples usage Giotto visualizations visit http://giottosuite.com","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/articles/intro_to_GiottoVisuals.html","id":"script-organization-by-prefixes","dir":"Articles","previous_headings":"","what":"Script Organization by Prefixes:","title":"Introduction to GiottoVisuals","text":"aux_ - auxiliary meta functionality - aux_output.R - plot output handling - aux_save.R - plot saving - aux_defaults.R - set plotting defaults - aux_visuals.R - general auxiliary plotting functions plot_ - general plotting functions organized type plot - plot_scatter.R - scatter plots - plot_violin.R - violin plots - plot_heatmap.R - heatmaps - plot_dendrogram.R - dendrograms vis_ - specific plotting functions organized topic - vis_hvf.R - highly variable features plots - vis_pc.R - principle components plots - vis_spatial.R - vis_spatial_in_situ.R gg_ - ggplot2 related - gg_info_layers.R - modular internals plotting different layers information : - color_palettes.R - color palettes factory functions Package: - package_imports.R - imports - globals.R - global variables - dd.R - dummy documentation inheriting - zzz.R - onloads","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/articles/intro_to_GiottoVisuals.html","id":"spatial-plots","dir":"Articles","previous_headings":"","what":"Spatial plots","title":"Introduction to GiottoVisuals","text":"Load package Create small Giotto object Plot spatial locations","code":"library(GiottoVisuals) expression_matrix <- matrix(rnorm(1000), nrow = 10) colnames(expression_matrix) <- paste0(\"cell_\", 1:100) rownames(expression_matrix) <- paste0(\"gene_\", 1:10)  spatial_locations <- data.frame(     cell_ID = paste0(\"cell_\", 1:100),     sdimx = rnorm(100),     sdimy = rnorm(100) )  giotto_object <- GiottoClass::createGiottoObject(     expression = expression_matrix,     spatial_locs = spatial_locations ) ##  ## no external python path or giotto ##  environment was specified, will check if a ##  default python path is available ##  ## A default python path was found: /usr/bin/python3 and will be used ##  If this is not the correct python path, either ##  ## 1. use installGiottoEnvironment() to install ##  a local miniconda python environment along with required modules ##  ## 2. provide an existing python path to ##  python_path to use your own python path which has all modules ##  installed ## Set options(\"giotto.use_conda\" = FALSE) if ##  python functionalities are not needed ## Warning: Some of Giotto's expected python module(s) were not found: ## pandas, igraph, leidenalg, community, networkx, sklearn ##  ## ** Python path used: \"/usr/bin/python3\" ## (This is fine if python-based functions are not needed) ## Consider to install these (optional) packages to run all possible Giotto ##  commands for spatial analyses: scran MAST tiff biomaRt trendsceek multinet ##  RTriangle FactoMineR ## Giotto does not automatically install all these packages as they are not ##  absolutely required and this reduces the number of ##  dependencies spatPlot2D(giotto_object)"},{"path":"https://drieslab.github.io/GiottoVisuals/articles/intro_to_GiottoVisuals.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Introduction to GiottoVisuals","text":"","code":"sessionInfo() ## R version 4.4.0 (2024-04-24) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.4 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] GiottoVisuals_0.2.3 ##  ## loaded via a namespace (and not attached): ##  [1] gtable_0.3.5       xfun_0.44          bslib_0.7.0        ggplot2_3.5.1      ##  [5] htmlwidgets_1.6.4  ggrepel_0.9.5      lattice_0.22-6     vctrs_0.6.5        ##  [9] tools_4.4.0        generics_0.1.3     parallel_4.4.0     tibble_3.2.1       ## [13] fansi_1.0.6        highr_0.11         colorRamp2_0.1.0   pkgconfig_2.0.3    ## [17] Matrix_1.7-0       data.table_1.15.4  checkmate_2.3.1    RColorBrewer_1.1-3 ## [21] desc_1.4.3         lifecycle_1.0.4    farver_2.1.2       stringr_1.5.1      ## [25] compiler_4.4.0     deldir_2.0-4       GiottoUtils_0.1.8  textshaping_0.4.0  ## [29] munsell_0.5.1      terra_1.7-78       codetools_0.2-20   scattermore_1.2    ## [33] htmltools_0.5.8.1  GiottoClass_0.3.1  sass_0.4.9         yaml_2.3.8         ## [37] lazyeval_0.2.2     plotly_4.10.4      pkgdown_2.0.9      pillar_1.9.0       ## [41] jquerylib_0.1.4    tidyr_1.3.1        cachem_1.1.0       dbscan_1.1-12      ## [45] magick_2.8.3       gtools_3.9.5       tidyselect_1.2.1   digest_0.6.35      ## [49] stringi_1.8.4      reshape2_1.4.4     dplyr_1.1.4        purrr_1.0.2        ## [53] labeling_0.4.3     cowplot_1.1.3      fastmap_1.2.0      grid_4.4.0         ## [57] colorspace_2.1-0   cli_3.6.2          magrittr_2.0.3     utf8_1.2.4         ## [61] withr_3.0.0        rappdirs_0.3.3     scales_1.3.0       backports_1.5.0    ## [65] sp_2.1-4           rmarkdown_2.27     httr_1.4.7         matrixStats_1.3.0  ## [69] igraph_2.0.3       reticulate_1.37.0  ragg_1.3.2         png_0.1-8          ## [73] memoise_2.0.1      evaluate_0.23      knitr_1.46         viridisLite_0.4.2  ## [77] rlang_1.1.3        Rcpp_1.0.12        glue_1.7.0         jsonlite_1.8.8     ## [81] plyr_1.8.9         R6_2.5.1           systemfonts_1.1.0  fs_1.6.4"},{"path":"https://drieslab.github.io/GiottoVisuals/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ruben Dries. Author, maintainer. Jiaji George Chen. Author. Guo-Cheng Yuan. Author. Matthew O'Brien. Author. Joselyn C. Chávez-Fuentes. Author. Edward Ruiz. Author.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dries R, George Chen J, Yuan G, O'Brien M, Chávez-Fuentes J, Ruiz E (2024). GiottoVisuals: Visuals Giotto spatial biology analysis ecosystem. R package version 0.2.3, https://github.com/drieslab/Giotto, https://drieslab.github.io/GiottoVisuals/, https://drieslab.github.io/Giotto/.","code":"@Manual{,   title = {GiottoVisuals: Visuals for the Giotto spatial biology analysis ecosystem},   author = {Ruben Dries and Jiaji {George Chen} and Guo-Cheng Yuan and Matthew O'Brien and Joselyn C. Chávez-Fuentes and Edward Ruiz},   year = {2024},   note = {R package version 0.2.3, https://github.com/drieslab/Giotto, https://drieslab.github.io/GiottoVisuals/},   url = {https://drieslab.github.io/Giotto/}, }"},{"path":"https://drieslab.github.io/GiottoVisuals/index.html","id":"giottovisuals-","dir":"","previous_headings":"","what":"Visuals for the Giotto spatial biology analysis ecosystem","title":"Visuals for the Giotto spatial biology analysis ecosystem","text":"GiottoVisuals contains main plotting functions Giotto Suite","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visuals for the Giotto spatial biology analysis ecosystem","text":"can install GiottoVisuals like:","code":"if (!requireNamespace(\"pak\", quietly = TRUE)) install.packages(\"pak\") pak::pak(\"drieslab/GiottoVisuals\")"},{"path":"https://drieslab.github.io/GiottoVisuals/index.html","id":"script-organization-by-prefixes","dir":"","previous_headings":"","what":"Script Organization by Prefixes:","title":"Visuals for the Giotto spatial biology analysis ecosystem","text":"aux_ - auxilliary meta functionality - aux_output.R - plot output handling - aux_save.R - plot saving - aux_defaults.R - set plotting defaults - aux_visuals.R - general auxilliary plotting functions plot_ - general plotting functions organized type plot - plot_scatter.R - scatter plots - plot_violin.R - violin plots - plot_heatmap.R - heatmaps - plot_dendrogram.R - dendrograms vis_ - specific plotting functions organized topic - vis_hvf.R - highly variable features plots - vis_pc.R - principle components plots - vis_spatial.R - - vis_spatial_in_situ.R - gg_ - ggplot2 related - gg_info_layers.R - modular internals plotting different layers information - `` : - color_palettes.R - color palettes factory functions vis_spatialDE.R - Package: - package_imports.R - imports - globals.R - global variables - dd.R - dummy documentation inheriting - zzz.R - onloads","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/FSV_show.html","id":null,"dir":"Reference","previous_headings":"","what":"FSV_show — FSV_show","title":"FSV_show — FSV_show","text":"Visualize spatial variable genes calculated spatial_DE","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/FSV_show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FSV_show — FSV_show","text":"","code":"FSV_show(   results,   ms_results = NULL,   size = c(4, 2, 1),   color = c(\"blue\", \"green\", \"red\"),   sig_alpha = 0.5,   unsig_alpha = 0.5 )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/FSV_show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FSV_show — FSV_show","text":"results results calculated spatial_DE ms_results ms_results calculated spatial_DE size indicate different levels qval color indicate different SV features sig_alpha transparency significant genes unsig_alpha transparency non-significant genes","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/FSV_show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FSV_show — FSV_show","text":"ggplot object","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/FSV_show.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FSV_show — FSV_show","text":"Description parameters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/addGiottoImageToSpatPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"addGiottoImageToSpatPlot — addGiottoImageToSpatPlot","title":"addGiottoImageToSpatPlot — addGiottoImageToSpatPlot","text":"Add giotto image spatial ggplot object post creation","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/addGiottoImageToSpatPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addGiottoImageToSpatPlot — addGiottoImageToSpatPlot","text":"","code":"addGiottoImageToSpatPlot(   spatpl = NULL,   gimage = NULL,   layer = c(\"bg\", \"overlay\"),   alpha = NULL )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/addGiottoImageToSpatPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addGiottoImageToSpatPlot — addGiottoImageToSpatPlot","text":"spatpl spatial ggplot object gimage giotto image, see createGiottoImage layer numeric layer add giotto image. takes 'bg' 'overlay' input designate last (bottom/background) first (top/overlay) alpha (optional) add giotto image plot transparency. Numeric. 0 (transparent) 1 (fully visible)","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/addGiottoImageToSpatPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"addGiottoImageToSpatPlot — addGiottoImageToSpatPlot","text":"updated spatial ggplot object","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/addGiottoImageToSpatPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"addGiottoImageToSpatPlot — addGiottoImageToSpatPlot","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed #> Warning: Some of Giotto's expected python module(s) were not found: #> pandas, igraph, leidenalg, community, networkx, sklearn #>  #> ** Python path used: \"/usr/bin/python3\" #> (This is fine if python-based functions are not needed)  my_giottoimage <- GiottoClass::createGiottoImage(g, mg_object = system.file(\"image.png\", package = \"GiottoVisuals\"), name = 'image') #> Warning: `get_adj_rescale_img()` was deprecated in GiottoClass 0.3.1. #> ℹ this is too specific to the inner workings of `giottoImage` #> ℹ We can simply use `ext<-` to set a new extent instead of this. #> ℹ The deprecated feature was likely used in the GiottoClass package. #>   Please report the issue at <https://github.com/drieslab/Giotto/issues>.  my_spatplot <- spatPlot2D(g, return_plot = TRUE)   addGiottoImageToSpatPlot(spatpl = my_spatplot, gimage = my_giottoimage)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/aes_string2.html","id":null,"dir":"Reference","previous_headings":"","what":"aes_string2 — aes_string2","title":"aes_string2 — aes_string2","text":"makes sure aes_string can also used names start numeric values","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/aes_string2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aes_string2 — aes_string2","text":"","code":"aes_string2(...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/aes_string2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"aes_string2 — aes_string2","text":"... aes_string parameters","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/aes_string2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"aes_string2 — aes_string2","text":"Aesthetics elements","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/auto_image_resample.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimized image resampling — auto_image_resample","title":"Optimized image resampling — auto_image_resample","text":"Downsample terra-based images plotting. Uses spatSample load onlya  portion original image, speeding plotting lowering memory footprint. Default behavior spatSample crop smaller ROI needed plotting followed sampling process order reduce wasted sampling focusing sample space. large ROIs, crop can time intensive require writing disk. function examines ROI dimensions defined limits spatial locations plotted, decides following two methods order avoid issue: Method . First crop original image, sample max_sample (default = 5e5) values generate final image. Intended smaller ROIs. Force usage method setting flex_resample = FALSE Method B. First oversample, crop. Intended larger ROIs. Base sample size max_sample, multiplied scale factor >1 increases smaller ROI defined : original dimensions/crop dimensions larger ratio x y dims chosen. Scale factor capped max_resample_scale Control points function set max_crop decides max ROI area switchover method B happens order avoid laborious crops max_resample_scale determines maximum scale factor number values sample. values can adjusted depending system resources. Additionally, flex_resample determines switching behavior happens. set FALSE, method used.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/auto_image_resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimized image resampling — auto_image_resample","text":"","code":".auto_resample_gimage(   img,   plot_ext = NULL,   img_border = 0.125,   flex_resample = TRUE,   max_sample = getOption(\"giotto.plot_img_max_sample\", 5e+05),   max_crop = getOption(\"giotto.plot_img_max_crop\", 1e+08),   max_resample_scale = getOption(\"giotto.plot_img_max_resample_scale\", 100) )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/auto_image_resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimized image resampling — auto_image_resample","text":"img giotto image plot plot_ext extent plot (required) img_border 0 FALSE, expand plot_ext percentage side applying crop image. See details flex_resample logical. Default = TRUE. Forces usage method FALSE. max_sample numeric. Default = 5e5. Maximum n values sample image. larger max_crop, override max_crop. Globally settable option \"giotto.plot_img_max_sample\" max_crop numeric. Default = 1e8. Maximum crop size (px area) allowed method switching method B (see description). Globally settable option \"giotto.plot_img_max_crop\" max_resample_scale numeric. Default = 100. Maximum scalefactor allowed applied max_sample order oversample compensating decreased resolution cropping sampling. Globally settable option \"giotto.plot_img_max_resample_scale\".","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/auto_image_resample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimized image resampling — auto_image_resample","text":"giotto image cropped resampled properly plotting","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/auto_image_resample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimized image resampling — auto_image_resample","text":"img_border expand ext use plotting image. makes image cut sharply edge plot extent. Needed since plots often define extent centroids, polygons may hang edge extent.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/auto_image_resample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimized image resampling — auto_image_resample","text":"","code":"if (FALSE) { img <- GiottoData::loadSubObjectMini(\"giottoLargeImage\") .auto_resample_gimage(img) }"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/create_cluster_dendrogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Create clustered expression dendrogram — create_cluster_dendrogram","title":"Create clustered expression dendrogram — create_cluster_dendrogram","text":"Create dendrogram based data.table columns cluster ID, variables, values. specific values provided 'col' params assumed 1. clus_col, 2. var_col, 3. val_col","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/create_cluster_dendrogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create clustered expression dendrogram — create_cluster_dendrogram","text":"","code":"create_cluster_dendrogram(   data,   clus_col = names(data)[[1]],   var_col = names(data)[[2]],   val_col = names(data)[[3]],   cor = c(\"pearson\", \"spearman\"),   distance = \"ward.D\",   h = NULL,   h_color = \"red\",   rotate = FALSE,   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/create_cluster_dendrogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create clustered expression dendrogram — create_cluster_dendrogram","text":"data data.table. include columns clustering labels, variables clustered, values clusters. clus_col character. name column clustering info var_col character. name column variable name val_col character. name column values info cor correlation score calculate distance (e.g. \"pearson\", \"spearman\") distance distance method use hierarchical clustering, default \"ward.D\" h height horizontal lines plot h_color color horizontal lines rotate rotate dendrogram 90 degrees ... Arguments passed ggdendro::ggdendrogram segments TRUE, show line segments labels TRUE, shows segment labels leaf_labels TRUE, shows leaf labels theme_dendro TRUE, applies blank theme plot (see theme_dendro())","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/create_cluster_dendrogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create clustered expression dendrogram — create_cluster_dendrogram","text":"ggdendrogram","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/create_cluster_dendrogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create clustered expression dendrogram — create_cluster_dendrogram","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed  g_expression <- head(GiottoClass::getExpression(g, output = \"matrix\")) g_expression_df <- as.data.frame(as.matrix(g_expression)) g_expression_df$feat_ID <- rownames(g_expression)  g_expression_melt <- reshape2::melt(g_expression_df, id.vars = \"feat_ID\",  measure.vars = colnames(g_expression), variable.name = \"cell_ID\",  value.name = \"raw_expression\")  create_cluster_dendrogram(data.table::as.data.table(g_expression_melt),  var_col = \"cell_ID\", clus_col = \"feat_ID\", \"raw_expression\") #> Error in loadNamespace(x): there is no package called ‘ggdendro’"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/data_access_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: data_access_params — data_access_params","title":"Params documentation template: data_access_params — data_access_params","text":"Params documentation template: data_access_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/data_access_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: data_access_params — data_access_params","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\")","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/data_access_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: data_access_params — data_access_params","text":"internal giotto object slot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimCellPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"dimCellPlot — dimCellPlot","title":"dimCellPlot — dimCellPlot","text":"Visualize cells according dimension reduction coordinates.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimCellPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dimCellPlot — dimCellPlot","text":"","code":"dimCellPlot2D(   gobject,   spat_unit = NULL,   feat_type = NULL,   dim_reduction_to_use = \"umap\",   dim_reduction_name = \"umap\",   dim1_to_use = 1,   dim2_to_use = 2,   spat_enr_names = NULL,   cell_annotation_values = NULL,   show_NN_network = FALSE,   nn_network_to_use = \"sNN\",   network_name = \"sNN.pca\",   cell_color_code = NULL,   cell_color_gradient = NULL,   gradient_midpoint = NULL,   gradient_style = c(\"divergent\", \"sequential\"),   gradient_limits = NULL,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 0.5,   show_cluster_center = FALSE,   show_center_label = TRUE,   center_point_size = 4,   center_point_border_col = \"black\",   center_point_border_stroke = 0.1,   label_size = 4,   label_fontface = \"bold\",   edge_alpha = NULL,   point_shape = c(\"border\", \"no_border\"),   point_size = 1,   point_alpha = 1,   point_border_col = \"black\",   point_border_stroke = 0.1,   show_legend = TRUE,   legend_text = 8,   legend_symbol_size = 1,   background_color = \"white\",   axis_text = 8,   axis_title = 8,   cow_n_col = NULL,   cow_rel_h = 1,   cow_rel_w = 1,   cow_align = \"h\",   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"dimCellPlot2D\" )  dimCellPlot(gobject, ...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimCellPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dimCellPlot — dimCellPlot","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") dim_reduction_to_use character. dimension reduction use dim_reduction_name character. dimension reduction name dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis spat_enr_names character. names spatial enrichment results include cell_annotation_values numeric cell annotation columns show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points center_point_border_col border color center points center_point_border_stroke border stroke size center points label_size size labels label_fontface font labels edge_alpha column use alpha edges point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points point_border_col color border around points point_border_stroke stroke size border around points show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols background_color color plot background axis_text size axis text axis_title size axis title cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param ... dimCellPlot(...) passes dimCellPlot2D()","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimCellPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dimCellPlot — dimCellPlot","text":"ggplot ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimCellPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dimCellPlot — dimCellPlot","text":"Description parameters. 3D plots see dimPlot3D","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimCellPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dimCellPlot — dimCellPlot","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed dimCellPlot2D(     g, spat_enr_names = \"cluster_metagene\",     cell_annotation_values = as.character(seq(4)) )   g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed dimCellPlot(g, cell_annotation_values = \"leiden_clus\")"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot2D.html","id":null,"dir":"Reference","previous_headings":"","what":"dimFeatPlot2D — dimFeatPlot2D","title":"dimFeatPlot2D — dimFeatPlot2D","text":"Visualize gene expression according dimension reduction coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dimFeatPlot2D — dimFeatPlot2D","text":"","code":"dimFeatPlot2D(   gobject,   spat_unit = NULL,   feat_type = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   feats = NULL,   order = TRUE,   dim_reduction_to_use = \"umap\",   dim_reduction_name = NULL,   dim1_to_use = 1,   dim2_to_use = 2,   show_NN_network = FALSE,   nn_network_to_use = \"sNN\",   network_name = \"sNN.pca\",   network_color = \"lightgray\",   edge_alpha = NULL,   scale_alpha_with_expression = FALSE,   point_shape = c(\"border\", \"no_border\"),   point_size = 1,   point_alpha = 1,   cell_color_gradient = NULL,   gradient_midpoint = NULL,   gradient_style = c(\"divergent\", \"sequential\"),   gradient_limits = NULL,   point_border_col = \"black\",   point_border_stroke = 0.1,   show_legend = TRUE,   legend_text = 10,   background_color = \"white\",   axis_text = 8,   axis_title = 8,   cow_n_col = NULL,   cow_rel_h = 1,   cow_rel_w = 1,   cow_align = \"h\",   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"dimFeatPlot2D\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dimFeatPlot2D — dimFeatPlot2D","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") expression_values gene expression values use feats features show order order points according feature expression dim_reduction_to_use character. dimension reduction use dim_reduction_name character. dimension reduction name dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE network_color color NN network edge_alpha column use alpha edges scale_alpha_with_expression scale expression ggplot alpha parameter point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits point_border_col color border around points point_border_stroke stroke size border around points show_legend logical. show legend legend_text size legend text background_color color plot background axis_text size axis text axis_title size axis title cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dimFeatPlot2D — dimFeatPlot2D","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot2D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dimFeatPlot2D — dimFeatPlot2D","text":"Description parameters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dimFeatPlot2D — dimFeatPlot2D","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed dimFeatPlot2D(g, feats = c(\"Gna12\", \"Ccnd2\", \"Btbd17\"))"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot3D.html","id":null,"dir":"Reference","previous_headings":"","what":"dimFeatPlot3D — dimFeatPlot3D","title":"dimFeatPlot3D — dimFeatPlot3D","text":"Visualize cells gene expression according dimension reduction coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dimFeatPlot3D — dimFeatPlot3D","text":"","code":"dimFeatPlot3D(   gobject,   feat_type = NULL,   spat_unit = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   genes = NULL,   dim_reduction_to_use = \"umap\",   dim_reduction_name = \"umap\",   dim1_to_use = 1,   dim2_to_use = 2,   dim3_to_use = 3,   show_NN_network = FALSE,   nn_network_to_use = \"sNN\",   network_name = \"sNN.pca\",   network_color = \"lightgray\",   cluster_column = NULL,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 1,   edge_alpha = NULL,   point_size = 2,   genes_high_color = NULL,   genes_mid_color = \"white\",   genes_low_color = \"blue\",   show_legend = TRUE,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"dimFeatPlot3D\" )  dimGenePlot3D(...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dimFeatPlot3D — dimFeatPlot3D","text":"gobject giotto object feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") spat_unit spatial unit (e.g. \"cell\") expression_values gene expression values use genes genes show dim_reduction_to_use dimension reduction use dim_reduction_name dimension reduction name dim1_to_use dimension use x-axis dim2_to_use dimension use y-axis dim3_to_use dimension use z-axis show_NN_network show underlying NN network nn_network_to_use type NN network use (kNN vs sNN) network_name name NN network use, show_NN_network = TRUE network_color color NN network cluster_column cluster column select groups select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size size selected cells edge_alpha column use alpha edges point_size size point (cell) genes_high_color color high expression levels genes_mid_color color medium expression levels genes_low_color color low expression levels show_legend show legend show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param ... additional params pass","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dimFeatPlot3D — dimFeatPlot3D","text":"plotly","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dimFeatPlot3D — dimFeatPlot3D","text":"Description parameters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot3D.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"dimFeatPlot3D — dimFeatPlot3D","text":"dimGenePlot3D(): deprecated","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimFeatPlot3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dimFeatPlot3D — dimFeatPlot3D","text":"","code":"g <- GiottoData::loadGiottoMini(\"starmap\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed dimFeatPlot3D(g, genes = \"Slc17a7\") #> Error in dim_dfr[, c(dim1_to_use, dim2_to_use, dim3_to_use)]: subscript out of bounds"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot dimension reduction — dimPlot2D","title":"Plot dimension reduction — dimPlot2D","text":"Visualize cells according dimension reduction coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot dimension reduction — dimPlot2D","text":"","code":"dimPlot2D(   gobject,   spat_unit = NULL,   feat_type = NULL,   group_by = NULL,   group_by_subset = NULL,   dim_reduction_to_use = \"umap\",   dim_reduction_name = NULL,   dim1_to_use = 1,   dim2_to_use = 2,   spat_enr_names = NULL,   show_NN_network = FALSE,   nn_network_to_use = \"sNN\",   network_name = \"sNN.pca\",   cell_color = NULL,   color_as_factor = TRUE,   cell_color_code = NULL,   cell_color_gradient = NULL,   gradient_midpoint = NULL,   gradient_style = c(\"divergent\", \"sequential\"),   gradient_limits = NULL,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 0.5,   show_cluster_center = FALSE,   show_center_label = TRUE,   center_point_size = 4,   center_point_border_col = \"black\",   center_point_border_stroke = 0.1,   label_size = 4,   label_fontface = \"bold\",   edge_alpha = NULL,   point_shape = c(\"border\", \"no_border\"),   point_size = 1,   point_alpha = 1,   point_border_col = \"black\",   point_border_stroke = 0.1,   title = NULL,   show_legend = TRUE,   legend_text = 10,   legend_symbol_size = 2,   background_color = \"white\",   axis_text = 8,   axis_title = 8,   cow_n_col = NULL,   cow_rel_h = 1,   cow_rel_w = 1,   cow_align = \"h\",   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"dimPlot2D\" )  dimPlot(...)  dimPlot3D(   gobject,   spat_unit = NULL,   feat_type = NULL,   dim_reduction_to_use = \"umap\",   dim_reduction_name = \"umap\",   dim1_to_use = 1,   dim2_to_use = 2,   dim3_to_use = 3,   spat_enr_names = NULL,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 2,   show_NN_network = FALSE,   nn_network_to_use = \"sNN\",   network_name = \"sNN.pca\",   color_as_factor = TRUE,   cell_color = NULL,   cell_color_code = NULL,   show_cluster_center = FALSE,   show_center_label = TRUE,   center_point_size = 4,   label_size = 4,   edge_alpha = NULL,   point_size = 3,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"dim3D\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot dimension reduction — dimPlot2D","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") group_by character. Create multiple plots based cell annotation column group_by_subset character. subset group_by factor column dim_reduction_to_use character. dimension reduction use dim_reduction_name character. dimension reduction name dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis spat_enr_names character. names spatial enrichment results include show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points center_point_border_col border color center points center_point_border_stroke border stroke size center points label_size size labels label_fontface font labels edge_alpha column use alpha edges point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points point_border_col color border around points point_border_stroke stroke size border around points title character. title plot, defaults cell_color parameter show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols background_color color plot background axis_text size axis text axis_title size axis title cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param ... dimPlot(...) passes dimPlot2D() dim3_to_use numeric. dimension use z-axis","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot dimension reduction — dimPlot2D","text":"ggplot ggplot plotly (dimplot3D )","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dimPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot dimension reduction — dimPlot2D","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed dimPlot2D(g)  g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed dimPlot(g)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-create_heatmap_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create heatmap data.table — .create_heatmap_dt","title":"Create heatmap data.table — .create_heatmap_dt","text":"creates order clusters","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-create_heatmap_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create heatmap data.table — .create_heatmap_dt","text":"","code":".create_heatmap_dt(   gobject,   spat_unit = NULL,   feat_type = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   feats,   cluster_column = NULL,   cluster_order = c(\"size\", \"correlation\", \"custom\"),   cluster_custom_order = NULL,   cluster_cor_method = \"pearson\",   cluster_hclust_method = \"ward.D\",   feat_order = c(\"correlation\", \"custom\"),   feat_custom_order = NULL,   feat_cor_method = \"pearson\",   feat_hclust_method = \"complete\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-create_heatmap_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create heatmap data.table — .create_heatmap_dt","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") expression_values expression values use (e.g. \"normalized\", \"scaled\", \"custom\") feats features use cluster_column name column use clusters (e.g. \"leiden_clus\") cluster_order method determine cluster order (e.g. \"size\", \"correlation\", \"custom\") cluster_custom_order custom order clusters cluster_cor_method method cluster correlation, default \"pearson\" cluster_hclust_method method hierarchical clustering clusters, default \"ward.D\" feat_order method determine features order (e.g. \"correlation\", \"custom\") feat_custom_order custom order features feat_cor_method method features correlation, default \"pearson\" feat_hclust_method method hierarchical clustering features, default \"complete\"","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-create_heatmap_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create heatmap data.table — .create_heatmap_dt","text":"list","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-create_heatmap_dt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create heatmap data.table — .create_heatmap_dt","text":"Creates input data.tables plotHeatmap function.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-decide_cluster_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Decide cluster order — .decide_cluster_order","title":"Decide cluster order — .decide_cluster_order","text":"creates order clusters","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-decide_cluster_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decide cluster order — .decide_cluster_order","text":"","code":".decide_cluster_order(   gobject,   spat_unit = NULL,   feat_type = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   feats,   cluster_column = NULL,   cluster_order = c(\"size\", \"correlation\", \"custom\"),   cluster_custom_order = NULL,   cor_method = \"pearson\",   hclust_method = \"ward.D\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-decide_cluster_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decide cluster order — .decide_cluster_order","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") expression_values expression values use (e.g. \"normalized\", \"scaled\", \"custom\") feats features use (e.g. genes) cluster_column name column use clusters (e.g. \"leiden_clus\") cluster_order method determine cluster order (e.g. \"size\", \"correlation\", \"custom\") cluster_custom_order custom order clusters cor_method method correlation, default 'pearson' hclust_method method hierarchical clustering, default 'ward.D'","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-decide_cluster_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decide cluster order — .decide_cluster_order","text":"custom","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-decide_cluster_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decide cluster order — .decide_cluster_order","text":"Calculates order clusters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-dimPlot_2d_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":".dimPlot_2d_plotly — .dimPlot_2d_plotly","title":".dimPlot_2d_plotly — .dimPlot_2d_plotly","text":"Visualize cells 2D dimension reduction coordinates plotly","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-dimPlot_2d_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".dimPlot_2d_plotly — .dimPlot_2d_plotly","text":"","code":".dimPlot_2d_plotly(   gobject,   spat_unit = NULL,   feat_type = NULL,   dim_reduction_to_use = \"umap\",   dim_reduction_name = \"umap\",   dim1_to_use = 1,   dim2_to_use = 2,   spat_enr_names = NULL,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 0.5,   show_NN_network = FALSE,   nn_network_to_use = \"sNN\",   network_name = \"sNN.pca\",   color_as_factor = TRUE,   cell_color = NULL,   cell_color_code = NULL,   show_cluster_center = FALSE,   show_center_label = TRUE,   center_point_size = 4,   label_size = 4,   edge_alpha = NULL,   point_size = 5 )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-dimPlot_2d_plotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".dimPlot_2d_plotly — .dimPlot_2d_plotly","text":"plotly object","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-dimPlot_3d_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":".dimPlot_3d_plotly — .dimPlot_3d_plotly","title":".dimPlot_3d_plotly — .dimPlot_3d_plotly","text":"Visualize cells 3D dimension reduction coordinates plotly","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-dimPlot_3d_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".dimPlot_3d_plotly — .dimPlot_3d_plotly","text":"","code":".dimPlot_3d_plotly(   gobject,   spat_unit = NULL,   feat_type = NULL,   dim_reduction_to_use = \"umap\",   dim_reduction_name = \"umap\",   dim1_to_use = 1,   dim2_to_use = 2,   dim3_to_use = 3,   spat_enr_names = NULL,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 0.5,   show_NN_network = FALSE,   nn_network_to_use = \"sNN\",   network_name = \"sNN.pca\",   color_as_factor = TRUE,   cell_color = NULL,   cell_color_code = NULL,   show_cluster_center = FALSE,   show_center_label = TRUE,   center_point_size = 4,   label_size = 4,   edge_alpha = NULL,   point_size = 1 )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-dimPlot_3d_plotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".dimPlot_3d_plotly — .dimPlot_3d_plotly","text":"plotly object","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-sankey_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculations for a sankey relationship pair — .sankey_compare","title":"Calculations for a sankey relationship pair — .sankey_compare","text":"Generate data.table source, target, value relation pair well list node names used sankey plotting.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-sankey_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculations for a sankey relationship pair — .sankey_compare","text":"","code":".sankey_compare(data_dt, idx_start = 0)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-sankey_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculations for a sankey relationship pair — .sankey_compare","text":"data_dt data.table two columns. contain categorical data. idx_start starting index nodes","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-sankey_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculations for a sankey relationship pair — .sankey_compare","text":"list 1. node names 2. data.table cols source, target, value","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-sankey_networkd3.html","id":null,"dir":"Reference","previous_headings":"","what":"Create networkd3 sankey — .sankey_networkd3","title":"Create networkd3 sankey — .sankey_networkd3","text":"Wrapper networkd3's sankeyNetwork function. Adds additional params controlling plot.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-sankey_networkd3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create networkd3 sankey — .sankey_networkd3","text":"","code":".sankey_networkd3(   Links,   Nodes,   Source = \"source\",   Target = \"target\",   Value = \"value\",   NodeID = \"name\",   nodePadding = 1,   sinksRight = FALSE,   focus_names = NULL,   unfocused_replacer = \"\",   unfocused_color = FALSE,   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-sankey_networkd3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create networkd3 sankey — .sankey_networkd3","text":"networkd3 sankey","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-sankey_relation_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculations for a sankey relationship pair — .sankey_relation_pair","title":"Calculations for a sankey relationship pair — .sankey_relation_pair","text":"Get matched values compare giotto object. Comparison columns passed data.table .sankey_compare calculated.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-sankey_relation_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculations for a sankey relationship pair — .sankey_relation_pair","text":"","code":".sankey_relation_pair(g, gsp, rel_idx, node_idx_start = 0)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-sankey_relation_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculations for a sankey relationship pair — .sankey_relation_pair","text":"g giotto object gsp giottoSankeyPlan object rel_idx index relation pair gsp node_idx_start starting index assign new nodes","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-sankey_relation_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculations for a sankey relationship pair — .sankey_relation_pair","text":"list 1. node names 2. data.table cols source, target, value","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatInSituPlotDensity_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial in-situ density plot - single — .spatInSituPlotDensity_single","title":"Spatial in-situ density plot - single — .spatInSituPlotDensity_single","text":"low level function plot density plots spatial situ level","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatInSituPlotDensity_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial in-situ density plot - single — .spatInSituPlotDensity_single","text":"","code":".spatInSituPlotDensity_single(   gobject,   feat = NULL,   feat_type = \"rna\",   sdimx = \"x\",   sdimy = \"y\",   alpha = 0.95,   show_polygon = TRUE,   polygon_feat_type = \"cell\",   polygon_color = \"black\",   polygon_fill = NULL,   polygon_fill_as_factor = NULL,   polygon_alpha = 0.5,   polygon_size = 0.5,   coord_fix_ratio = NULL,   axis_text = 8,   axis_title = 8,   legend_text = 6,   background_color = \"black\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatInSituPlotDensity_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial in-situ density plot - single — .spatInSituPlotDensity_single","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatInSituPlotDensity_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial in-situ density plot - single — .spatInSituPlotDensity_single","text":"function can plot one feature one modality.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatInSituPlotHex_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial in-situ hexbin plot - single — .spatInSituPlotHex_single","title":"Spatial in-situ hexbin plot - single — .spatInSituPlotHex_single","text":"function plot hexbins spatial situ level","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatInSituPlotHex_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial in-situ hexbin plot - single — .spatInSituPlotHex_single","text":"","code":".spatInSituPlotHex_single(   gobject,   feat = NULL,   feat_type = \"rna\",   sdimx = \"x\",   sdimy = \"y\",   binwidth = NULL,   min_axis_bins = NULL,   alpha = 0.5,   show_polygon = TRUE,   polygon_feat_type = \"cell\",   polygon_color = \"black\",   polygon_fill = NULL,   polygon_fill_as_factor = NULL,   polygon_alpha = 0.5,   polygon_size = 0.5,   coord_fix_ratio = NULL,   axis_text = 8,   axis_title = 8,   legend_text = 6,   background_color = \"black\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatInSituPlotHex_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial in-situ hexbin plot - single — .spatInSituPlotHex_single","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatInSituPlotHex_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial in-situ hexbin plot - single — .spatInSituPlotHex_single","text":"function can plot one feature one modality.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatPlot2D_single.html","id":null,"dir":"Reference","previous_headings":"","what":".spatPlot2D_single — .spatPlot2D_single","title":".spatPlot2D_single — .spatPlot2D_single","text":"Visualize cells according spatial coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatPlot2D_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".spatPlot2D_single — .spatPlot2D_single","text":"","code":".spatPlot2D_single(   gobject,   feat_type = NULL,   spat_unit = NULL,   show_image = FALSE,   gimage = NULL,   image_name = NULL,   spat_loc_name = NULL,   sdimx = \"sdimx\",   sdimy = \"sdimy\",   spat_enr_names = NULL,   cell_color = NULL,   color_as_factor = TRUE,   cell_color_code = NULL,   cell_color_gradient = NULL,   gradient_midpoint = NULL,   gradient_style = \"divergent\",   gradient_limits = NULL,   select_cell_groups = NULL,   select_cells = NULL,   point_shape = c(\"border\", \"no_border\", \"voronoi\"),   point_size = 3,   point_alpha = 1,   point_border_col = \"black\",   point_border_stroke = 0.1,   show_cluster_center = FALSE,   show_center_label = FALSE,   center_point_size = 4,   center_point_border_col = \"black\",   center_point_border_stroke = 0.1,   label_size = 4,   label_fontface = \"bold\",   show_network = FALSE,   spatial_network_name = \"Delaunay_network\",   network_color = NULL,   network_alpha = 1,   show_grid = FALSE,   spatial_grid_name = \"spatial_grid\",   grid_color = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 1,   other_cells_alpha = 0.1,   coord_fix_ratio = 1,   title = NULL,   show_legend = TRUE,   legend_text = 8,   legend_symbol_size = 1,   background_color = \"white\",   vor_border_color = \"white\",   vor_max_radius = 200,   vor_alpha = 1,   axis_text = 8,   axis_title = 8,   theme_param = list(),   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   verbose = FALSE,   save_param = list(),   default_save_name = \"spatPlot2D_single\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatPlot2D_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".spatPlot2D_single — .spatPlot2D_single","text":"gobject giotto object feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") spat_unit spatial unit (e.g. \"cell\") show_image show tissue background image gimage giotto image image_name name giotto image(s) plot spat_loc_name name spatial locations sdimx x-axis dimension name (default = 'sdimx') sdimy y-axis dimension name (default = 'sdimy') spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points spatial_network_name name spatial network use network_color color spatial network network_alpha alpha spatial network show_grid show spatial grid spatial_grid_name name spatial grid use grid_color color spatial grid coord_fix_ratio fix ratio x y-axis vor_border_color border colorr voronoi plot vor_max_radius maximum radius voronoi 'cells' vor_alpha transparency voronoi 'cells' theme_param list additional params passed ggplot2::theme() show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot verbose verbose save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatPlot2D_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".spatPlot2D_single — .spatPlot2D_single","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatPlot2D_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":".spatPlot2D_single — .spatPlot2D_single","text":"Description parameters.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatPlot_2d_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":".spatPlot_2d_plotly — .spatPlot_2d_plotly","title":".spatPlot_2d_plotly — .spatPlot_2d_plotly","text":"Visualize cells 2D spatial locations plotly","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatPlot_2d_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".spatPlot_2d_plotly — .spatPlot_2d_plotly","text":"","code":".spatPlot_2d_plotly(   gobject,   spat_unit = NULL,   feat_type = NULL,   spat_loc_name = \"raw\",   sdimx = NULL,   sdimy = NULL,   spat_enr_names = NULL,   point_size = 3,   cell_color = NULL,   cell_color_code = NULL,   color_as_factor = TRUE,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 0.5,   show_network = FALSE,   spatial_network_name = \"spatial_network\",   network_color = \"lightgray\",   network_alpha = 1,   other_cell_alpha = 0.5,   show_grid = FALSE,   spatial_grid_name = \"spatial_grid\",   grid_color = NULL,   grid_alpha = 1,   show_legend = TRUE,   axis_scale = c(\"cube\", \"real\", \"custom\"),   custom_ratio = NULL,   x_ticks = NULL,   y_ticks = NULL,   show_plot = FALSE )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatPlot_2d_plotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".spatPlot_2d_plotly — .spatPlot_2d_plotly","text":"plotly object","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatPlot_3d_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":".spatPlot_3d_plotly — .spatPlot_3d_plotly","title":".spatPlot_3d_plotly — .spatPlot_3d_plotly","text":"Visualize cells 3D spatial locations plotly","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatPlot_3d_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".spatPlot_3d_plotly — .spatPlot_3d_plotly","text":"","code":".spatPlot_3d_plotly(   gobject,   spat_unit = NULL,   feat_type = NULL,   spat_loc_name = \"raw\",   sdimx = NULL,   sdimy = NULL,   sdimz = NULL,   spat_enr_names = NULL,   point_size = 3,   cell_color = NULL,   cell_color_code = NULL,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 0.5,   show_network = FALSE,   spatial_network_name = \"spatial_network\",   network_color = NULL,   network_alpha = 1,   other_cell_alpha = 0.5,   show_grid = FALSE,   spatial_grid_name = \"spatial_grid\",   title = \"\",   show_legend = TRUE,   axis_scale = c(\"cube\", \"real\", \"custom\"),   custom_ratio = NULL,   x_ticks = NULL,   y_ticks = NULL,   z_ticks = NULL,   show_plot = FALSE )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/dot-spatPlot_3d_plotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".spatPlot_3d_plotly — .spatPlot_3d_plotly","text":"plotly object","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/expand_feature_info.html","id":null,"dir":"Reference","previous_headings":"","what":"expand_feature_info — expand_feature_info","title":"expand_feature_info — expand_feature_info","text":"low level function expand feature coordinates adding jitter coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/expand_feature_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expand_feature_info — expand_feature_info","text":"","code":"expand_feature_info(   spatial_feat_info,   expand_counts = FALSE,   count_info_column = \"count\",   jitter = c(0, 0),   verbose = TRUE )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/expand_feature_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"expand_feature_info — expand_feature_info","text":"spatial_feat_info data.table spatial feature information expand_counts logical. whether points expanded based count jitter numeric vector. amount jitter add verbose verbose","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/expand_feature_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"expand_feature_info — expand_feature_info","text":"data.table","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/expand_feature_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"expand_feature_info — expand_feature_info","text":"","code":"g <- GiottoData::loadGiottoMini(\"vizgen\") #> 1. read Giotto object #> 2. read Giotto feature information #> /home/runner/work/_temp/Library/GiottoData/Mini_datasets/Vizgen/VizgenObject/Features/rna_feature_spatVector.shp #> rna #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> aggregate_spatInfo_spatVector.shp z0_spatInfo_spatVector.shp #>  z1_spatInfo_spatVector.shp #> aggregate #> z0 #> z1 #>  #> 3.2 read Giotto spatial centroid information #> aggregate #> z0 #> z1 #>  #> 3.3 read Giotto spatial overlap information #> rna_aggregate_spatInfo_spatVectorOverlaps.shp #>  rna_z0_spatInfo_spatVectorOverlaps.shp rna_z1_spatInfo_spatVectorOverlaps.shp #> poly_ID feat_ID feat_ID_uniq stack #> aggregate and rna #> poly_ID feat_ID feat_ID_uniq #> z0 and rna #> poly_ID feat_ID feat_ID_uniq #> z1 and rna #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed x <- GiottoClass::getFeatureInfo(g) x <- data.table::as.data.table(x)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/getColors.html","id":null,"dir":"Reference","previous_headings":"","what":"getColors — getColors","title":"getColors — getColors","text":"Generate hexadecimal color vectors use plotting based popular color palettes packages. Default 100 viridis colors. [continuous palettes] n colors pulled desired palette [discrete palettes] pulls n colors discrete palette. number colors requested within number discrete colors, values pulled without modification starting first value. requested exist palette made continuous","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/getColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getColors — getColors","text":"","code":"getColors(   pal = \"viridis\",   n = 100,   rev = FALSE,   src = NULL,   strategy = c(\"interpolate\") )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/getColors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getColors — getColors","text":"pal character. palette use. Partial matching ignored capitalization n numeric. number colors wanted rev whether reverse palette src specific palette package check strategy one 'interpolate', 'recycle', 'cutoff', strategy use colors requested exist palette","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/getColors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getColors — getColors","text":"vector color ids","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/getColors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"getColors — getColors","text":"","code":"f <- system.file(\"ex/elev.tif\", package = \"terra\") r <- terra::rast(f) terra::plot(r, col = getColors(pal = \"Spectral\", n = 100))"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/get_continuous_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a continuous set of colors — get_continuous_colors","title":"Generate a continuous set of colors — get_continuous_colors","text":"Based vector colors provided col, make colors continuous (.e. make possible arbitrary n number colors requested) return n colors.strategy describes make colors continuous: 'interpolate' interpolates provided colors using grDevices::colorRampPalette() 'recycle' - recycles input color vector across n requested. 'cutoff' - supply maximum many colors exist within originally supplied vector.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/get_continuous_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a continuous set of colors — get_continuous_colors","text":"","code":"get_continuous_colors(col, n, strategy)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/get_continuous_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a continuous set of colors — get_continuous_colors","text":"col character vector. colors make continuous n integer. number colors get strategy one 'cutoff', 'recycle', 'interpolate'. strategy use colors requested exist","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/get_continuous_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a continuous set of colors — get_continuous_colors","text":"vector colors","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/get_continuous_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a continuous set of colors — get_continuous_colors","text":"","code":"get_continuous_colors(col = \"#eb4034\", n = 10, strategy = \"interpolate\") #>  [1] \"#EB4034\" \"#EB4034\" \"#EB4034\" \"#EB4034\" \"#EB4034\" \"#EB4034\" \"#EB4034\" #>  [8] \"#EB4034\" \"#EB4034\" \"#EB4034\""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_annotation_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Append image to ggplot as annotation_raster — gg_annotation_raster","title":"Append image to ggplot as annotation_raster — gg_annotation_raster","text":"Append image ggplot annotation_raster","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_annotation_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append image to ggplot as annotation_raster — gg_annotation_raster","text":"","code":"# S4 method for gg,list gg_annotation_raster(ggobj, gimage, ...)  # S4 method for gg,giottoImage gg_annotation_raster(ggobj, gimage, ...)  # S4 method for gg,giottoLargeImage gg_annotation_raster(ggobj, gimage, ext = NULL, ...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_annotation_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append image to ggplot as annotation_raster — gg_annotation_raster","text":"ggobj ggplot2 gg object gimage giottoLargeImage, giottoImage list thereof ... additional params pass ext Object responds ext(). Defines plot spatial ROI image sampled .","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_annotation_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append image to ggplot as annotation_raster — gg_annotation_raster","text":"gg object images plot appended annotation rasters","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_annotation_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Append image to ggplot as annotation_raster — gg_annotation_raster","text":"... params implemented giottoImage.  ... params giottoLargeImage passes automated resampling params see ?auto_image_resample details","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_input.html","id":null,"dir":"Reference","previous_headings":"","what":"gg input — gg_input","title":"gg input — gg_input","text":"modular handling ggplot inputs functions may either append additional information ggplot object ggobject first made.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gg input — gg_input","text":"","code":"gg_input(ggobject)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gg input — gg_input","text":"ggobject ggplot object NULL","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gg input — gg_input","text":"ggplot object","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_simple_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"gg_simple_scatter — gg_simple_scatter","title":"gg_simple_scatter — gg_simple_scatter","text":"gg_simple_scatter","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_simple_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gg_simple_scatter — gg_simple_scatter","text":"","code":"gg_simple_scatter(   ggobject = NULL,   data,   x,   y,   xlab = \"x\",   ylab = \"y\",   main = NULL,   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_simple_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gg_simple_scatter — gg_simple_scatter","text":"ggobject ggplot2 object data data.frame-like object information plot x col plot x 'data' y col plot y 'data' xlab title x axis ylab title y axis main overall title plot ... Arguments passed ggplot2::aes","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_simple_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gg_simple_scatter — gg_simple_scatter","text":"ggplot object","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/gg_simple_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gg_simple_scatter — gg_simple_scatter","text":"","code":"x <- data.frame(x = rnorm(10), y = rnorm(10)) gg_simple_scatter(data = x, x = \"x\", y = \"y\")"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/giottoSankeyPlan.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 giottoSankeyPlan class — giottoSankeyPlan","title":"S4 giottoSankeyPlan class — giottoSankeyPlan","text":"Object organize sets information select Giotto object's metadata compare across annotations across spatial units feature types.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/giottoSankeyPlan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 giottoSankeyPlan class — giottoSankeyPlan","text":"giottoSankeyPlan","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/giottoSankeyPlan.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 giottoSankeyPlan class — giottoSankeyPlan","text":"set_address subnesting location within Giotto object metadata info stored data.table set_subset subset apply upon metadata info set set_label character label apply set data_type whether metadata cell feat relations data.table comparisons sets. sets referred zero indexed integers.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/giotto_point.html","id":null,"dir":"Reference","previous_headings":"","what":"giotto_point — giotto_point","title":"giotto_point — giotto_point","text":"uses ggplot::geom_point, scattermore::geom_scattermore scattermore::geom_scattermost","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/giotto_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"giotto_point — giotto_point","text":"","code":"giotto_point(   plot_method = c(\"ggplot\", \"scattermore\", \"scattermost\"),   size = 1,   scattermost_xy = NULL,   scattermost_color = NULL,   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/giotto_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"giotto_point — giotto_point","text":"... geom_point parameters","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/giotto_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"giotto_point — giotto_point","text":"ggplot2::geom_point layer","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/hidden_aliases.html","id":null,"dir":"Reference","previous_headings":"","what":"hidden_aliases — hidden_aliases","title":"hidden_aliases — hidden_aliases","text":"hidden_aliases","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/hidden_aliases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hidden_aliases — hidden_aliases","text":"","code":"# S4 method for giottoSankeyPlan,giottoSankeyPlan +(e1, e2)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/hidden_aliases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hidden_aliases — hidden_aliases","text":"e1, e2 giottoSankeyPlan","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/hidden_aliases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"hidden_aliases — hidden_aliases","text":"external methods","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/mixHSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Colormixing in HSV space — mixHSV","title":"Colormixing in HSV space — mixHSV","text":"Vectorized approximation additive-type color mixing using HSV colorspace. Intended helping plotting one variable time showing overlap. Since mixing performed using HSV, function interpolates hue mixtures, however due orthogonal nature HSV, imitate ability generate white red, green, blue RGB colorspace better . However, limitation fine use case prioritizes clearly understandable mixtures 2 colors. Additionally, orthogonal nature saturation value hue allows either treated absence signal alpha mixing match plotting backgrounds. Treating either white black base color makes either saturation black, respectively, treated alpha, applying weighting c1 c2 values mixing.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/mixHSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colormixing in HSV space — mixHSV","text":"","code":"mixHSV(c1, c2, base_color = c(\"white\", \"black\"), output = c(\"hex\", \"hsv\"))"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/mixHSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colormixing in HSV space — mixHSV","text":"c1, c2 Colors 1 2. Accepts vector hex color codes hsv matrix base_color either \"white\" (default) \"black\". color treat absence signal c1 c2 output either \"hex\" \"hsv\". \"hex\" produces vector hex codes color mixtures. \"hsv\" returns hsv matrix.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/mixHSV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colormixing in HSV space — mixHSV","text":"vector hex codes hsv matrix","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/mixHSV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colormixing in HSV space — mixHSV","text":"","code":"# with black background a <- GiottoVisuals::simple_palette_factory(c(\"green\", \"black\"))(255) b <- GiottoVisuals::simple_palette_factory(c(\"red\", \"black\", \"blue\"))(255) x <- mixHSV(a, b, base_color = \"black\")  op <- par(no.readonly = TRUE) par(bg = \"black\")  # plot input color vectors plot(seq(255),     y = rep(2, 255), col = a, pch = 15, ylim = c(0, 3),     bg = \"black\" ) points(seq(255), y = rep(1.5, 255), col = b, pch = 15) # plot mixture points(seq(255), y = rep(1, 255), col = x, pch = 15)   par(op)  # with white background a <- GiottoVisuals::simple_palette_factory(c(\"green\", \"white\"))(255) b <- GiottoVisuals::simple_palette_factory(c(\"red\", \"white\", \"blue\"))(255) x <- mixHSV(a, b, base_color = \"white\")  plot(seq(255),     y = rep(2, 255), col = a, pch = 15, ylim = c(0, 3),     bg = \"black\" ) points(seq(255), y = rep(1.5, 255), col = b, pch = 15) points(seq(255), y = rep(1, 255), col = x, pch = 15)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/mixRGB.html","id":null,"dir":"Reference","previous_headings":"","what":"Colormixing in RGB space — mixRGB","title":"Colormixing in RGB space — mixRGB","text":"Vectorized additive mixing colors RGB space.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/mixRGB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colormixing in RGB space — mixRGB","text":"","code":"mixRGB(c1, c2, output = c(\"hex\", \"rgb\"))"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/mixRGB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colormixing in RGB space — mixRGB","text":"c1, c2 Colors 1 2. Accepts vector hex color codes rgb matrix output either \"hex\" \"rgb\". \"hex\" produces vector hex codes color mixtures. \"rgb\" returns rgb matrix.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/mixRGB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colormixing in RGB space — mixRGB","text":"vector hex codes rgb matrix","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/mixRGB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colormixing in RGB space — mixRGB","text":"","code":"# with black background a <- GiottoVisuals::simple_palette_factory(c(\"green\", \"black\"))(255) b <- GiottoVisuals::simple_palette_factory(c(\"red\", \"black\", \"blue\"))(255) x <- mixRGB(a, b)  op <- par(no.readonly = TRUE) par(bg = \"black\")  # plot input color vectors plot(seq(255),     y = rep(2, 255), col = a, pch = 15, ylim = c(0, 3),     bg = \"black\" ) points(seq(255), y = rep(1.5, 255), col = b, pch = 15) # plot mixture points(seq(255), y = rep(1, 255), col = x, pch = 15)   par(op)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/pal_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palette names — pal_names","title":"Color palette names — pal_names","text":"Known color palettes info provided named list character vectors. List names correspond name palette package. character vectors list palettes available within. palettes can passed default color setting functions","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/pal_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palette names — pal_names","text":"","code":"pal_names"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/pal_names.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Color palette names — pal_names","text":"object class list length 11.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/pal_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color palette names — pal_names","text":"palette colors","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/pal_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color palette names — pal_names","text":"","code":"pal_names #> $hcl #>   [1] \"Pastel 1\"      \"Dark 2\"        \"Dark 3\"        \"Set 2\"         #>   [5] \"Set 3\"         \"Warm\"          \"Cold\"          \"Harmonic\"      #>   [9] \"Dynamic\"       \"Grays\"         \"Light Grays\"   \"Blues 2\"       #>  [13] \"Blues 3\"       \"Purples 2\"     \"Purples 3\"     \"Reds 2\"        #>  [17] \"Reds 3\"        \"Greens 2\"      \"Greens 3\"      \"Oslo\"          #>  [21] \"Purple-Blue\"   \"Red-Purple\"    \"Red-Blue\"      \"Purple-Orange\" #>  [25] \"Purple-Yellow\" \"Blue-Yellow\"   \"Green-Yellow\"  \"Red-Yellow\"    #>  [29] \"Heat\"          \"Heat 2\"        \"Terrain\"       \"Terrain 2\"     #>  [33] \"Viridis\"       \"Plasma\"        \"Inferno\"       \"Rocket\"        #>  [37] \"Mako\"          \"Dark Mint\"     \"Mint\"          \"BluGrn\"        #>  [41] \"Teal\"          \"TealGrn\"       \"Emrld\"         \"BluYl\"         #>  [45] \"ag_GrnYl\"      \"Peach\"         \"PinkYl\"        \"Burg\"          #>  [49] \"BurgYl\"        \"RedOr\"         \"OrYel\"         \"Purp\"          #>  [53] \"PurpOr\"        \"Sunset\"        \"Magenta\"       \"SunsetDark\"    #>  [57] \"ag_Sunset\"     \"BrwnYl\"        \"YlOrRd\"        \"YlOrBr\"        #>  [61] \"OrRd\"          \"Oranges\"       \"YlGn\"          \"YlGnBu\"        #>  [65] \"Reds\"          \"RdPu\"          \"PuRd\"          \"Purples\"       #>  [69] \"PuBuGn\"        \"PuBu\"          \"Greens\"        \"BuGn\"          #>  [73] \"GnBu\"          \"BuPu\"          \"Blues\"         \"Lajolla\"       #>  [77] \"Turku\"         \"Hawaii\"        \"Batlow\"        \"Blue-Red\"      #>  [81] \"Blue-Red 2\"    \"Blue-Red 3\"    \"Red-Green\"     \"Purple-Green\"  #>  [85] \"Purple-Brown\"  \"Green-Brown\"   \"Blue-Yellow 2\" \"Blue-Yellow 3\" #>  [89] \"Green-Orange\"  \"Cyan-Magenta\"  \"Tropic\"        \"Broc\"          #>  [93] \"Cork\"          \"Vik\"           \"Berlin\"        \"Lisbon\"        #>  [97] \"Tofino\"        \"ArmyRose\"      \"Earth\"         \"Fall\"          #> [101] \"Geyser\"        \"TealRose\"      \"Temps\"         \"PuOr\"          #> [105] \"RdBu\"          \"RdGy\"          \"PiYG\"          \"PRGn\"          #> [109] \"BrBG\"          \"RdYlBu\"        \"RdYlGn\"        \"Spectral\"      #> [113] \"Zissou 1\"      \"Cividis\"       \"Roma\"          #>  #> $base #> [1] \"rainbow\"        \"heat\"           \"terrain.colors\" \"topo.colors\"    #> [5] \"cm.colors\"      \"grey\"           \"gray\"           #>  #> $RColorBrewer #>  [1] \"BrBG\"     \"PiYG\"     \"PRGn\"     \"PuOr\"     \"RdBu\"     \"RdGy\"     #>  [7] \"RdYlBu\"   \"RdYlGn\"   \"Spectral\" \"Accent\"   \"Dark2\"    \"Paired\"   #> [13] \"Pastel1\"  \"Pastel2\"  \"Set1\"     \"Set2\"     \"Set3\"     \"Blues\"    #> [19] \"BuGn\"     \"BuPu\"     \"GnBu\"     \"Greens\"   \"Oranges\"  \"OrRd\"     #> [25] \"PuBu\"     \"PuBuGn\"   \"PuRd\"     \"Purples\"  \"RdPu\"     \"Reds\"     #> [31] \"YlGn\"     \"YlGnBu\"   \"YlOrBr\"   \"YlOrRd\"   #>  #> $viridis #> [1] \"viridis\" \"magma\"   \"cividis\" \"inferno\" \"mako\"    \"plasma\"  \"rocket\"  #> [8] \"turbo\"   #>  #> $wesanderson #>  [1] \"BottleRocket1\"  \"BottleRocket2\"  \"Rushmore1\"      \"Rushmore\"       #>  [5] \"Royal1\"         \"Royal2\"         \"Zissou1\"        \"Darjeeling1\"    #>  [9] \"Darjeeling2\"    \"Chevalier1\"     \"FantasticFox1\"  \"Moonrise1\"      #> [13] \"Moonrise2\"      \"Moonrise3\"      \"Cavalcanti1\"    \"GrandBudapest1\" #> [17] \"GrandBudapest2\" \"IsleofDogs1\"    \"IsleofDogs2\"    #>  #> $ggsci #>  [1] \"aaas\"         \"cosmic\"       \"d3\"           \"flatui\"       \"frontiers\"    #>  [6] \"futurama\"     \"gsea\"         \"igv\"          \"jama\"         \"jco\"          #> [11] \"lancet\"       \"locuszoom\"    \"material\"     \"nejm\"         \"npg\"          #> [16] \"rickandmorty\" \"simpsons\"     \"startrek\"     \"tron\"         \"uchicago\"     #> [21] \"ucscgb\"       #>  #> $nord #>  [1] \"polarnight\"       \"snowstorm\"        \"frost\"            \"aurora\"           #>  [5] \"lumina\"           \"mountain_forms\"   \"silver_mine\"      \"lake_superior\"    #>  [9] \"victory_bonds\"    \"halifax_harbor\"   \"moose_pond\"       \"algoma_forest\"    #> [13] \"rocky_mountain\"   \"red_mountain\"     \"baie_mouton\"      \"afternoon_prarie\" #>  #> $palettetown #>  [1] \"charizard\" \"pidgeotto\" \"tangela\"   \"porygon\"   \"quilava\"   \"sunkern\"   #>  [7] \"yanma\"     \"surskit\"   \"plusle\"    \"carvanha\"  #>  #> $palr #> [1] \"bathy_deep_pal\" \"bathyDeepPal\"   \"chl_pal\"        \"chlPal\"         #> [5] \"ice_pal\"        \"icePal\"         \"sst_pal\"        \"sstPal\"         #>  #> $NineteenEightyR #>  [1] \"cobra\"                   \"electronic_night\"        #>  [3] \"hotpink\"                 \"malibu\"                  #>  [5] \"miami1\"                  \"miami2\"                  #>  [7] \"seventies_aint_done_yet\" \"sonny\"                   #>  [9] \"sunset1\"                 \"sunset2\"                 #> [11] \"sunset3\"                 \"youngturqs\"              #>  #> $rcartocolor #>  [1] \"ag_GrnYl\"   \"ag_Sunset\"  \"ArmyRose\"   \"Earth\"      \"Fall\"       #>  [6] \"Geyser\"     \"TealRose\"   \"Temps\"      \"Tropic\"     \"Antique\"    #> [11] \"Bold\"       \"Pastel\"     \"Prism\"      \"Safe\"       \"Vivid\"      #> [16] \"BluGrn\"     \"BluYl\"      \"BrwnYl\"     \"Burg\"       \"BurgYl\"     #> [21] \"DarkMint\"   \"Emrld\"      \"Magenta\"    \"Mint\"       \"OrYel\"      #> [26] \"Peach\"      \"PinkYl\"     \"Purp\"       \"PurpOr\"     \"RedOr\"      #> [31] \"Sunset\"     \"SunsetDark\" \"Teal\"       \"TealGrn\"    #>"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"plotHeatmap — plotHeatmap","title":"plotHeatmap — plotHeatmap","text":"Creates heatmap features clusters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotHeatmap — plotHeatmap","text":"","code":"plotHeatmap(   gobject,   spat_unit = NULL,   feat_type = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   feats,   cluster_column = NULL,   cluster_order = c(\"size\", \"correlation\", \"custom\"),   cluster_custom_order = NULL,   cluster_color_code = NULL,   cluster_cor_method = \"pearson\",   cluster_hclust_method = \"ward.D\",   feat_order = c(\"correlation\", \"custom\"),   feat_custom_order = NULL,   feat_cor_method = \"pearson\",   feat_hclust_method = \"complete\",   show_values = c(\"rescaled\", \"z-scaled\", \"original\"),   size_vertical_lines = 1.1,   gradient_colors = deprecated(),   gradient_color = NULL,   gradient_style = c(\"divergent\", \"sequential\"),   feat_label_selection = NULL,   axis_text_y_size = NULL,   legend_nrows = 1,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"plotHeatmap\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotHeatmap — plotHeatmap","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") expression_values expression values use (e.g. \"normalized\", \"scaled\", \"custom\") feats features use cluster_column name column use clusters (e.g. \"leiden_clus\") cluster_order method determine cluster order (e.g. \"size\", \"correlation\", \"custom\") cluster_custom_order custom order clusters cluster_color_code color code clusters cluster_cor_method method cluster correlation, default \"pearson\" cluster_hclust_method method hierarchical clustering clusters, default \"ward.D\" feat_order method determine features order (e.g. \"correlation\", \"custom\") feat_custom_order custom order features feat_cor_method method features correlation, default \"pearson\" feat_hclust_method method hierarchical clustering features, default \"complete\" show_values values show heatmap (e.g. \"rescaled\", \"z-scaled\", \"original\") size_vertical_lines sizes vertical lines gradient_colors deprecated gradient_color character. continuous colors use. palette use vector colors use (minimum 2). gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) feat_label_selection subset features show y-axis axis_text_y_size size y-axis text legend_nrows number rows cluster legend show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotHeatmap — plotHeatmap","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotHeatmap — plotHeatmap","text":"want display many features 2 ways proceed: 1. set axis_text_y_size small value show features 2. provide subset features display feat_label_selection","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotHeatmap — plotHeatmap","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed plotHeatmap(g, feats = c(\"Gm19935\", \"Gna12\", \"Ccnd2\", \"Btbd17\"), cluster_column = \"leiden_clus\") #> Warning: Multiple components found; returning the first one. To return all, use `return_all = TRUE`."},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotMetaDataCellsHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"plotMetaDataCellsHeatmap — plotMetaDataCellsHeatmap","title":"plotMetaDataCellsHeatmap — plotMetaDataCellsHeatmap","text":"Creates heatmap numeric cell metadata within aggregated clusters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotMetaDataCellsHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotMetaDataCellsHeatmap — plotMetaDataCellsHeatmap","text":"","code":"plotMetaDataCellsHeatmap(   gobject,   spat_unit = NULL,   feat_type = NULL,   metadata_cols = NULL,   spat_enr_names = NULL,   value_cols = NULL,   first_meta_col = NULL,   second_meta_col = NULL,   show_values = c(\"zscores\", \"original\", \"zscores_rescaled\"),   custom_cluster_order = NULL,   clus_cor_method = \"pearson\",   clus_cluster_method = \"complete\",   custom_values_order = NULL,   values_cor_method = \"pearson\",   values_cluster_method = \"complete\",   gradient_color = NULL,   gradient_midpoint = 0,   gradient_style = c(\"divergent\", \"sequential\"),   midpoint = deprecated(),   x_text_size = 8,   x_text_angle = 45,   y_text_size = 8,   strip_text_size = 8,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"plotMetaDataCellsHeatmap\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotMetaDataCellsHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotMetaDataCellsHeatmap — plotMetaDataCellsHeatmap","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") metadata_cols annotation columns found pDataDT(gobject) spat_enr_names spatial enrichment results include value_cols value columns use first_meta_col 1 metadata column, select x-axis factor second_meta_col 1 metadata column, select facetting factor show_values values show heatmap (e.g. \"zscores\", \"original\", \"zscores_rescaled\") custom_cluster_order custom cluster order (default = NULL) clus_cor_method correlation method clusters, default \"pearson\" clus_cluster_method hierarchical cluster method clusters, default \"complete\" custom_values_order custom values order (default = NULL) values_cor_method correlation method values, default \"pearson\" values_cluster_method hierarchical cluster method values, default \"complete\" gradient_color character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) midpoint deprecated. Use gradient_midpoint. x_text_size size x-axis text x_text_angle angle x-axis text y_text_size size y-axis text strip_text_size size strip text show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotMetaDataCellsHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotMetaDataCellsHeatmap — plotMetaDataCellsHeatmap","text":"ggplot data.table","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotMetaDataCellsHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotMetaDataCellsHeatmap — plotMetaDataCellsHeatmap","text":"Creates heatmap average values selected value columns different annotation groups.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotMetaDataHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"plotMetaDataHeatmap — plotMetaDataHeatmap","title":"plotMetaDataHeatmap — plotMetaDataHeatmap","text":"Creates heatmap features within aggregated clusters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotMetaDataHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotMetaDataHeatmap — plotMetaDataHeatmap","text":"","code":"plotMetaDataHeatmap(   gobject,   spat_unit = NULL,   feat_type = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   metadata_cols = NULL,   selected_feats = NULL,   first_meta_col = NULL,   second_meta_col = NULL,   show_values = c(\"zscores\", \"original\", \"zscores_rescaled\"),   custom_cluster_order = NULL,   clus_cor_method = \"pearson\",   clus_cluster_method = \"complete\",   custom_feat_order = NULL,   feat_cor_method = \"pearson\",   feat_cluster_method = \"complete\",   gradient_color = NULL,   gradient_midpoint = 0,   gradient_style = c(\"divergent\", \"sequential\"),   gradient_limits = NULL,   x_text_size = 10,   x_text_angle = 45,   y_text_size = 10,   strip_text_size = 8,   title = NULL,   plot_title = deprecated(),   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"plotMetaDataHeatmap\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotMetaDataHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotMetaDataHeatmap — plotMetaDataHeatmap","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") expression_values expression values use (e.g. \"normalized\", \"scaled\", \"custom\") metadata_cols annotation columns found pDataDT(gobject) selected_feats subset features use first_meta_col 1 metadata column, select x-axis factor second_meta_col 1 metadata column, select facetting factor show_values values show heatmap (e.g. \"zscores\", \"original\", \"zscores_rescaled\") custom_cluster_order custom cluster order (default = NULL) clus_cor_method correlation method clusters, default \"pearson\" clus_cluster_method hierarchical cluster method clusters, default \"complete\" custom_feat_order custom feature order (default = NULL) feat_cor_method correlation method features, default \"pearson\" feat_cluster_method hierarchical cluster method features, default \"complete\" gradient_color character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits x_text_size size x-axis text x_text_angle angle x-axis text y_text_size size y-axis text strip_text_size size strip text title character. title plot, defaults cell_color parameter plot_title deprecated. Use title param show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotMetaDataHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotMetaDataHeatmap — plotMetaDataHeatmap","text":"ggplot data.table","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotMetaDataHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotMetaDataHeatmap — plotMetaDataHeatmap","text":"Creates heatmap average expression selected features different annotation/cluster groups. Calculation cluster feature order done provided expression values, visualization default z-scores. options original values z-scores rescaled per feature (-1 1).","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotMetaDataHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotMetaDataHeatmap — plotMetaDataHeatmap","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed plotMetaDataHeatmap(g, metadata_cols = \"leiden_clus\", selected_feats = c(\"Gna12\", \"Ccnd2\", \"Btbd17\", \"Gm19935\"))"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"plotPCA — plotPCA","title":"plotPCA — plotPCA","text":"Short wrapper PCA visualization","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotPCA — plotPCA","text":"","code":"plotPCA(gobject, dim_reduction_name = NULL, default_save_name = \"PCA\", ...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotPCA — plotPCA","text":"gobject giotto object dim_reduction_name name PCA default_save_name default save name PCA plot ... Arguments passed dimPlot2D spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align group_by character. Create multiple plots based cell annotation column group_by_subset character. subset group_by factor column gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points center_point_border_col border color center points center_point_border_stroke border stroke size center points label_size size labels label_fontface font labels edge_alpha column use alpha edges point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points point_border_col color border around points point_border_stroke stroke size border around points title character. title plot, defaults cell_color parameter show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols background_color color plot background axis_text size axis text axis_title size axis title","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotPCA — plotPCA","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotPCA — plotPCA","text":"Description parameters, see dimPlot2D. 3D plots see plotPCA_3D","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotPCA — plotPCA","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed plotPCA(g)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_2D.html","id":null,"dir":"Reference","previous_headings":"","what":"plotPCA_2D — plotPCA_2D","title":"plotPCA_2D — plotPCA_2D","text":"Short wrapper PCA visualization","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotPCA_2D — plotPCA_2D","text":"","code":"plotPCA_2D(   gobject,   dim_reduction_name = NULL,   default_save_name = \"PCA_2D\",   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotPCA_2D — plotPCA_2D","text":"gobject giotto object dim_reduction_name name PCA default_save_name default save name PCA plot ... Arguments passed dimPlot2D spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align group_by character. Create multiple plots based cell annotation column group_by_subset character. subset group_by factor column gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points center_point_border_col border color center points center_point_border_stroke border stroke size center points label_size size labels label_fontface font labels edge_alpha column use alpha edges point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points point_border_col color border around points point_border_stroke stroke size border around points title character. title plot, defaults cell_color parameter show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols background_color color plot background axis_text size axis text axis_title size axis title","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotPCA_2D — plotPCA_2D","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_2D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotPCA_2D — plotPCA_2D","text":"Description parameters, see dimPlot2D. 3D plots see plotPCA_3D","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotPCA_2D — plotPCA_2D","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed plotPCA_2D(g)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"plotPCA_3D — plotPCA_3D","title":"plotPCA_3D — plotPCA_3D","text":"Visualize cells according 3D PCA dimension reduction","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotPCA_3D — plotPCA_3D","text":"","code":"plotPCA_3D(   gobject,   dim_reduction_name = \"pca\",   default_save_name = \"PCA_3D\",   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotPCA_3D — plotPCA_3D","text":"gobject giotto object dim_reduction_name name PCA default_save_name default save name PCA plot ... Arguments passed dimPlot3D spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis dim3_to_use numeric. dimension use z-axis show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points label_size size labels edge_alpha column use alpha edges point_size size point (cell)","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotPCA_3D — plotPCA_3D","text":"plotly","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotPCA_3D — plotPCA_3D","text":"Description parameters.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotPCA_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotPCA_3D — plotPCA_3D","text":"","code":"g <- GiottoData::loadGiottoMini(\"starmap\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed plotPCA_3D(g) #> create 3D plot"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotStatDelaunayNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"plotStatDelaunayNetwork — plotStatDelaunayNetwork","title":"plotStatDelaunayNetwork — plotStatDelaunayNetwork","text":"Plots network statistics Delaunay network..","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotStatDelaunayNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotStatDelaunayNetwork — plotStatDelaunayNetwork","text":"","code":"plotStatDelaunayNetwork(   gobject,   feat_type = NULL,   spat_unit = NULL,   method = c(\"deldir\", \"delaunayn_geometry\", \"RTriangle\"),   dimensions = \"all\",   maximum_distance = \"auto\",   minimum_k = 0,   options = \"Pp\",   Y = TRUE,   j = TRUE,   S = 0,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"plotStatDelaunayNetwork\",   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotStatDelaunayNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotStatDelaunayNetwork — plotStatDelaunayNetwork","text":"gobject giotto object feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") spat_unit spatial unit (e.g. \"cell\") method package use create Delaunay network dimensions spatial dimensions use (maximum 2 dimensions) maximum_distance distance cuttof Delaunay neighbors consider minimum_k minimum neigbhours maximum_distance != NULL options (geometry) String containing extra control options underlying Qhull command; see Qhull documentation (../doc/qhull/html/qdelaun.html) available options. (default = 'Pp', report precision problems) Y (RTriangle) TRUE prohibits insertion Steiner points mesh boundary. j (RTriangle) TRUE jettisons vertices part final triangulation output. S (RTriangle) Specifies maximum number added Steiner points. show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param ... parameters","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotStatDelaunayNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotStatDelaunayNetwork — plotStatDelaunayNetwork","text":"giotto object updated spatial network slot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE.html","id":null,"dir":"Reference","previous_headings":"","what":"plotTSNE — plotTSNE","title":"plotTSNE — plotTSNE","text":"Short wrapper tSNE visualization","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotTSNE — plotTSNE","text":"","code":"plotTSNE(gobject, dim_reduction_name = NULL, default_save_name = \"tSNE\", ...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotTSNE — plotTSNE","text":"gobject giotto object dim_reduction_name name TSNE default_save_name default save name TSNE plot ... Arguments passed dimPlot2D spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align group_by character. Create multiple plots based cell annotation column group_by_subset character. subset group_by factor column gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points center_point_border_col border color center points center_point_border_stroke border stroke size center points label_size size labels label_fontface font labels edge_alpha column use alpha edges point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points point_border_col color border around points point_border_stroke stroke size border around points title character. title plot, defaults cell_color parameter show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols background_color color plot background axis_text size axis text axis_title size axis title","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotTSNE — plotTSNE","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotTSNE — plotTSNE","text":"Description parameters, see dimPlot2D. 3D plots see plotTSNE_3D","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotTSNE — plotTSNE","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed plotTSNE(g)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_2D.html","id":null,"dir":"Reference","previous_headings":"","what":"plotTSNE_2D — plotTSNE_2D","title":"plotTSNE_2D — plotTSNE_2D","text":"Short wrapper tSNE visualization","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotTSNE_2D — plotTSNE_2D","text":"","code":"plotTSNE_2D(   gobject,   dim_reduction_name = NULL,   default_save_name = \"tSNE_2D\",   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotTSNE_2D — plotTSNE_2D","text":"gobject giotto object dim_reduction_name name TSNE default_save_name default save name TSNE plot ... Arguments passed dimPlot2D spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align group_by character. Create multiple plots based cell annotation column group_by_subset character. subset group_by factor column gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points center_point_border_col border color center points center_point_border_stroke border stroke size center points label_size size labels label_fontface font labels edge_alpha column use alpha edges point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points point_border_col color border around points point_border_stroke stroke size border around points title character. title plot, defaults cell_color parameter show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols background_color color plot background axis_text size axis text axis_title size axis title","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotTSNE_2D — plotTSNE_2D","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_2D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotTSNE_2D — plotTSNE_2D","text":"Description parameters, see dimPlot2D. 3D plots see plotTSNE_3D","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotTSNE_2D — plotTSNE_2D","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed plotTSNE_2D(g)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"plotTSNE_3D — plotTSNE_3D","title":"plotTSNE_3D — plotTSNE_3D","text":"Visualize cells according dimension reduction coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotTSNE_3D — plotTSNE_3D","text":"","code":"plotTSNE_3D(   gobject,   dim_reduction_name = \"tsne\",   default_save_name = \"TSNE_3D\",   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotTSNE_3D — plotTSNE_3D","text":"gobject giotto object dim_reduction_name name TSNE default_save_name default save name TSNE plot ... Arguments passed dimPlot3D spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis dim3_to_use numeric. dimension use z-axis show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points label_size size labels edge_alpha column use alpha edges point_size size point (cell)","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotTSNE_3D — plotTSNE_3D","text":"plotly","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotTSNE_3D — plotTSNE_3D","text":"Description parameters.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotTSNE_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotTSNE_3D — plotTSNE_3D","text":"","code":"g <- GiottoData::loadGiottoMini(\"starmap\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed plotTSNE_3D(g) #> create 3D plot #> Error in dim_dfr[, c(dim1_to_use, dim2_to_use, dim3_to_use)]: subscript out of bounds"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP.html","id":null,"dir":"Reference","previous_headings":"","what":"plotUMAP — plotUMAP","title":"plotUMAP — plotUMAP","text":"Short wrapper UMAP visualization","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotUMAP — plotUMAP","text":"","code":"plotUMAP(gobject, dim_reduction_name = NULL, default_save_name = \"UMAP\", ...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotUMAP — plotUMAP","text":"gobject giotto object dim_reduction_name name UMAP default_save_name default save name UMAP plot ... Arguments passed dimPlot2D spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align group_by character. Create multiple plots based cell annotation column group_by_subset character. subset group_by factor column gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points center_point_border_col border color center points center_point_border_stroke border stroke size center points label_size size labels label_fontface font labels edge_alpha column use alpha edges point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points point_border_col color border around points point_border_stroke stroke size border around points title character. title plot, defaults cell_color parameter show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols background_color color plot background axis_text size axis text axis_title size axis title","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotUMAP — plotUMAP","text":"ggplot","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotUMAP — plotUMAP","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed plotUMAP(g)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_2D.html","id":null,"dir":"Reference","previous_headings":"","what":"plotUMAP_2D — plotUMAP_2D","title":"plotUMAP_2D — plotUMAP_2D","text":"Short wrapper UMAP visualization","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotUMAP_2D — plotUMAP_2D","text":"","code":"plotUMAP_2D(   gobject,   dim_reduction_name = NULL,   default_save_name = \"UMAP_2D\",   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotUMAP_2D — plotUMAP_2D","text":"gobject giotto object dim_reduction_name name UMAP default_save_name default save name UMAP plot ... Arguments passed dimPlot2D spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align group_by character. Create multiple plots based cell annotation column group_by_subset character. subset group_by factor column gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points center_point_border_col border color center points center_point_border_stroke border stroke size center points label_size size labels label_fontface font labels edge_alpha column use alpha edges point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points point_border_col color border around points point_border_stroke stroke size border around points title character. title plot, defaults cell_color parameter show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols background_color color plot background axis_text size axis text axis_title size axis title","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotUMAP_2D — plotUMAP_2D","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_2D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotUMAP_2D — plotUMAP_2D","text":"Description parameters, see dimPlot2D. 3D plots see plotUMAP_3D","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotUMAP_2D — plotUMAP_2D","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed plotUMAP_2D(g)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"plotUMAP_3D — plotUMAP_3D","title":"plotUMAP_3D — plotUMAP_3D","text":"Visualize cells according dimension reduction coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotUMAP_3D — plotUMAP_3D","text":"","code":"plotUMAP_3D(   gobject,   dim_reduction_name = \"umap\",   default_save_name = \"UMAP_3D\",   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotUMAP_3D — plotUMAP_3D","text":"gobject giotto object dim_reduction_name name UMAP default_save_name default save name UMAP plot ... Arguments passed dimPlot3D spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis dim3_to_use numeric. dimension use z-axis show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points label_size size labels edge_alpha column use alpha edges point_size size point (cell)","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotUMAP_3D — plotUMAP_3D","text":"plotly","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotUMAP_3D — plotUMAP_3D","text":"Description parameters.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotUMAP_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotUMAP_3D — plotUMAP_3D","text":"","code":"g <- GiottoData::loadGiottoMini(\"starmap\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed plotUMAP_3D(g) #> create 3D plot #> Error in dim_dfr[, c(dim1_to_use, dim2_to_use, dim3_to_use)]: subscript out of bounds"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_cell_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: plot_cell_params — plot_cell_params","title":"Params documentation template: plot_cell_params — plot_cell_params","text":"Params documentation template: plot_cell_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_cell_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: plot_cell_params — plot_cell_params","text":"cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2).","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_cell_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: plot_cell_params — plot_cell_params","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_cow_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: plot_cow_params — plot_cow_params","title":"Params documentation template: plot_cow_params — plot_cow_params","text":"Params documentation template: plot_cow_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_cow_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: plot_cow_params — plot_cow_params","text":"cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_cow_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: plot_cow_params — plot_cow_params","text":"cowplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_dimred_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: plot_dimred_params — plot_dimred_params","title":"Params documentation template: plot_dimred_params — plot_dimred_params","text":"Params documentation template: plot_dimred_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_dimred_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: plot_dimred_params — plot_dimred_params","text":"dim_reduction_to_use character. dimension reduction use dim_reduction_name character. dimension reduction name dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis dim3_to_use numeric. dimension use z-axis dim_point_shape point border (border no_border) dim_point_size size points dim. reduction space dim_point_alpha transparancy point dim. reduction space dim_point_border_col border color points dim. reduction space dim_point_border_stroke border stroke points dim. reduction space","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_dimred_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: plot_dimred_params — plot_dimred_params","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_feat_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: plot_feat_params — plot_feat_params","title":"Params documentation template: plot_feat_params — plot_feat_params","text":"Params documentation template: plot_feat_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_feat_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: plot_feat_params — plot_feat_params","text":"feats_color_code code color provided features feat_shape_code code shape provided feature types","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_feat_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: plot_feat_params — plot_feat_params","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_image_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: plot_image_params — plot_image_params","title":"Params documentation template: plot_image_params — plot_image_params","text":"Params documentation template: plot_image_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_image_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: plot_image_params — plot_image_params","text":"show_image show tissue background image gimage giotto image image_name name giotto image multiple images group_by largeImage_name name giottoLargeImage multiple images group_by","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_image_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: plot_image_params — plot_image_params","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_nn_net_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: plot_nn_net_params — plot_nn_net_params","title":"Params documentation template: plot_nn_net_params — plot_nn_net_params","text":"Params documentation template: plot_nn_net_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_nn_net_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: plot_nn_net_params — plot_nn_net_params","text":"show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE nn_network_name character. name NN network use, show_NN_network = TRUE network_color color NN network nn_network_alpha column use alpha edges","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_nn_net_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: plot_nn_net_params — plot_nn_net_params","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_output_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting output handler — plot_output_handler","title":"Plotting output handler — plot_output_handler","text":"Simple wrapper handling Giotto's framework plotting outputs saving Plotting functions return using handler.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_output_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting output handler — plot_output_handler","text":"","code":"plot_output_handler(   gobject,   plot_object,   save_plot = NULL,   return_plot = NULL,   show_plot = NULL,   default_save_name = NULL,   save_param = list(),   else_return = NULL )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_output_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting output handler — plot_output_handler","text":"gobject giotto object plot_object plot object save_plot logical. (defaults instructions setting) whether save plot return_plot logical. (defaults instructions setting) whether return plot object show_plot logical. (defaults instructions setting) whether print plot display device default_save_name default name use (set specific plotting function. Users interact parameter) save_param list plot saving parameters see showSaveParameters() else_return optional. returned instead plot object returned","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_output_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting output handler — plot_output_handler","text":"plot object","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_output_handler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting output handler — plot_output_handler","text":"","code":"g <- GiottoData::loadGiottoMini(\"vizgen\") #> 1. read Giotto object #> 2. read Giotto feature information #> /home/runner/work/_temp/Library/GiottoData/Mini_datasets/Vizgen/VizgenObject/Features/rna_feature_spatVector.shp #> rna #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> aggregate_spatInfo_spatVector.shp z0_spatInfo_spatVector.shp #>  z1_spatInfo_spatVector.shp #> aggregate #> z0 #> z1 #>  #> 3.2 read Giotto spatial centroid information #> aggregate #> z0 #> z1 #>  #> 3.3 read Giotto spatial overlap information #> rna_aggregate_spatInfo_spatVectorOverlaps.shp #>  rna_z0_spatInfo_spatVectorOverlaps.shp rna_z1_spatInfo_spatVectorOverlaps.shp #> poly_ID feat_ID feat_ID_uniq stack #> aggregate and rna #> poly_ID feat_ID feat_ID_uniq #> z0 and rna #> poly_ID feat_ID feat_ID_uniq #> z1 and rna #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed g_spatplot <- spatPlot2D(g, return_plot = TRUE)   plot_output_handler(g, plot_object = g_spatplot, save_plot = FALSE)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_output_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: plot_output_params — plot_output_params","title":"Params documentation template: plot_output_params — plot_output_params","text":"Params documentation template: plot_output_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_output_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: plot_output_params — plot_output_params","text":"show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_output_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: plot_output_params — plot_output_params","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: plot_params — plot_params","title":"Params documentation template: plot_params — plot_params","text":"Params documentation template: plot_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: plot_params — plot_params","text":"group_by character. Create multiple plots based cell annotation column group_by_subset character. subset group_by factor column gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits gradient_color character. continuous colors use. palette use vector colors use (minimum 2). select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_cell_alpha (0 1) alpha selected cells other_cells_alpha (0 1) alpha selected cells other_point_size point size selected cells show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points center_point_border_col border color center points center_point_border_stroke border stroke size center points label_size size labels label_fontface font labels edge_alpha column use alpha edges point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points point_border_col color border around points point_border_stroke stroke size border around points title character. title plot, defaults cell_color parameter show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols background_color color plot background axis_text size axis text axis_title size axis title","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: plot_params — plot_params","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_poly_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: plot_poly_params — plot_poly_params","title":"Params documentation template: plot_poly_params — plot_poly_params","text":"Params documentation template: plot_poly_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_poly_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: plot_poly_params — plot_poly_params","text":"show_polygon overlay polygon information (e.g. cell shape) use_overlap use polygon feature coordinates overlap results polygon_feat_type feature type associated polygon information polygon_color color polygon border. Set NA remove border polygon_bg_color color polygon background (overruled polygon_fill) polygon_fill character. color fill polgyons (e.g. metadata col spatial enrichment col) polygon_fill_gradient polygon fill gradient colors given order low high polygon_fill_gradient_midpoint value set gradient midpoint (optional). left NULL, median value detected chosen polygon_fill_gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) polygon_fill_as_factor fill color factor polygon_fill_code code color fill column polygon_alpha alpha polygon polygon_line_size line width polygon's outline","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_poly_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: plot_poly_params — plot_poly_params","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot saving — plot_save","title":"Plot saving — plot_save","text":"Functions automatically save plots directory interest","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot saving — plot_save","text":"","code":".ggplot_save_function(   gobject,   plot_object,   save_dir = NULL,   save_folder = NULL,   save_name = NULL,   default_save_name = \"giotto_plot\",   save_format = NULL,   show_saved_plot = FALSE,   ncol = 1,   nrow = 1,   scale = 1,   base_width = NULL,   base_height = NULL,   base_aspect_ratio = NULL,   units = NULL,   dpi = NULL,   limitsize = TRUE,   plot_count = NULL,   ... )  .general_save_function(   gobject,   plot_object,   save_dir = NULL,   save_folder = NULL,   save_name = NULL,   default_save_name = \"giotto_plot\",   save_format = c(\"png\", \"tiff\", \"pdf\", \"svg\"),   show_saved_plot = FALSE,   base_width = NULL,   base_height = NULL,   base_aspect_ratio = NULL,   units = NULL,   dpi = NULL,   plot_count = NULL,   ... )  all_plots_save_function(   gobject,   plot_object,   save_dir = NULL,   save_folder = NULL,   save_name = NULL,   default_save_name = \"giotto_plot\",   save_format = NULL,   show_saved_plot = FALSE,   ncol = 1,   nrow = 1,   scale = 1,   base_width = NULL,   base_height = NULL,   base_aspect_ratio = NULL,   units = NULL,   dpi = NULL,   limitsize = TRUE,   plot_count = NULL,   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot saving — plot_save","text":"gobject giotto object giottoInstructions plot_object ggplot object plot save_dir directory save save_folder folder save_dir save save_name name plot default_save_name default name save plot save_format format (e.g. png, tiff, pdf, ...) show_saved_plot load & display saved plot ncol number columns multiplots nrow number rows multiplot scale scale plots base_width width plot base_height height plot base_aspect_ratio aspect ratio plot units plotting units (e.g. ) dpi dpi plot plot raster format limitsize TRUE (default), ggsave save images larger 50x50 inches, prevent common error specifying dimensions pixels. plot_count manually set plot count appended default_save_name ... additional parameters pass downstream save functions","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot saving — plot_save","text":"plot file","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_save.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Plot saving — plot_save","text":".ggplot_save_function(): (internal) ggplot saving. ... passes cowplot::save_plot .general_save_function(): (internal) base general saving. ... passes grDevices png, tiff, pdf, svg","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot saving — plot_save","text":"","code":"g <- GiottoClass::createGiottoInstructions(save_plot = TRUE) #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed df <- data.frame(x = rnorm(5), y = rnorm(5)) g_plot <- ggplot2::ggplot(df, ggplot2::aes(x,y)) + ggplot2::geom_point() all_plots_save_function(g, g_plot)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_spatenr_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: plot_spatenr_params — plot_spatenr_params","title":"Params documentation template: plot_spatenr_params — plot_spatenr_params","text":"Params documentation template: plot_spatenr_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_spatenr_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: plot_spatenr_params — plot_spatenr_params","text":"spat_enr_names character. names spatial enrichment results include","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_spatenr_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: plot_spatenr_params — plot_spatenr_params","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_spatnet_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Params documentation template: plot_spatnet_params — plot_spatnet_params","title":"Params documentation template: plot_spatnet_params — plot_spatnet_params","text":"Params documentation template: plot_spatnet_params","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_spatnet_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Params documentation template: plot_spatnet_params — plot_spatnet_params","text":"show_spatial_network show spatial network spatial_network_name name spatial network use spat_network_name name spatial network use spat_network_color color spatial network spatial_network_color color spatial network spat_network_alpha alpha spatial network","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plot_spatnet_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Params documentation template: plot_spatnet_params — plot_spatnet_params","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_axis_scale_2D.html","id":null,"dir":"Reference","previous_headings":"","what":"plotly_axis_scale_2D — plotly_axis_scale_2D","title":"plotly_axis_scale_2D — plotly_axis_scale_2D","text":"adjust axis scale 2D plotly plot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_axis_scale_2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotly_axis_scale_2D — plotly_axis_scale_2D","text":"","code":"plotly_axis_scale_2D(   cell_locations,   sdimx = NULL,   sdimy = NULL,   mode = c(\"cube\", \"real\", \"custom\"),   custom_ratio = NULL )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_axis_scale_2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotly_axis_scale_2D — plotly_axis_scale_2D","text":"cell_locations spatial_loc giotto object sdimx x axis cell spatial location sdimy y axis cell spatial location mode axis adjustment mode custom_ratio set ratio artificially","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_axis_scale_2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotly_axis_scale_2D — plotly_axis_scale_2D","text":"edges spatial grid data.table()","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_axis_scale_2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotly_axis_scale_2D — plotly_axis_scale_2D","text":"","code":"my_cell_locations <- data.frame(x = sample(10), y = sample(10)) plotly_axis_scale_2D(my_cell_locations) #> [[1]] #> [1] 1 #>  #> [[2]] #> [1] 1 #>"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_axis_scale_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"plotly_axis_scale_3D — plotly_axis_scale_3D","title":"plotly_axis_scale_3D — plotly_axis_scale_3D","text":"adjust axis scale 3D plotly plot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_axis_scale_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotly_axis_scale_3D — plotly_axis_scale_3D","text":"","code":"plotly_axis_scale_3D(   cell_locations,   sdimx = NULL,   sdimy = NULL,   sdimz = NULL,   mode = c(\"cube\", \"real\", \"custom\"),   custom_ratio = NULL )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_axis_scale_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotly_axis_scale_3D — plotly_axis_scale_3D","text":"cell_locations spatial_loc giotto object sdimx x axis cell spatial location sdimy y axis cell spatial location sdimz z axis cell spatial location mode axis adjustment mode custom_ratio set ratio artificially","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_axis_scale_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotly_axis_scale_3D — plotly_axis_scale_3D","text":"edges spatial grid data.table()","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_axis_scale_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotly_axis_scale_3D — plotly_axis_scale_3D","text":"","code":"my_cell_locations <- data.frame(x = sample(10), y = sample(10),  z = sample(10)) plotly_axis_scale_3D(my_cell_locations) #> [[1]] #> [1] 1 #>  #> [[2]] #> [1] 1 #>  #> [[3]] #> [1] 1 #>"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"plotly_grid — plotly_grid","title":"plotly_grid — plotly_grid","text":"provide grid segment draw plot_ly()","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotly_grid — plotly_grid","text":"","code":"plotly_grid(   spatial_grid,   x_start = \"x_start\",   y_start = \"y_start\",   x_end = \"x_end\",   y_end = \"y_end\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotly_grid — plotly_grid","text":"spatial_grid spatial_grid giotto object x_start default \"x_start\" y_start default \"y_start\" x_end default \"x_end\" y_end default \"y_end\"","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotly_grid — plotly_grid","text":"edges spatial grid data.table()","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotly_grid — plotly_grid","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed  library(GiottoClass) g <- createSpatialGrid(gobject = g, sdimx_stepsize = 400, sdimy_stepsize = 400, minimum_padding = 0)  my_spatial_grid <- getSpatialGrid(g) #> The grid name was not specified, default to the first: \"spatial_grid\"  plotly_grid(my_spatial_grid) #>     edge_id     x     y x_end y_end #>       <int> <num> <num> <num> <num> #>  1:       1  2955 -5605  2955 -2405 #>  2:       2  3355 -5605  3355 -2405 #>  3:       3  3755 -5605  3755 -2405 #>  4:       4  4155 -5605  4155 -2405 #>  5:       5  4555 -5605  4555 -2405 #>  6:       6  4955 -5605  4955 -2405 #>  7:       7  5355 -5605  5355 -2405 #>  8:       8  5755 -5605  5755 -2405 #>  9:       9  6155 -5605  6155 -2405 #> 10:      10  6555 -5605  6555 -2405 #> 11:      11  2955 -5605  6555 -5605 #> 12:      12  2955 -5205  6555 -5205 #> 13:      13  2955 -4805  6555 -4805 #> 14:      14  2955 -4405  6555 -4405 #> 15:      15  2955 -4005  6555 -4005 #> 16:      16  2955 -3605  6555 -3605 #> 17:      17  2955 -3205  6555 -3205 #> 18:      18  2955 -2805  6555 -2805 #> 19:      19  2955 -2405  6555 -2405"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_network.html","id":null,"dir":"Reference","previous_headings":"","what":"plotly_network — plotly_network","title":"plotly_network — plotly_network","text":"provide network segment draw 3D plot_ly()","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotly_network — plotly_network","text":"","code":"plotly_network(   network,   x = \"sdimx_begin\",   y = \"sdimy_begin\",   z = \"sdimz_begin\",   x_end = \"sdimx_end\",   y_end = \"sdimy_end\",   z_end = \"sdimz_end\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotly_network — plotly_network","text":"network network object x default \"sdimx_begin\" y default \"sdimy_begin\" z default \"sdimz_begin\" x_end default \"sdimx_end\" y_end default \"sdimy_end\" z_end default \"sdimz_end\"","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/plotly_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotly_network — plotly_network","text":"edges network data.table","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. colorRamp2 colorRamp2 GiottoUtils getDistinctColors, getRainbowColors","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"function create continous colors","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"colorRamp2::colorRamp2(breaks = seq_len(2), colors = c(\"blue\", \"red\")) #> function (x = NULL, return_rgb = FALSE, max_value = 1)  #> { #>     if (is.null(x)) { #>         stop(\"Please specify `x`.\") #>     } #>     att = attributes(x) #>     if (is.data.frame(x))  #>         x = as.matrix(x) #>     l_na = is.na(x) #>     if (all(l_na)) { #>         return(rep(NA, length(l_na))) #>     } #>     x2 = x[!l_na] #>     x2 = ifelse(x2 < breaks[1], breaks[1], ifelse(x2 > breaks[length(breaks)],  #>         breaks[length(breaks)], x2)) #>     ibin = .bincode(x2, breaks, right = TRUE, include.lowest = TRUE) #>     res_col = character(length(x2)) #>     for (i in unique(ibin)) { #>         l = ibin == i #>         res_col[l] = .get_color(x2[l], breaks[i], breaks[i +  #>             1], colors[i, ], colors[i + 1, ], space = space) #>     } #>     res_col = paste(res_col, transparency_str[1], sep = \"\") #>     if (return_rgb) { #>         res_col = t(col2rgb(as.vector(res_col), alpha = TRUE)/255) #>         return(res_col) #>     } #>     else { #>         res_col2 = character(length(x)) #>         res_col2[l_na] = NA #>         res_col2[!l_na] = res_col #>         attributes(res_col2) = att #>         return(res_col2) #>     } #> } #> <bytecode: 0x5558ff3265f8> #> <environment: 0x5558f8fd70e0> #> attr(,\"breaks\") #> [1] 1 2 #> attr(,\"colors\") #> [1] \"#0000FFFF\" \"#FF0000FF\" #> attr(,\"transparency\") #> [1] 0 #> attr(,\"space\") #> [1] \"LAB\""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set the sankey labels information — sankeyLabel","title":"Get and set the sankey labels information — sankeyLabel","text":"Get set sankey labels information","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set the sankey labels information — sankeyLabel","text":"","code":"sankeyLabel(x)  sankeyLabel(x) <- value"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set the sankey labels information — sankeyLabel","text":"x giottoSankeyPlan value values set","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set the sankey labels information — sankeyLabel","text":"character giottoSankeyPlan","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyLabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set the sankey labels information — sankeyLabel","text":"","code":"my_sankeyplan <- sankeySet(spat_unit = \"cell\",  feat_type = \"rna\", col = \"leiden_clus\") my_sankeyplan <- `sankeyLabel<-`(my_sankeyplan, value = \"my_label\") sankeyLabel(my_sankeyplan) #> [1] \"my_label\"  my_sankeyplan <- sankeySet(spat_unit = \"cell\",  feat_type = \"rna\", col = \"leiden_clus\") my_sankeyplan <- `sankeyLabel<-`(my_sankeyplan, value = \"my_label\")"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sankey plot — sankeyPlot","title":"Create a sankey plot — sankeyPlot","text":"Create sankey plot. Pulls information metadata giotto object provided. Simple 1 1 sankeys can generated single spatial unit feature type using spat_unit, feat_type, meta_type, cols, (optionally) idx params. complex cross spatial unit/feature type sankeys can set using sankey_plan param accepts giottoSankeyPlan object. Also possible directly use data.frames lists data.frames giottoPolygon objects. See usage section examples.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sankey plot — sankeyPlot","text":"","code":"# S4 method for giotto,giottoSankeyPlan sankeyPlot(   x,   y,   meta_type = c(\"cell\", \"feat\"),   focus_names = NULL,   unfocused_color = FALSE,   ... )  # S4 method for giotto,character sankeyPlot(   x,   y,   spat_unit = NULL,   feat_type = NULL,   meta_type = c(\"cell\", \"feat\"),   idx = NULL,   focus_names = NULL,   unfocused_color = FALSE,   ... )  # S4 method for data.frame,missing sankeyPlot(x, focus_names = NULL, unfocused_color = FALSE, ...)  # S4 method for list,missing sankeyPlot(x, focus_names = NULL, unfocused_color = FALSE, ...)  # S4 method for giottoPolygon,giottoPolygon sankeyPlot(x, y, focus_names = NULL, unfocused_color = FALSE, ...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sankey plot — sankeyPlot","text":"x data source (gobject, data.frame-like object relations first two cols provided, giottoPolygon) y giottoSankeyPlan object character vector referring source target columns metadata x gobject. Can also missing second giottoPolygon (see usage section) meta_type whether use 'cell' (cell) 'feat' (feature) metadata focus_names character vector node names display. Others omitted. unfocused_color whether color nodes focused . ... Arguments passed networkD3::sankeyNetwork Value character string naming variable Links data frame far away nodes one another. NodeGroup character string specifying node groups Nodes. Used color nodes network. LinkGroup character string specifying groups Links. Used color links network. units character string describing physical units () Value colourScale character string specifying categorical colour scale nodes. See https://github.com/d3/d3/blob/master/API.md#ordinal-scales. fontSize numeric font size pixels node text labels. fontFamily font family node text labels. nodeWidth numeric width node. nodePadding numeric essentially influences width height. margin integer named list/vector integers plot margins. using named list/vector, positions top, right, bottom, left valid.  single integer provided, value assigned right margin. Set margin appropriately accomodate long text labels. height numeric height network graph's frame area pixels. width numeric width network graph's frame area pixels. iterations numeric. Number iterations diagramm layout computation depth (y-position) node. Note: runs browser client push high. sinksRight boolean. TRUE, last nodes moved right border plot. spat_unit spatial unit metadata feat_type feature type metadata idx table subset index 1 1 comparisons","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a sankey plot — sankeyPlot","text":"sankey plot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sankey plot — sankeyPlot","text":"","code":"x <- data.frame(     col1 = c(\"a\", \"a\", \"b\"),     col2 = c(\"1\", \"2\", \"2\") ) sankeyPlot(x) #> Error: package 'networkD3' is not yet installed #>  #>  To install: #> install.packages(c(\"networkD3\"))  y <- data.frame(     col1 = \"1\",     col2 = c(\"A\", \"B\", \"C\") )  # combine data.frames of relations # rbind: note that node \"1\" is mapped the same for x and y sankeyPlot(rbind(x, y), fontSize = 20) #> Error: package 'networkD3' is not yet installed #>  #>  To install: #> install.packages(c(\"networkD3\"))  # list: note that node \"1\" is now considered a different node between x and y sankeyPlot(list(x, y), fontSize = 20) #> Error in loadNamespace(x): there is no package called ‘networkD3’  # focus on specific nodes/names sankeyPlot(rbind(x, y), fontSize = 20, focus_names = c(\"a\", \"1\", \"B\")) #> Error: package 'networkD3' is not yet installed #>  #>  To install: #> install.packages(c(\"networkD3\"))  g <- GiottoData::loadGiottoMini(\"vizgen\") #> 1. read Giotto object #> 2. read Giotto feature information #> /home/runner/work/_temp/Library/GiottoData/Mini_datasets/Vizgen/VizgenObject/Features/rna_feature_spatVector.shp #> rna #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> aggregate_spatInfo_spatVector.shp z0_spatInfo_spatVector.shp #>  z1_spatInfo_spatVector.shp #> aggregate #> z0 #> z1 #>  #> 3.2 read Giotto spatial centroid information #> aggregate #> z0 #> z1 #>  #> 3.3 read Giotto spatial overlap information #> rna_aggregate_spatInfo_spatVectorOverlaps.shp #>  rna_z0_spatInfo_spatVectorOverlaps.shp rna_z1_spatInfo_spatVectorOverlaps.shp #> poly_ID feat_ID feat_ID_uniq stack #> aggregate and rna #> poly_ID feat_ID feat_ID_uniq #> z0 and rna #> poly_ID feat_ID feat_ID_uniq #> z1 and rna #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed # with giottoSankeyPlan leiden <- sankeySet(     spat_unit = \"aggregate\",     feat_type = \"rna\",     col = \"leiden_clus\" ) louvain <- sankeySet(     spat_unit = \"aggregate\",     feat_type = \"rna\",     col = \"louvain_clus\" ) # place defined sets into same object plan <- leiden + louvain # assign relationships to compare sankeyRelate(plan) <- c(0, 1) sankeyPlot(g, plan) #> Error: package 'networkD3' is not yet installed #>  #>  To install: #> install.packages(c(\"networkD3\"))  # with single set of metadata GiottoClass::activeSpatUnit(g) <- \"aggregate\" sankeyPlot(g, c(\"louvain_clus\", \"leiden_clus\")) #> Error: package 'networkD3' is not yet installed #>  #>  To install: #> install.packages(c(\"networkD3\"))"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyRelate.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a relation between two sankey sets — sankeyRelate","title":"Set a relation between two sankey sets — sankeyRelate","text":"Set relation compared across two sets metadata annotations Giotto object.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyRelate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a relation between two sankey sets — sankeyRelate","text":"","code":"# S4 method for giottoSankeyPlan sankeyRelate(x, ...)  # S4 method for giottoSankeyPlan,logical,data.frame sankeyRelate(x, add) <- value  # S4 method for giottoSankeyPlan,logical,numeric sankeyRelate(x, add) <- value  # S4 method for giottoSankeyPlan,logical,character sankeyRelate(x, add) <- value  # S4 method for giottoSankeyPlan,missing,ANY sankeyRelate(x) <- value  # S4 method for giottoSankeyPlan,missing,NULL sankeyRelate(x) <- value"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyRelate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a relation between two sankey sets — sankeyRelate","text":"x giottoSankeyPlan object ... additional params pass add logical. whether relation add value appended replace existing relations value numerical vector (zero indexed) sets compare","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeyRelate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a relation between two sankey sets — sankeyRelate","text":"giottoSankeyPlan","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a giottoSankeyPlan with one set of annotations — sankeySet","title":"Create a giottoSankeyPlan with one set of annotations — sankeySet","text":"Create giottoSankeyPlan one set annotations","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a giottoSankeyPlan with one set of annotations — sankeySet","text":"","code":"sankeySet(   spat_unit = NULL,   feat_type = NULL,   col,   index = NULL,   label = NA_character_ )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a giottoSankeyPlan with one set of annotations — sankeySet","text":"spat_unit spatial unit metadata feat_type feature type metadata col column metadata pull . Must data can treated categorically. index character, integer, logical vector subset metadata table label (optional) character label set","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeySet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a giottoSankeyPlan with one set of annotations — sankeySet","text":"giottoSankeyPlan","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeySet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a giottoSankeyPlan with one set of annotations — sankeySet","text":"","code":"my_sankeyplan <- sankeySet(spat_unit = \"cell\",  feat_type = \"rna\", col = \"leiden_clus\")"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeySetAddresses.html","id":null,"dir":"Reference","previous_headings":"","what":"Data.table of sankey set locations — sankeySetAddresses","title":"Data.table of sankey set locations — sankeySetAddresses","text":"Return data.table containing sets metadata relate exists inside Giotto object.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeySetAddresses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data.table of sankey set locations — sankeySetAddresses","text":"","code":"sankeySetAddresses(x)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeySetAddresses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data.table of sankey set locations — sankeySetAddresses","text":"x giottoSankeyPlan object","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeySetAddresses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data.table of sankey set locations — sankeySetAddresses","text":"giottoSankeyPlan","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/sankeySetAddresses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data.table of sankey set locations — sankeySetAddresses","text":"","code":"my_sankeyplan <- sankeySet(spat_unit = \"cell\",  feat_type = \"rna\", col = \"leiden_clus\") my_sankeyplan <- sankeySetAddresses(my_sankeyplan)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a default color for continuous values — set_default_color_continuous","title":"Set a default color for continuous values — set_default_color_continuous","text":"Generates gradient color palette based input colors param. Sets default gradient NULL passed. midpoint param supplied using color scale 3 colors. Supports colors setting four levels: type specific defaults - defaults specific feature type plot can passed data_default param global options (general session setting blanket color palette type effects) options('giotto.color_cd_pal) - default continuous divergent palette blue, white, red, sequential ('giotto.color_cs_pal), 'viridis' options('giotto.color_c_rev) - whether colors reversed giotto instructions (gobject specific effects specific types plots) run showColorInstructions() details options/params set giottoInstructions object function specific (directly pass desired colors plotting function)","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a default color for continuous values — set_default_color_continuous","text":"","code":"set_default_color_continuous(   colors = NULL,   midpoint = NULL,   style = c(\"divergent\", \"sequential\"),   ...,   instr_pal,   instr_rev,   data_default = NULL,   type = c(\"fill\", \"color\") )  set_default_color_continuous_cell(   colors = NULL,   instrs,   midpoint = NULL,   style = \"divergent\",   ...,   data_default = NULL )  set_default_color_continuous_poly(   colors = NULL,   instrs,   midpoint = NULL,   style = \"divergent\",   ... )  set_default_color_continuous_heatmap(   colors = NULL,   instrs,   midpoint = NULL,   style = \"divergent\",   ... )  set_default_color_continuous_CCcom_heatmap(   colors = NULL,   instrs,   midpoint = NULL,   style = \"divergent\",   ... )  set_default_color_continuous_CCcom_dotplot(   colors = NULL,   instrs,   midpoint = NULL,   style = \"divergent\",   ...,   type = c(\"fill\", \"color\"),   data_default = list(pal = c(\"darkblue\", \"blue\", \"white\", \"red\", \"darkred\")) )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a default color for continuous values — set_default_color_continuous","text":"colors character NULL. 2 n number hex color codes 1 single name palette use can passed midpoint numeric. midpoint value color gradient style scale color scale around midpoint (divergent) starting minimum value (sequential) ... additional params pass respective ggplot fill_gradient functions instr_pal, instr_rev used upstream function pass specific giottoInstructions params data_default data type (e.g. cells, polys, heatmap) specific default colors use type whether setting ggplot2 'fill' 'color' type function instrs giottoInstructions object (output instructions(gobject))","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a default color for continuous values — set_default_color_continuous","text":"continuous color palette","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_continuous.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Set a default color for continuous values — set_default_color_continuous","text":"set_default_color_continuous(): Framework function. Direct use minimal. Specific wrapper functions used item needs defaults setting (plots types features).","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a default color for continuous values — set_default_color_continuous","text":"","code":"g <- GiottoData::loadGiottoMini(\"vizgen\") #> 1. read Giotto object #> 2. read Giotto feature information #> /home/runner/work/_temp/Library/GiottoData/Mini_datasets/Vizgen/VizgenObject/Features/rna_feature_spatVector.shp #> rna #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> aggregate_spatInfo_spatVector.shp z0_spatInfo_spatVector.shp #>  z1_spatInfo_spatVector.shp #> aggregate #> z0 #> z1 #>  #> 3.2 read Giotto spatial centroid information #> aggregate #> z0 #> z1 #>  #> 3.3 read Giotto spatial overlap information #> rna_aggregate_spatInfo_spatVectorOverlaps.shp #>  rna_z0_spatInfo_spatVectorOverlaps.shp rna_z1_spatInfo_spatVectorOverlaps.shp #> poly_ID feat_ID feat_ID_uniq stack #> aggregate and rna #> poly_ID feat_ID feat_ID_uniq #> z0 and rna #> poly_ID feat_ID feat_ID_uniq #> z1 and rna #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed  nr_feat_polys <- function(...) {     spatInSituPlotPoints(g,         polygon_fill = \"nr_feats\",         polygon_fill_as_factor = FALSE,         polygon_feat_type = \"aggregate\",         polygon_line_size = 0.1,         polygon_alpha = 1,         ...     ) }  # default nr_feat_polys() #> Warning: You need to select features (feats) and modify feature #>  types (feat_type) if you want to show individual features #>  (e.g. transcripts) #>  This warning is shown once per session #> plot polygon layer done   # set global option level: viridis options(\"giotto.color_c_pal\" = \"v\") nr_feat_polys() #> plot polygon layer done   # set instructions level: magma GiottoClass::instructions(g, \"poly_color_c_pal\") <- \"magma\" nr_feat_polys() #> plot polygon layer done   GiottoClass::instructions(g, \"poly_color_c_rev\") <- TRUE nr_feat_polys() #> plot polygon layer done  nr_feat_polys(polygon_fill_gradient_style = \"s\") #> plot polygon layer done    # set function level: mako GiottoClass::instructions(g, \"poly_color_c_rev\") <- FALSE nr_feat_polys(polygon_fill_gradient = \"mako\") #> plot polygon layer done   # set function level: color vector (2 to n colors) nr_feat_polys(     polygon_fill_gradient = c(\"green\", \"purple\"),     polygon_fill_gradient_style = \"s\" ) #> plot polygon layer done   nr_feat_polys(     polygon_fill_gradient = c(\"blue\", \"yellow\", \"red\"),     polygon_fill_gradient_style = \"s\" ) #> plot polygon layer done   nr_feat_polys(     polygon_fill_gradient = c(         \"darkgrey\", \"darkblue\", \"purple\", \"violet\", \"cyan\"     ),     polygon_fill_gradient_style = \"s\" ) #> plot polygon layer done"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a discrete coloring scheme — set_default_color_discrete","title":"Set a discrete coloring scheme — set_default_color_discrete","text":"Provides palette function generate 'n' hexadecimal color codes discrete colors. Sets default coloring palette NULL passed colors param. Supports colors setting three levels: global options (general session setting blanket color palette type effects) options('giotto.color_d_pal) - palette use options('giotto.color_d_rev) - whether colors reversed options('giotto.color_d_strategy) - strategy use making colors continuous. See get_continuous_colors() giotto instructions (gobject specific effects specific types plots) run showColorInstructions() details options/params set giottoInstructions object function specific (directly pass desired colors plotting function) character vector length 1 input provided assumed known color palette requested pal_names(). longer character input provided expected vector colors use. values passed simple_palette_factory generate palette function interpolates colors provided default n param number requested colors. Custom function inputs colors also supported custom functions n param number requested colors.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a discrete coloring scheme — set_default_color_discrete","text":"","code":"set_default_color_discrete(   colors = NULL,   ...,   instr_pal,   instr_rev,   instr_strategy )  set_default_color_discrete_cell(colors = NULL, instrs, ...)  set_default_color_discrete_poly(colors = NULL, instrs, ...)  set_default_color_discrete_feat(colors = NULL, instrs, ...)  set_default_color_discrete_heatmap_clus(colors = NULL, instrs, ...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a discrete coloring scheme — set_default_color_discrete","text":"colors accepts color inputs ... additional params pass instr_pal, instr_rev, instr_strategy used upstream function pass specific giottoInstructions params instrs giottoInstructions object (output instructions(gobject))","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_discrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a discrete coloring scheme — set_default_color_discrete","text":"palette function vector color ids","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_discrete.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Set a discrete coloring scheme — set_default_color_discrete","text":"set_default_color_discrete(): Framework function. Direct use minimal. Wrap specific things (plots types features) need defaults setting.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_color_discrete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a discrete coloring scheme — set_default_color_discrete","text":"","code":"set_default_color_discrete(colors = \"#eb4034\", instr_rev = NULL, instr_strategy = NULL) #> function (n)  #> { #>     col <- getColors(pal = pal, n = n, rev = rev, strategy = \"cutoff\") #>     get_continuous_colors(col = col, n = n, strategy = strategy) #> } #> <bytecode: 0x5558ff317cb8> #> <environment: 0x5558f51d79e8>"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_cow_n_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Set default ncols in plotting grid — set_default_cow_n_col","title":"Set default ncols in plotting grid — set_default_cow_n_col","text":"Determine default cow_n_col param value cowplot based number items plot.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_cow_n_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set default ncols in plotting grid — set_default_cow_n_col","text":"","code":"set_default_cow_n_col(cow_n_col = NULL, nr_plots)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_cow_n_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set default ncols in plotting grid — set_default_cow_n_col","text":"cow_n_col number columns cowplot use. default number calculated NULL passed. nr_plots number plots use cowplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_cow_n_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set default ncols in plotting grid — set_default_cow_n_col","text":"numeric","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/set_default_cow_n_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set default ncols in plotting grid — set_default_cow_n_col","text":"","code":"set_default_cow_n_col(nr_plots = 4) #> [1] 2"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterDendrogram.html","id":null,"dir":"Reference","previous_headings":"","what":"showClusterDendrogram — showClusterDendrogram","title":"showClusterDendrogram — showClusterDendrogram","text":"Creates dendrogram selected clusters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterDendrogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"showClusterDendrogram — showClusterDendrogram","text":"","code":"showClusterDendrogram(   gobject,   spat_unit = NULL,   feat_type = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   cluster_column,   cor = c(\"pearson\", \"spearman\"),   distance = \"ward.D\",   h = NULL,   h_color = \"red\",   rotate = FALSE,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"showClusterDendrogram\",   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterDendrogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"showClusterDendrogram — showClusterDendrogram","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") expression_values expression values use (e.g. \"normalized\", \"scaled\", \"custom\") cluster_column name column use clusters (e.g. \"leiden_clus\") cor correlation score calculate distance (e.g. \"pearson\", \"spearman\") distance distance method use hierarchical clustering, default \"ward.D\" h height horizontal lines plot h_color color horizontal lines rotate rotate dendrogram 90 degrees show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param ... Arguments passed ggdendro::ggdendrogram data Either dendro object object can coerced class dendro using dendro_data() function, .e. objects class dendrogram, hclust tree segments TRUE, show line segments labels TRUE, shows segment labels leaf_labels TRUE, shows leaf labels theme_dendro TRUE, applies blank theme plot (see theme_dendro())","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterDendrogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"showClusterDendrogram — showClusterDendrogram","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterDendrogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"showClusterDendrogram — showClusterDendrogram","text":"Expression correlation dendrogram selected clusters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterDendrogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"showClusterDendrogram — showClusterDendrogram","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed showClusterDendrogram(g, cluster_column = \"leiden_clus\") #> Error: package 'ggdendro' is not yet installed #>  #>  To install: #> install.packages(c(\"ggdendro\"))"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"showClusterHeatmap — showClusterHeatmap","title":"showClusterHeatmap — showClusterHeatmap","text":"Creates heatmap based identified clusters","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"showClusterHeatmap — showClusterHeatmap","text":"","code":"showClusterHeatmap(   gobject,   spat_unit = NULL,   feat_type = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   feats = \"all\",   cluster_column,   cor = c(\"pearson\", \"spearman\"),   distance = \"ward.D\",   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"showClusterHeatmap\",   ... )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"showClusterHeatmap — showClusterHeatmap","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") expression_values expression values use (e.g. \"normalized\", \"scaled\", \"custom\") feats vector features use, default '' cluster_column name column use clusters (e.g. \"leiden_clus\") cor correlation score calculate distance (e.g. \"pearson\", \"spearman\") distance distance method use hierarchical clustering, default \"ward.D\" show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param ... Arguments passed ComplexHeatmap::Heatmap matrix matrix. Either numeric character. simple vector, converted one-column matrix. col vector colors color mapping discrete color mapping  function matrix continuous numbers (generated colorRamp2). matrix continuous, value can also vector colors colors can interpolated. Pass ColorMapping. details examples, please refer https://jokergoo.github.io/ComplexHeatmap-reference/book/-single-heatmap.html#colors . name Name heatmap. default heatmap name used title heatmap legend. na_col Color NA values. rect_gp Graphic parameters drawing rectangles (heatmap body). value specified gpar fill parameter ignored. color_space color space colors interpolated. used matrix numeric  col vector colors. Pass colorRamp2. border Whether draw border. value can logical string color. border_gp Graphic parameters borders. want set different parameters different heatmap slices, please consider use decorate_heatmap_body. cell_fun Self-defined function add graphics cell. Seven parameters passed  function: j, , x, y, width, height, fill column index, row index matrix, coordinate cell, width height cell filled color. x, y, width height unit objects. layer_fun Similar cell_fun, vectorized. Check https://jokergoo.github.io/ComplexHeatmap-reference/book/-single-heatmap.html#customize--heatmap-body . jitter Random shifts added matrix. value can logical single numeric value. TRUE, random  values uniform distribution 0 1e-10 generated. numeric value, range uniform distribution (0, jitter). mainly solve problem \"Error: node stack overflow\" many identical rows/columns plotting dendrograms. ADD: version 2.5.6, error node stack overflow fixed, now argument ignored. row_title Title row. row_title_side title put left right heatmap? row_title_gp Graphic parameters row title. row_title_rot Rotation row title. column_title Title column. column_title_side title put top bottom heatmap? column_title_gp Graphic parameters column title. column_title_rot Rotation column titles. cluster_rows value logical, controls whether make cluster rows. value can also hclust dendrogram already contains clustering. Check https://jokergoo.github.io/ComplexHeatmap-reference/book/-single-heatmap.html#clustering . cluster_row_slices rows split slices, whether perform clustering slice means? clustering_distance_rows can pre-defined character  (\"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\",  \"minkowski\", \"pearson\", \"spearman\", \"kendall\"). can also function. function one argument, input argument matrix  returned value dist object. function two arguments, input arguments two vectors function calculates distance two vectors. clustering_method_rows Method perform hierarchical clustering, pass hclust. row_dend_side row dendrogram put left right heatmap? row_dend_width Width row dendrogram, unit object. show_row_dend Whether show row dendrogram? row_dend_gp Graphic parameters dendrogram segments. users already provide dendrogram object edges rendered, argument ignored. row_dend_reorder Apply reordering row dendrograms. value can logical value vector contains weight  used reorder rows. reordering applied reorder.dendrogram. cluster_columns Whether make cluster columns? settings cluster_rows. cluster_column_slices columns split slices, whether perform clustering slice means? clustering_distance_columns setting clustering_distance_rows. clustering_method_columns Method perform hierarchical clustering, pass hclust. column_dend_side column dendrogram put top bottom heatmap? column_dend_height height column cluster, unit object. show_column_dend Whether show column dendrogram? column_dend_gp Graphic parameters dendrogram segments. settings row_dend_gp. column_dend_reorder Apply reordering column dendrograms. settings row_dend_reorder. row_order Order rows. Manually setting row order turns clustering. column_order Order column. row_labels Optional row labels put row names heatmap. row_names_side row names put left right heatmap? show_row_names Whether show row names. row_names_max_width Maximum width row names viewport. row_names_gp Graphic parameters row names. row_names_rot Rotation row names. row_names_centered row names put centered? column_labels Optional column labels put column names heatmap. column_names_side column names put top bottom heatmap? column_names_max_height Maximum height column names viewport. show_column_names Whether show column names. column_names_gp Graphic parameters drawing text. column_names_rot Rotation column names. column_names_centered column names put centered? top_annotation HeatmapAnnotation object. bottom_annotation HeatmapAnnotation object. left_annotation specified rowAnnotation. right_annotation specified rowAnnotation. km Apply k-means clustering rows. value larger 1, heatmap split rows according k-means clustering. row slice, hierarchical clustering still applied parameters . split vector data frame rows split. cluster_rows clustering object, split can single number indicating split dendrogram cutree. row_km km. row_km_repeats Number k-means runs get consensus k-means clustering. Note row_km_repeats set one, final number groups might smaller row_km, might means original row_km good choice. row_split split. column_km K-means clustering columns. column_km_repeats Number k-means runs get consensus k-means clustering. Similar row_km_repeats. column_split Split columns. heatmap splitting, please refer https://jokergoo.github.io/ComplexHeatmap-reference/book/-single-heatmap.html#heatmap-split . gap Gap row slices heatmap split rows. value unit object. row_gap gap. column_gap Gap column slices. show_parent_dend_line heatmap split, whether add dashed line mark parent dendrogram children dendrograms? width Width heatmap body. height Height heatmap body. heatmap_width Width whole heatmap (including heatmap components) heatmap_height Height whole heatmap (including heatmap components). Check https://jokergoo.github.io/ComplexHeatmap-reference/book/-single-heatmap.html#size---heatmap . show_heatmap_legend Whether show heatmap legend? heatmap_legend_param list contains parameters heatmap legends. See color_mapping_legend,ColorMapping-method available parameters. use_raster Whether render heatmap body raster image. helps reduce file size matrix huge. number rows columns 2000, default turned . Note cell_fun set, use_raster enforced FALSE. raster_device Graphic device used generate raster image. raster_quality value larger 1. raster_device_param list parameters selected graphic device. raster image support, please check https://jokergoo.github.io/ComplexHeatmap-reference/book/-single-heatmap.html#heatmap--raster-image . raster_resize_mat Whether resize matrix let dimension matrix dimension raster image? value can logical. TRUE, mean used summarize sub matrix corresponds single pixel. value can also summary function, e.g. max. raster_by_magick Whether use image_resize scale image. raster_magick_filter Pass filter argument image_resize. character scalar possible values filter_types. default \"Lanczos\". post_fun function executed heatmap list drawn.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"showClusterHeatmap — showClusterHeatmap","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"showClusterHeatmap — showClusterHeatmap","text":"Correlation heatmap selected clusters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showClusterHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"showClusterHeatmap — showClusterHeatmap","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed showClusterHeatmap(g, cluster_column = \"leiden_clus\") #> Error: package 'ComplexHeatmap' is not yet installed #>  #>  To install: #> if(!requireNamespace('BiocManager', quietly = TRUE)) install.packages('BiocManager'); #> BiocManager::install(c(\"ComplexHeatmap\"))"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showColorInstructions.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Giotto color instructions — showColorInstructions","title":"Show Giotto color instructions — showColorInstructions","text":"Show color instructions settable Giotto. data.table information invisibly returned","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showColorInstructions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Giotto color instructions — showColorInstructions","text":"","code":"showColorInstructions()"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showColorInstructions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show Giotto color instructions — showColorInstructions","text":"data.table Giotto color option information","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showColorInstructions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show Giotto color instructions — showColorInstructions","text":"","code":"showColorInstructions() #>  #> option      :  'cell_color_d_pal'  #> default     :  NULL (distinct colors)  #> description :  Cell: color palette to use for discrete color values. #>         Can be supplied as a the name of a palette accessible by `getColors()`, #>         custom color vector, or an external function with a 'n' colors #>         requested param  #>  #> option      :  'poly_color_d_pal'  #> default     :  NULL (distinct colors)  #> description :  Poly: color palette to use for discrete color values. #>         Can be supplied as a the name of a palette accessible by `getColors()`, #>         custom color vector, or an external function with a 'n' colors #>         requested param  #>  #> option      :  'feat_color_pal'  #> default     :  NULL (distinct colors)  #> description :  Feat: color palette to use for discrete color values. #>         Can be supplied as a the name of a palette accessible by `getColors()`, #>         custom color vector, or an external function with a 'n' colors #>         requested param  #>  #> option      :  'heatmap_clus_color_pal'  #> default     :  NULL (distinct colors)  #> description :  Heatmap Clusters: color palette to use for discrete color values. #>         Can be supplied as a the name of a palette accessible by `getColors()`, #>         custom color vector, or an external function with a 'n' colors #>         requested param  #>  #> option      :  'cell_color_d_rev'  #> default     :  FALSE  #> description :  Cell: whether discrete color values should be reversed  #>  #> option      :  'poly_color_d_rev'  #> default     :  FALSE  #> description :  Poly: whether discrete color values should be reversed  #>  #> option      :  'feat_color_rev'  #> default     :  FALSE  #> description :  Feat: whether discrete color values should be reversed  #>  #> option      :  'heatmap_clus_color_rev'  #> default     :  FALSE  #> description :  Heatmap Clusters: whether discrete color values should be reversed  #>  #> option      :  'cell_color_d_strategy'  #> default     :  'interpolate'  #> description :  Cell: 'interpolate', 'recycle', or 'cutoff'. Policy to use when more #>         colors are requested than exist within palette.  #>  #> option      :  'poly_color_d_strategy'  #> default     :  'interpolate'  #> description :  Poly: 'interpolate', 'recycle', or 'cutoff'. Policy to use when more #>         colors are requested than exist within palette.  #>  #> option      :  'feat_color_strategy'  #> default     :  'interpolate'  #> description :  Feat: 'interpolate', 'recycle', or 'cutoff'. Policy to use when more #>         colors are requested than exist within palette.  #>  #> option      :  'heatmap_clus_color_strategy'  #> default     :  'interpolate'  #> description :  Heatmap Clusters: 'interpolate', 'recycle', or 'cutoff'. Policy to #>         use when more colors are requested than exist within palette.  #>  #> option      :  'cell_color_c_pal'  #> default     :  c('blue', 'white', 'red')  #> description :  Cell: color palette to use for continuous color values. Can be #>         supplied as a the name of a palette accessible by `getColors()`, #>         custom color vector, or an external function with a 'n' colors #>         requested param  #>  #> option      :  'poly_color_c_pal'  #> default     :  c('blue', 'white', 'red')  #> description :  Poly: color palette to use for continuous color values. Can be #>         supplied as a the name of a palette accessible by `getColors()`, #>         custom color vector, or an external function with a 'n' colors #>         requested param  #>  #> option      :  'cell_color_c_rev'  #> default     :  FALSE  #> description :  Cell: whether continuous color values should be reversed  #>  #> option      :  'poly_color_c_rev'  #> default     :  FALSE  #> description :  Poly: whether continuous color values should be reversed  #>  #> option      :  'heatmap_color_pal'  #> default     :  c('blue', 'white', 'red')  #> description :  Heatmap: color palette to use for continuous color values. #>         Can be supplied as a the name of a palette accessible by `getColors()`, #>         custom color vector, or an external function with a 'n' colors #>         requested param  #>  #> option      :  'heatmap_color_rev'  #> default     :  FALSE  #> description :  Heatmap: whether continuous color values should be reversed"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showSaveParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"showSaveParameters — showSaveParameters","title":"showSaveParameters — showSaveParameters","text":"Description Giotto saving options, links all_plots_save_function","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showSaveParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"showSaveParameters — showSaveParameters","text":"","code":"showSaveParameters()"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showSaveParameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"showSaveParameters — showSaveParameters","text":"Instructions use automatic plot saving options within Giotto","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/showSaveParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"showSaveParameters — showSaveParameters","text":"","code":"showSaveParameters() #> This is a simple guide to help you automatically saving plots.  #> Importantly, defaults for all these parameters can be set at #>     the beginning with createGiottoInstructions()  #> See #>     https://rubd.github.io/Giotto/articles/instructions_and_plotting.html #>     for more information and examples  #>   #> Each plotting function in Giotto has 4 important parameters for #>     showing and/or saving a plot:  #>  #>         - show_plot: TRUE or FALSE, show the plot to the console #>         - return_plot: TRUE or FALSE, return the plot to the console #>         (e.g. to further modify or save the plot #>         - save_plot: TRUE or FALSE, automatically save the plot #>         - save_param: a list of parameters that can be set  #> The following list of parameters can be provided to save_param:  #>  #>         - save_dir: directory to save the plot to #>         - save_folder: if not NULL, a subfolder within save_dir that will #>         be created to save the plot to #>         - save_name: name of the plot (no extension needed, see save_format) #>         - save_format: picture format to use, default is .png #>         - ncol: number of columns for multiplots #>         - nrow: number of rows for multiplot #>         - scale: scale of plots #>         - base_width: width of plot #>         - base_height: height of plot #>         - base_aspect_ratio: ratio of plot #>         - units: plotting units (e.g. in) #>         - dpi: dpi for each plot if plot is in raster format #> Example:  #>  #>         plotfunction(..., #>                     save_plot = TRUE, #>                     save_param = list(save_name = 'favorite_name', #>                     units = 'png'))"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/simple_palette_factory.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a simple palette function — simple_palette_factory","title":"Generate a simple palette function — simple_palette_factory","text":"Simple palette function generator. Creates function param n dictates many colors return provided vector hexadecimal color values. Generated functions send warning enough colors use needs recycle values.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/simple_palette_factory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a simple palette function — simple_palette_factory","text":"","code":"simple_palette_factory(col, rev = FALSE, strategy = \"interpolate\")"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/simple_palette_factory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a simple palette function — simple_palette_factory","text":"col character vector. Hexadecimal color codes rev whether reverse order vector strategy policy insufficient colors available","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/simple_palette_factory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a simple palette function — simple_palette_factory","text":"function","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/simple_palette_factory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a simple palette function — simple_palette_factory","text":"","code":"simple_palette_factory(col = \"#eb4034\") #> function (n)  #> { #>     get_continuous_colors(col = col, n = n, strategy = strategy) #> } #> <bytecode: 0x5558f8b01f28> #> <environment: 0x55590ef8edc0>"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatCellPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"spatCellPlot — spatCellPlot","title":"spatCellPlot — spatCellPlot","text":"Visualize cells according spatial coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatCellPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatCellPlot — spatCellPlot","text":"","code":"spatCellPlot2D(   gobject,   spat_unit = NULL,   feat_type = NULL,   show_image = FALSE,   gimage = NULL,   image_name = NULL,   largeImage_name = NULL,   sdimx = \"sdimx\",   sdimy = \"sdimy\",   spat_enr_names = NULL,   cell_annotation_values = NULL,   cell_color_gradient = NULL,   gradient_midpoint = NULL,   gradient_style = c(\"divergent\", \"sequential\"),   gradient_limits = NULL,   select_cell_groups = NULL,   select_cells = NULL,   point_shape = c(\"border\", \"no_border\", \"voronoi\"),   point_size = 3,   point_alpha = 1,   point_border_col = \"black\",   point_border_stroke = 0.1,   show_cluster_center = FALSE,   show_center_label = FALSE,   center_point_size = 4,   center_point_border_col = \"black\",   center_point_border_stroke = 0.1,   label_size = 4,   label_fontface = \"bold\",   show_network = FALSE,   spatial_network_name = \"Delaunay_network\",   network_color = NULL,   network_alpha = 1,   show_grid = FALSE,   spatial_grid_name = \"spatial_grid\",   grid_color = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 1,   other_cells_alpha = 0.1,   coord_fix_ratio = 1,   show_legend = TRUE,   legend_text = 8,   legend_symbol_size = 1,   background_color = \"white\",   vor_border_color = \"white\",   vor_max_radius = 200,   vor_alpha = 1,   axis_text = 8,   axis_title = 8,   cow_n_col = NULL,   cow_rel_h = 1,   cow_rel_w = 1,   cow_align = \"h\",   theme_param = list(),   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatCellPlot2D\" )  spatCellPlot(...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatCellPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatCellPlot — spatCellPlot","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_image show tissue background image gimage giotto image image_name name giotto image multiple images group_by largeImage_name name giottoLargeImage multiple images group_by sdimx x-axis dimension name (default = 'sdimx') sdimy y-axis dimension name (default = 'sdimy') spat_enr_names character. names spatial enrichment results include cell_annotation_values numeric cell annotation columns cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points point_border_col color border around points point_border_stroke stroke size border around points show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points center_point_border_col border color center points center_point_border_stroke border stroke size center points label_size size labels label_fontface font labels show_network show underlying spatial network spatial_network_name name spatial network use network_color color spatial network network_alpha alpha spatial network show_grid show spatial grid spatial_grid_name name spatial grid use grid_color color spatial grid show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells other_cells_alpha (0 1) alpha selected cells coord_fix_ratio fix ratio x y-axis show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols background_color color plot background vor_border_color border colorr voronoi plot vor_max_radius maximum radius voronoi 'cells' vor_alpha transparency voronoi 'cells' axis_text size axis text axis_title size axis title cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align theme_param list additional params passed ggplot2::theme() show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param ... spatCellPlot(...) passes spatCellPlot2D()","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatCellPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatCellPlot — spatCellPlot","text":"ggplot ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatCellPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatCellPlot — spatCellPlot","text":"Description parameters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatCellPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatCellPlot — spatCellPlot","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatCellPlot2D(g, cell_annotation_values = \"leiden_clus\")   g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatCellPlot(g, cell_annotation_values = \"leiden_clus\")"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDeconvPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"spatDeconvPlot — spatDeconvPlot","title":"spatDeconvPlot — spatDeconvPlot","text":"Visualize cell type enrichment / deconvolution results scatterpie","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDeconvPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatDeconvPlot — spatDeconvPlot","text":"","code":"spatDeconvPlot(   gobject,   spat_unit = NULL,   feat_type = NULL,   deconv_name = \"DWLS\",   show_image = FALSE,   gimage = NULL,   image_name = NULL,   largeImage_name = NULL,   spat_loc_name = NULL,   sdimx = \"sdimx\",   sdimy = \"sdimy\",   cell_color_code = NULL,   line_color = NA,   radius = 10,   alpha = 1,   legend_text = 8,   background_color = \"white\",   title = NULL,   axis_text = 8,   axis_title = 8,   coord_fix_ratio = 1,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   theme_param = list(),   default_save_name = \"spatDeconvPlot\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDeconvPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatDeconvPlot — spatDeconvPlot","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") deconv_name name deconvolution results use show_image show tissue background image gimage giotto image image_name name giotto image largeImage_name name giottoLargeImage spat_loc_name name spatial locations sdimx x-axis dimension name (default = 'sdimx') sdimy y-axis dimension name (default = 'sdimy') cell_color_code character. discrete colors use. palette use named vector colors line_color color line within pie charts radius radios pie charts alpha alpha pie charts legend_text size legend text background_color color plot background title title plot (default = deconv_name) axis_text size axis text axis_title size axis title coord_fix_ratio fix ratio x y-axis show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters theme_param list additional params passed ggplot2::theme() default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDeconvPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatDeconvPlot — spatDeconvPlot","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"spatDimCellPlot — spatDimCellPlot","title":"spatDimCellPlot — spatDimCellPlot","text":"Visualize numerical features cells according spatial dimension reduction coordinates 2D","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatDimCellPlot — spatDimCellPlot","text":"","code":"spatDimCellPlot(...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatDimCellPlot — spatDimCellPlot","text":"... Arguments passed spatDimCellPlot2D plot_alignment direction align plot cell_annotation_values numeric cell annotation columns sdimx = spatial dimension use x-axis sdimy = spatial dimension use y-axis spat_point_shape shape points (border, no_border voronoi) spat_point_size size spatial points spat_point_alpha transparency spatial points spat_point_border_col border color spatial points spat_point_border_stroke border stroke spatial points dim_show_cluster_center show center cluster dim_show_center_label provide label cluster dim_center_point_size size center point dim_center_point_border_col border color center point dim_center_point_border_stroke stroke size center point dim_label_size size center label dim_label_fontface font center label spat_show_cluster_center show center cluster spat_show_center_label provide label cluster spat_center_point_size size spatial center points spat_center_point_border_col border color spatial center points spat_center_point_border_stroke stroke size spatial center points spat_label_size size center label spat_label_fontface font center label dim_edge_alpha column use alpha edges spat_show_network show spatial network spatial_network_name name spatial network use spat_network_color color spatial network spat_network_alpha alpha spatial network spat_show_grid show spatial grid spatial_grid_name name spatial grid use spat_grid_color color spatial grid dim_other_point_size size selected dim cells spat_other_point_size size selected spat cells spat_other_cells_alpha alpha selected spat cells coord_fix_ratio ratio coordinates dim_background_color background color points dim. reduction space spat_background_color background color spatial points vor_border_color border colorr voronoi plot vor_max_radius maximum radius voronoi 'cells' vor_alpha transparancy voronoi 'cells' gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align show_image show tissue background image gimage giotto image image_name name giotto image multiple images group_by largeImage_name name giottoLargeImage multiple images group_by spat_enr_names character. names spatial enrichment results include dim_reduction_to_use character. dimension reduction use dim_reduction_name character. dimension reduction name dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis dim_point_shape point border (border no_border) dim_point_size size points dim. reduction space dim_point_alpha transparancy point dim. reduction space dim_point_border_col border color points dim. reduction space dim_point_border_stroke border stroke points dim. reduction space show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) nn_network_name character. name NN network use, show_NN_network = TRUE gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols axis_text size axis text axis_title size axis title","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatDimCellPlot — spatDimCellPlot","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatDimCellPlot — spatDimCellPlot","text":"Description parameters.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatDimCellPlot — spatDimCellPlot","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatDimCellPlot(g, cell_annotation_values = \"leiden_clus\")"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot2D.html","id":null,"dir":"Reference","previous_headings":"","what":"spatDimCellPlot2D — spatDimCellPlot2D","title":"spatDimCellPlot2D — spatDimCellPlot2D","text":"Visualize numerical features cells according spatial dimension reduction coordinates 2D","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatDimCellPlot2D — spatDimCellPlot2D","text":"","code":"spatDimCellPlot2D(   gobject,   feat_type = NULL,   spat_unit = NULL,   show_image = FALSE,   gimage = NULL,   image_name = NULL,   largeImage_name = NULL,   plot_alignment = c(\"vertical\", \"horizontal\"),   spat_enr_names = NULL,   cell_annotation_values = NULL,   dim_reduction_to_use = \"umap\",   dim_reduction_name = \"umap\",   dim1_to_use = 1,   dim2_to_use = 2,   sdimx = \"sdimx\",   sdimy = \"sdimy\",   cell_color_gradient = NULL,   gradient_midpoint = NULL,   gradient_style = c(\"divergent\", \"sequential\"),   gradient_limits = NULL,   select_cell_groups = NULL,   select_cells = NULL,   dim_point_shape = c(\"border\", \"no_border\"),   dim_point_size = 1,   dim_point_alpha = 1,   dim_point_border_col = \"black\",   dim_point_border_stroke = 0.1,   spat_point_shape = c(\"border\", \"no_border\", \"voronoi\"),   spat_point_size = 1,   spat_point_alpha = 1,   spat_point_border_col = \"black\",   spat_point_border_stroke = 0.1,   dim_show_cluster_center = FALSE,   dim_show_center_label = TRUE,   dim_center_point_size = 4,   dim_center_point_border_col = \"black\",   dim_center_point_border_stroke = 0.1,   dim_label_size = 4,   dim_label_fontface = \"bold\",   spat_show_cluster_center = FALSE,   spat_show_center_label = FALSE,   spat_center_point_size = 4,   spat_center_point_border_col = \"black\",   spat_center_point_border_stroke = 0.1,   spat_label_size = 4,   spat_label_fontface = \"bold\",   show_NN_network = FALSE,   nn_network_to_use = \"sNN\",   nn_network_name = \"sNN.pca\",   dim_edge_alpha = 0.5,   spat_show_network = FALSE,   spatial_network_name = \"Delaunay_network\",   spat_network_color = \"red\",   spat_network_alpha = 0.5,   spat_show_grid = FALSE,   spatial_grid_name = \"spatial_grid\",   spat_grid_color = \"green\",   show_other_cells = TRUE,   other_cell_color = \"grey\",   dim_other_point_size = 0.5,   spat_other_point_size = 0.5,   spat_other_cells_alpha = 0.5,   show_legend = TRUE,   legend_text = 8,   legend_symbol_size = 1,   dim_background_color = \"white\",   spat_background_color = \"white\",   vor_border_color = \"white\",   vor_max_radius = 200,   vor_alpha = 1,   axis_text = 8,   axis_title = 8,   coord_fix_ratio = 1,   cow_n_col = NULL,   cow_rel_h = 1,   cow_rel_w = 1,   cow_align = \"h\",   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatDimCellPlot2D\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatDimCellPlot2D — spatDimCellPlot2D","text":"gobject giotto object feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") spat_unit spatial unit (e.g. \"cell\") show_image show tissue background image gimage giotto image image_name name giotto image multiple images group_by largeImage_name name giottoLargeImage multiple images group_by plot_alignment direction align plot spat_enr_names character. names spatial enrichment results include cell_annotation_values numeric cell annotation columns dim_reduction_to_use character. dimension reduction use dim_reduction_name character. dimension reduction name dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis sdimx = spatial dimension use x-axis sdimy = spatial dimension use y-axis cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs dim_point_shape point border (border no_border) dim_point_size size points dim. reduction space dim_point_alpha transparancy point dim. reduction space dim_point_border_col border color points dim. reduction space dim_point_border_stroke border stroke points dim. reduction space spat_point_shape shape points (border, no_border voronoi) spat_point_size size spatial points spat_point_alpha transparency spatial points spat_point_border_col border color spatial points spat_point_border_stroke border stroke spatial points dim_show_cluster_center show center cluster dim_show_center_label provide label cluster dim_center_point_size size center point dim_center_point_border_col border color center point dim_center_point_border_stroke stroke size center point dim_label_size size center label dim_label_fontface font center label spat_show_cluster_center show center cluster spat_show_center_label provide label cluster spat_center_point_size size spatial center points spat_center_point_border_col border color spatial center points spat_center_point_border_stroke stroke size spatial center points spat_label_size size center label spat_label_fontface font center label show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) nn_network_name character. name NN network use, show_NN_network = TRUE dim_edge_alpha column use alpha edges spat_show_network show spatial network spatial_network_name name spatial network use spat_network_color color spatial network spat_network_alpha alpha spatial network spat_show_grid show spatial grid spatial_grid_name name spatial grid use spat_grid_color color spatial grid show_other_cells display selected cells other_cell_color color selected cells dim_other_point_size size selected dim cells spat_other_point_size size selected spat cells spat_other_cells_alpha alpha selected spat cells show_legend logical. show legend legend_text size legend text legend_symbol_size size legend symbols dim_background_color background color points dim. reduction space spat_background_color background color spatial points vor_border_color border colorr voronoi plot vor_max_radius maximum radius voronoi 'cells' vor_alpha transparancy voronoi 'cells' axis_text size axis text axis_title size axis title coord_fix_ratio ratio coordinates cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatDimCellPlot2D — spatDimCellPlot2D","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot2D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatDimCellPlot2D — spatDimCellPlot2D","text":"Description parameters.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimCellPlot2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatDimCellPlot2D — spatDimCellPlot2D","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatDimCellPlot2D(g, cell_annotation_values = \"leiden_clus\")"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot2D.html","id":null,"dir":"Reference","previous_headings":"","what":"spatDimFeatPlot2D — spatDimFeatPlot2D","title":"spatDimFeatPlot2D — spatDimFeatPlot2D","text":"Visualize cells according spatial dimension reduction coordinates ggplot mode","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatDimFeatPlot2D — spatDimFeatPlot2D","text":"","code":"spatDimFeatPlot2D(   gobject,   spat_unit = NULL,   feat_type = NULL,   show_image = FALSE,   gimage = NULL,   image_name = NULL,   largeImage_name = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   plot_alignment = c(\"vertical\", \"horizontal\"),   feats,   order = TRUE,   dim_reduction_to_use = \"umap\",   dim_reduction_name = \"umap\",   dim1_to_use = 1,   dim2_to_use = 2,   dim_point_shape = c(\"border\", \"no_border\"),   dim_point_size = 1,   dim_point_alpha = 1,   dim_point_border_col = \"black\",   dim_point_border_stroke = 0.1,   show_NN_network = FALSE,   show_spatial_network = FALSE,   dim_network_color = \"gray\",   nn_network_to_use = \"sNN\",   network_name = \"sNN.pca\",   dim_edge_alpha = NULL,   scale_alpha_with_expression = FALSE,   sdimx = \"sdimx\",   sdimy = \"sdimy\",   spatial_network_name = \"Delaunay_network\",   spatial_network_color = NULL,   show_spatial_grid = FALSE,   grid_color = NULL,   spatial_grid_name = \"spatial_grid\",   spat_point_shape = c(\"border\", \"no_border\", \"voronoi\"),   spat_point_size = 1,   spat_point_alpha = 1,   spat_point_border_col = \"black\",   spat_point_border_stroke = 0.1,   spat_edge_alpha = NULL,   cell_color_gradient = NULL,   gradient_midpoint = NULL,   gradient_style = c(\"divergent\", \"sequential\"),   gradient_limits = NULL,   cow_n_col = NULL,   cow_rel_h = 1,   cow_rel_w = 1,   cow_align = \"h\",   show_legend = TRUE,   legend_text = 10,   dim_background_color = \"white\",   spat_background_color = \"white\",   vor_border_color = \"white\",   vor_max_radius = 200,   vor_alpha = 1,   axis_text = 8,   axis_title = 8,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatDimFeatPlot2D\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatDimFeatPlot2D — spatDimFeatPlot2D","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_image show tissue background image gimage giotto image image_name name giotto image multiple images group_by largeImage_name name giottoLargeImage multiple images group_by expression_values feat expression values use plot_alignment direction align plot feats features show order order points according feature expression dim_reduction_to_use character. dimension reduction use dim_reduction_name character. dimension reduction name dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis dim_point_shape point border (border no_border) dim_point_size size points dim. reduction space dim_point_alpha transparancy point dim. reduction space dim_point_border_col border color points dim. reduction space dim_point_border_stroke border stroke points dim. reduction space show_NN_network logical. Show underlying NN network show_spatial_network show spatial network dim_network_color color NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name name NN network use, show_NN_network = TRUE dim_edge_alpha dim reduction plot: column use alpha edges scale_alpha_with_expression scale expression ggplot alpha parameter sdimx spatial x-axis dimension name (default = 'sdimx') sdimy spatial y-axis dimension name (default = 'sdimy') spatial_network_name name spatial network use spatial_network_color color spatial network show_spatial_grid show spatial grid grid_color color spatial grid spatial_grid_name name spatial grid use spat_point_shape spatial points border (border no_border) spat_point_size spatial plot: point size spat_point_alpha transparency spatial points spat_point_border_col color border around points spat_point_border_stroke stroke size border around points spat_edge_alpha edge alpha cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align show_legend logical. show legend legend_text size legend text dim_background_color color plot background dimension plot spat_background_color color plot background spatial plot vor_border_color border colorr voronoi plot vor_max_radius maximum radius voronoi 'cells' vor_alpha transparancy voronoi 'cells' axis_text size axis text axis_title size axis title show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatDimFeatPlot2D — spatDimFeatPlot2D","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot2D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatDimFeatPlot2D — spatDimFeatPlot2D","text":"Description parameters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatDimFeatPlot2D — spatDimFeatPlot2D","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatDimFeatPlot2D(g, feats = c(\"Gna12\", \"Ccnd2\", \"Btbd17\"))"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot3D.html","id":null,"dir":"Reference","previous_headings":"","what":"spatDimFeatPlot3D — spatDimFeatPlot3D","title":"spatDimFeatPlot3D — spatDimFeatPlot3D","text":"Visualize cells according spatial dimension reduction coordinates ggplot mode","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatDimFeatPlot3D — spatDimFeatPlot3D","text":"","code":"spatDimFeatPlot3D(   gobject,   feat_type = NULL,   spat_unit = NULL,   spat_loc_name = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   plot_alignment = c(\"horizontal\", \"vertical\"),   dim_reduction_to_use = \"umap\",   dim_reduction_name = \"umap\",   dim1_to_use = 1,   dim2_to_use = 2,   dim3_to_use = NULL,   sdimx = \"sdimx\",   sdimy = \"sdimy\",   sdimz = \"sdimz\",   genes,   cluster_column = NULL,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 1.5,   show_NN_network = FALSE,   nn_network_to_use = \"sNN\",   nn_network_color = \"lightgrey\",   nn_network_alpha = 0.5,   network_name = \"sNN.pca\",   label_size = 16,   genes_low_color = \"blue\",   genes_mid_color = \"white\",   genes_high_color = \"red\",   dim_point_size = 3,   show_spatial_network = FALSE,   spatial_network_name = \"Delaunay_network\",   spatial_network_color = \"lightgray\",   spatial_network_alpha = 0.5,   show_spatial_grid = FALSE,   spatial_grid_name = \"spatial_grid\",   spatial_grid_color = NULL,   spatial_grid_alpha = 0.5,   spatial_point_size = 3,   legend_text_size = 12,   axis_scale = c(\"cube\", \"real\", \"custom\"),   custom_ratio = NULL,   x_ticks = NULL,   y_ticks = NULL,   z_ticks = NULL,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatDimFeatPlot3D\" )  spatDimGenePlot3D(...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatDimFeatPlot3D — spatDimFeatPlot3D","text":"gobject giotto object feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") spat_unit spatial unit (e.g. \"cell\") spat_loc_name name spatial locations use expression_values gene expression values use plot_alignment direction align plot dim_reduction_to_use dimension reduction use dim_reduction_name dimension reduction name dim1_to_use dimension use x-axis dim2_to_use dimension use y-axis dim3_to_use dimension use z-axis sdimx spatial dimension use x-axis sdimy spatial dimension use y-axis sdimz spatial dimension use z-axis genes genes show cluster_column cluster column select groups select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size size selected cells show_NN_network show underlying NN network nn_network_to_use type NN network use (kNN vs sNN) nn_network_color color NN network nn_network_alpha alpha NN network network_name name NN network use, show_NN_network = TRUE label_size size labels genes_low_color color low expression levels genes_mid_color color medium expression levels genes_high_color color high expression levels dim_point_size dim reduction plot: point size show_spatial_network show spatial network (boolean) spatial_network_name name spatial network use spatial_network_color color spatial network spatial_network_alpha alpha spatial network show_spatial_grid show spatial grid (boolean) spatial_grid_name name spatial grid use spatial_grid_color color spatial grid spatial_grid_alpha alpha spatial grid spatial_point_size spatial plot: point size legend_text_size size legend axis_scale way scale axis custom_ratio customize scale plot x_ticks set number ticks x-axis y_ticks set number ticks y-axis z_ticks set number ticks z-axis show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param ... additional params pass","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatDimFeatPlot3D — spatDimFeatPlot3D","text":"plotly","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatDimFeatPlot3D — spatDimFeatPlot3D","text":"Description parameters.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot3D.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"spatDimFeatPlot3D — spatDimFeatPlot3D","text":"spatDimGenePlot3D(): deprecated","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimFeatPlot3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatDimFeatPlot3D — spatDimFeatPlot3D","text":"","code":"g <- GiottoData::loadGiottoMini(\"starmap\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatDimFeatPlot3D(g, genes = \"Slc17a7\") #> Warning: 'layout' objects don't have these attributes: 'NA' #> Valid attributes include: #> '_deprecated', 'activeshape', 'annotations', 'autosize', 'autotypenumbers', 'calendar', 'clickmode', 'coloraxis', 'colorscale', 'colorway', 'computed', 'datarevision', 'dragmode', 'editrevision', 'editType', 'font', 'geo', 'grid', 'height', 'hidesources', 'hoverdistance', 'hoverlabel', 'hovermode', 'images', 'legend', 'mapbox', 'margin', 'meta', 'metasrc', 'modebar', 'newshape', 'paper_bgcolor', 'plot_bgcolor', 'polar', 'scene', 'selectdirection', 'selectionrevision', 'separators', 'shapes', 'showlegend', 'sliders', 'smith', 'spikedistance', 'template', 'ternary', 'title', 'transition', 'uirevision', 'uniformtext', 'updatemenus', 'width', 'xaxis', 'yaxis', 'barmode', 'bargap', 'mapType'"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"spatDimPlot — spatDimPlot","title":"spatDimPlot — spatDimPlot","text":"Visualize cells according spatial dimension reduction coordinates 2D","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatDimPlot — spatDimPlot","text":"","code":"spatDimPlot2D(   gobject,   spat_unit = NULL,   feat_type = NULL,   show_image = FALSE,   gimage = NULL,   image_name = NULL,   largeImage_name = NULL,   spat_loc_name = NULL,   plot_alignment = c(\"vertical\", \"horizontal\"),   dim_reduction_to_use = \"umap\",   dim_reduction_name = NULL,   dim1_to_use = 1,   dim2_to_use = 2,   sdimx = \"sdimx\",   sdimy = \"sdimy\",   spat_enr_names = NULL,   cell_color = NULL,   color_as_factor = TRUE,   cell_color_code = NULL,   cell_color_gradient = NULL,   gradient_midpoint = NULL,   gradient_style = c(\"divergent\", \"sequential\"),   gradient_limits = NULL,   select_cell_groups = NULL,   select_cells = NULL,   dim_point_shape = c(\"border\", \"no_border\"),   dim_point_size = 1,   dim_point_alpha = 1,   dim_point_border_col = \"black\",   dim_point_border_stroke = 0.1,   spat_point_shape = c(\"border\", \"no_border\", \"voronoi\"),   spat_point_size = 1,   spat_point_alpha = 1,   spat_point_border_col = \"black\",   spat_point_border_stroke = 0.1,   dim_show_cluster_center = FALSE,   dim_show_center_label = TRUE,   dim_center_point_size = 4,   dim_center_point_border_col = \"black\",   dim_center_point_border_stroke = 0.1,   dim_label_size = 4,   dim_label_fontface = \"bold\",   spat_show_cluster_center = FALSE,   spat_show_center_label = FALSE,   spat_center_point_size = 4,   spat_center_point_border_col = \"blue\",   spat_center_point_border_stroke = 0.1,   spat_label_size = 4,   spat_label_fontface = \"bold\",   show_NN_network = FALSE,   nn_network_to_use = \"sNN\",   network_name = \"sNN.pca\",   nn_network_alpha = 0.05,   show_spatial_network = FALSE,   spat_network_name = \"Delaunay_network\",   spat_network_color = \"blue\",   spat_network_alpha = 0.5,   show_spatial_grid = FALSE,   spat_grid_name = \"spatial_grid\",   spat_grid_color = \"blue\",   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   dim_other_point_size = 1,   spat_other_point_size = 1,   spat_other_cells_alpha = 0.5,   dim_show_legend = FALSE,   spat_show_legend = FALSE,   legend_text = 10,   legend_symbol_size = 2,   dim_background_color = \"white\",   spat_background_color = \"white\",   vor_border_color = \"white\",   vor_max_radius = 200,   vor_alpha = 1,   axis_text = 8,   axis_title = 8,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatDimPlot2D\" )  spatDimPlot(gobject, ...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatDimPlot — spatDimPlot","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_image show tissue background image gimage giotto image image_name name giotto image multiple images group_by largeImage_name deprecated spat_loc_name name spatial locations plot_alignment direction align plot dim_reduction_to_use character. dimension reduction use dim_reduction_name character. dimension reduction name dim1_to_use numeric. dimension use x-axis dim2_to_use numeric. dimension use y-axis sdimx = spatial dimension use x-axis sdimy = spatial dimension use y-axis spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs dim_point_shape point border (border no_border) dim_point_size size points dim. reduction space dim_point_alpha transparancy point dim. reduction space dim_point_border_col border color points dim. reduction space dim_point_border_stroke border stroke points dim. reduction space spat_point_shape shape points (border, no_border voronoi) spat_point_size size spatial points spat_point_alpha transparancy spatial points spat_point_border_col border color spatial points spat_point_border_stroke border stroke spatial points dim_show_cluster_center show center cluster dim_show_center_label provide label cluster dim_center_point_size size center point dim_center_point_border_col border color center point dim_center_point_border_stroke stroke size center point dim_label_size size center label dim_label_fontface font center label spat_show_cluster_center show center cluster spat_show_center_label provide label cluster spat_center_point_size size center point spat_center_point_border_col border color spatial center points spat_center_point_border_stroke border strike size spatial center points spat_label_size size center label spat_label_fontface font center label show_NN_network logical. Show underlying NN network nn_network_to_use character. type NN network use (kNN vs sNN) network_name character. name NN network use, show_NN_network = TRUE nn_network_alpha column use alpha edges show_spatial_network show spatial network spat_network_name name spatial network use spat_network_color color spatial network spat_network_alpha alpha spatial network show_spatial_grid show spatial grid spat_grid_name name spatial grid use spat_grid_color color spatial grid show_other_cells display selected cells other_cell_color color selected cells dim_other_point_size size selected dim cells spat_other_point_size size selected spat cells spat_other_cells_alpha alpha selected spat cells dim_show_legend show legend dimension reduction plot spat_show_legend show legend spatial plot legend_text size legend text legend_symbol_size size legend symbols dim_background_color background color points dim. reduction space spat_background_color background color spatial points vor_border_color border color voronoi plot vor_max_radius maximum radius voronoi 'cells' vor_alpha transparency voronoi 'cells' axis_text size axis text axis_title size axis title show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param ... spatDimPlot(...) passes spatDimPlot2D()","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatDimPlot — spatDimPlot","text":"ggplot ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatDimPlot — spatDimPlot","text":"Description parameters.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatDimPlot — spatDimPlot","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatDimPlot2D(g)   g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatDimPlot(g)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimPlot3D.html","id":null,"dir":"Reference","previous_headings":"","what":"spatDimPlot3D — spatDimPlot3D","title":"spatDimPlot3D — spatDimPlot3D","text":"Visualize cells according spatial dimension reduction coordinates plotly mode","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimPlot3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatDimPlot3D — spatDimPlot3D","text":"","code":"spatDimPlot3D(   gobject,   spat_unit = NULL,   feat_type = NULL,   plot_alignment = c(\"horizontal\", \"vertical\"),   dim_reduction_to_use = \"umap\",   dim_reduction_name = \"umap\",   dim1_to_use = 1,   dim2_to_use = 2,   dim3_to_use = 3,   spat_loc_name = NULL,   sdimx = \"sdimx\",   sdimy = \"sdimy\",   sdimz = \"sdimz\",   spat_enr_names = NULL,   show_NN_network = FALSE,   nn_network_to_use = \"sNN\",   network_name = \"sNN.pca\",   nn_network_color = \"lightgray\",   nn_network_alpha = 0.5,   show_cluster_center = FALSE,   show_center_label = TRUE,   center_point_size = 4,   label_size = 16,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 1.5,   cell_color = NULL,   color_as_factor = TRUE,   cell_color_code = NULL,   dim_point_size = 3,   show_spatial_network = FALSE,   spatial_network_name = \"Delaunay_network\",   spatial_network_color = \"lightgray\",   spatial_network_alpha = 0.5,   show_spatial_grid = FALSE,   spatial_grid_name = \"spatial_grid\",   spatial_grid_color = NULL,   spatial_grid_alpha = 0.5,   spatial_point_size = 3,   axis_scale = c(\"cube\", \"real\", \"custom\"),   custom_ratio = NULL,   x_ticks = NULL,   y_ticks = NULL,   z_ticks = NULL,   legend_text_size = 12,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatDimPlot3D\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimPlot3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatDimPlot3D — spatDimPlot3D","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") plot_alignment direction align plot dim_reduction_to_use dimension reduction use dim_reduction_name dimension reduction name dim1_to_use dimension use x-axis dim2_to_use dimension use y-axis dim3_to_use dimension use z-axis spat_loc_name name spatial locations sdimx = spatial dimension use x-axis sdimy = spatial dimension use y-axis sdimz = spatial dimension use z-axis spat_enr_names names spatial enrichment results include show_NN_network show underlying NN network nn_network_to_use type NN network use (kNN vs sNN) network_name name NN network use, show_NN_network = TRUE nn_network_color color nn network nn_network_alpha column use alpha edges show_cluster_center show center cluster show_center_label provide label cluster center_point_size size center point label_size size center label select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size size selected cells cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors dim_point_size size points dim. reduction space show_spatial_network show spatial network spatial_network_name name spatial network use spatial_network_color color spatial network spatial_network_alpha alpha spatial network show_spatial_grid show spatial grid spatial_grid_name name spatial grid use spatial_grid_color color spatial grid spatial_grid_alpha alpha spatial grid spatial_point_size size spatial points axis_scale way scale axis custom_ratio customize scale plot x_ticks set number ticks x-axis y_ticks set number ticks y-axis z_ticks set number ticks z-axis legend_text_size size legend show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimPlot3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatDimPlot3D — spatDimPlot3D","text":"plotly","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatDimPlot3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatDimPlot3D — spatDimPlot3D","text":"Description parameters.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data in physical space 2D — spatFeatPlot2D","title":"Plot data in physical space 2D — spatFeatPlot2D","text":"Visualize cells feature expression according spatial coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data in physical space 2D — spatFeatPlot2D","text":"","code":"spatFeatPlot2D(   gobject,   feat_type = NULL,   spat_unit = NULL,   show_image = FALSE,   gimage = NULL,   image_name = NULL,   largeImage_name = NULL,   spat_loc_name = NULL,   group_by = NULL,   group_by_subset = NULL,   sdimx = \"sdimx\",   sdimy = \"sdimy\",   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   feats,   order = TRUE,   cell_color_gradient = NULL,   gradient_midpoint = NULL,   gradient_style = c(\"divergent\", \"sequential\"),   gradient_limits = NULL,   show_network = FALSE,   network_color = NULL,   edge_alpha = NULL,   spatial_network_name = \"Delaunay_network\",   show_grid = FALSE,   grid_color = NULL,   spatial_grid_name = \"spatial_grid\",   midpoint = 0,   scale_alpha_with_expression = FALSE,   point_shape = c(\"border\", \"no_border\", \"voronoi\"),   point_size = 1,   point_alpha = 1,   point_border_col = \"black\",   point_border_stroke = 0.1,   coord_fix_ratio = 1,   show_legend = TRUE,   legend_text = 8,   background_color = \"white\",   vor_border_color = \"white\",   vor_alpha = 1,   vor_max_radius = 200,   axis_text = 8,   axis_title = 8,   cow_n_col = NULL,   cow_rel_h = 1,   cow_rel_w = 1,   cow_align = \"h\",   theme_param = list(),   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatFeatPlot2D\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data in physical space 2D — spatFeatPlot2D","text":"gobject giotto object feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") spat_unit spatial unit (e.g. \"cell\") show_image show tissue background image gimage giotto image image_name name giotto image multiple images group_by largeImage_name deprecated spat_loc_name name spatial locations group_by character. Create multiple plots based cell annotation column group_by_subset character. subset group_by factor column sdimx x-axis dimension name (default = 'sdimx') sdimy y-axis dimension name (default = 'sdimy') expression_values gene expression values use feats features show order order points according feature expression cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits show_network show underlying spatial network network_color color spatial network edge_alpha alpha spatial network spatial_network_name name spatial network use show_grid show spatial grid grid_color color spatial grid spatial_grid_name name spatial grid use midpoint expression midpoint scale_alpha_with_expression scale expression ggplot alpha parameter point_shape point border (border no_border) point_size size point (cell) point_alpha transparency points point_border_col color border around points point_border_stroke stroke size border around points coord_fix_ratio fix ratio x y-axis (default = 1) show_legend logical. show legend legend_text size legend text background_color color plot background vor_border_color border colorr voronoi plot vor_alpha transparency voronoi 'cells' vor_max_radius maximum radius voronoi 'cells' axis_text size axis text axis_title size axis title cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align theme_param list additional params passed ggplot2::theme() show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot data in physical space 2D — spatFeatPlot2D","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot data in physical space 2D — spatFeatPlot2D","text":"Description parameters.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot data in physical space 2D — spatFeatPlot2D","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatFeatPlot2D(g, feats = \"Gna12\")"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D_single.html","id":null,"dir":"Reference","previous_headings":"","what":"spatFeatPlot2D_single — spatFeatPlot2D_single","title":"spatFeatPlot2D_single — spatFeatPlot2D_single","text":"Visualize cells feature expression according spatial coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatFeatPlot2D_single — spatFeatPlot2D_single","text":"","code":"spatFeatPlot2D_single(   gobject,   spat_unit = NULL,   feat_type = NULL,   show_image = FALSE,   gimage = NULL,   image_name = NULL,   largeImage_name = NULL,   spat_loc_name = \"raw\",   sdimx = \"sdimx\",   sdimy = \"sdimy\",   spat_enr_names = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   feats,   order = TRUE,   cell_color_gradient = NULL,   gradient_midpoint = NULL,   gradient_style = c(\"divergent\", \"sequential\"),   gradient_limits = NULL,   show_network = FALSE,   network_color = NULL,   edge_alpha = 0.5,   spatial_network_name = \"Delaunay_network\",   show_grid = FALSE,   grid_color = NULL,   spatial_grid_name = \"spatial_grid\",   midpoint = 0,   scale_alpha_with_expression = FALSE,   point_shape = c(\"border\", \"no_border\", \"voronoi\"),   point_size = 1,   point_alpha = 1,   point_border_col = \"black\",   point_border_stroke = 0.1,   coord_fix_ratio = 1,   show_legend = TRUE,   legend_text = 8,   background_color = \"white\",   vor_border_color = \"white\",   vor_alpha = 1,   vor_max_radius = 200,   axis_text = 8,   axis_title = 8,   cow_n_col = NULL,   cow_rel_h = 1,   cow_rel_w = 1,   cow_align = \"h\",   theme_param = list(),   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatFeatPlot2D_single\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatFeatPlot2D_single — spatFeatPlot2D_single","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_image show tissue background image gimage giotto image image_name name giotto image multiple images group_by largeImage_name deprecated spat_loc_name name spatial locations sdimx x-axis dimension name (default = 'sdimx') sdimy y-axis dimension name (default = 'sdimy') spat_enr_names names spatial enrichment results include expression_values gene expression values use feats features show order order points according feature expression cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint numeric. midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits numeric vector lower upper limits show_network show underlying spatial network network_color color spatial network edge_alpha alpha spatial network spatial_network_name name spatial network use show_grid show spatial grid grid_color color spatial grid spatial_grid_name name spatial grid use midpoint expression midpoint scale_alpha_with_expression scale expression ggplot alpha parameter point_shape shape points (border, no_border voronoi) point_size size point (cell) point_alpha transparancy points point_border_col color border around points point_border_stroke stroke size border around points coord_fix_ratio fix ratio x y-axis (default = 1) show_legend logical. show legend legend_text size legend text background_color color plot background vor_border_color border colorr voronoi plot vor_alpha transparency voronoi 'cells' vor_max_radius maximum radius voronoi 'cells' axis_text size axis text axis_title size axis title cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align theme_param list additional params passed ggplot2::theme() show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatFeatPlot2D_single — spatFeatPlot2D_single","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatFeatPlot2D_single — spatFeatPlot2D_single","text":"Description parameters.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot2D_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatFeatPlot2D_single — spatFeatPlot2D_single","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatFeatPlot2D_single(g, feats = c(\"Gna12\", \"Ccnd2\", \"Btbd17\"))"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot3D.html","id":null,"dir":"Reference","previous_headings":"","what":"spatFeatPlot3D — spatFeatPlot3D","title":"spatFeatPlot3D — spatFeatPlot3D","text":"Visualize cells gene expression according spatial coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatFeatPlot3D — spatFeatPlot3D","text":"","code":"spatFeatPlot3D(   gobject,   spat_unit = NULL,   feat_type = NULL,   spat_loc_name = \"raw\",   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   feats,   spat_enr_names = NULL,   show_network = FALSE,   network_color = NULL,   spatial_network_name = \"Delaunay_network\",   edge_alpha = NULL,   cluster_column = NULL,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = FALSE,   other_cell_color = \"lightgrey\",   other_point_size = 1,   genes_high_color = NULL,   genes_mid_color = \"white\",   genes_low_color = \"blue\",   show_grid = FALSE,   spatial_grid_name = \"spatial_grid\",   point_size = 2,   show_legend = TRUE,   axis_scale = c(\"cube\", \"real\", \"custom\"),   custom_ratio = NULL,   x_ticks = NULL,   y_ticks = NULL,   z_ticks = NULL,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatFeatPlot3D\",   ... )  spatGenePlot3D(...)"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatFeatPlot3D — spatFeatPlot3D","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") spat_loc_name name spatial locations use expression_values gene expression values use feats feats show spat_enr_names names spatial enrichment results include show_network show underlying spatial network network_color color spatial network spatial_network_name name spatial network use edge_alpha alpha edges cluster_column cluster column select groups select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs show_other_cells display selected cells other_cell_color color selected cells other_point_size size selected cells genes_high_color color represents high gene expression genes_mid_color color represents middle gene expression genes_low_color color represents low gene expression show_grid show spatial grid spatial_grid_name name spatial grid use point_size size point (cell) show_legend show legend axis_scale way scale axis custom_ratio customize scale plot x_ticks set number ticks x-axis y_ticks set number ticks y-axis z_ticks set number ticks z-axis show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param ... additional params pass","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatFeatPlot3D — spatFeatPlot3D","text":"plotly","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot3D.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"spatFeatPlot3D — spatFeatPlot3D","text":"spatGenePlot3D(): deprecated","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatFeatPlot3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatFeatPlot3D — spatFeatPlot3D","text":"","code":"g <- GiottoData::loadGiottoMini(\"starmap\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatFeatPlot3D(g, feats = \"Slc17a7\")"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"spatInSituPlotDensity — spatInSituPlotDensity","title":"spatInSituPlotDensity — spatInSituPlotDensity","text":"Function density plots features multiple modalities spatial situ level","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatInSituPlotDensity — spatInSituPlotDensity","text":"","code":"spatInSituPlotDensity(   gobject,   feats = NULL,   feat_type = \"rna\",   sdimx = \"x\",   sdimy = \"y\",   alpha = 0.95,   show_polygon = TRUE,   polygon_feat_type = \"cell\",   polygon_color = \"black\",   polygon_fill = NULL,   polygon_fill_as_factor = NULL,   polygon_alpha = 0.5,   polygon_size = deprecated(),   polygon_line_size = 0.5,   coord_fix_ratio = 1,   axis_text = 8,   axis_title = 8,   legend_text = 6,   background_color = \"black\",   cow_n_col = NULL,   cow_rel_h = 1,   cow_rel_w = 1,   cow_align = \"h\",   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatInSituPlotDensity\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatInSituPlotDensity — spatInSituPlotDensity","text":"gobject giotto object feats features plot feat_type feature types feats sdimx spatial dimension x sdimy spatial dimension y alpha alpha density plot show_polygon overlay polygon information (e.g. cell shape) polygon_feat_type feature type associated polygon information polygon_color color polygon border. Set NA remove border polygon_fill character. color fill polgyons (e.g. metadata col spatial enrichment col) polygon_fill_as_factor fill color factor polygon_alpha alpha polygon polygon_size deprecated polygon_line_size line width polygon's outline coord_fix_ratio fix ratio x y-axis axis_text axis text size axis_title title text size legend_text legend text size background_color background color cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatInSituPlotDensity — spatInSituPlotDensity","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotDensity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatInSituPlotDensity — spatInSituPlotDensity","text":"TODO","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotDensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatInSituPlotDensity — spatInSituPlotDensity","text":"","code":"g <- GiottoData::loadGiottoMini(\"vizgen\") #> 1. read Giotto object #> 2. read Giotto feature information #> /home/runner/work/_temp/Library/GiottoData/Mini_datasets/Vizgen/VizgenObject/Features/rna_feature_spatVector.shp #> rna #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> aggregate_spatInfo_spatVector.shp z0_spatInfo_spatVector.shp #>  z1_spatInfo_spatVector.shp #> aggregate #> z0 #> z1 #>  #> 3.2 read Giotto spatial centroid information #> aggregate #> z0 #> z1 #>  #> 3.3 read Giotto spatial overlap information #> rna_aggregate_spatInfo_spatVectorOverlaps.shp #>  rna_z0_spatInfo_spatVectorOverlaps.shp rna_z1_spatInfo_spatVectorOverlaps.shp #> poly_ID feat_ID feat_ID_uniq stack #> aggregate and rna #> poly_ID feat_ID feat_ID_uniq #> z0 and rna #> poly_ID feat_ID feat_ID_uniq #> z1 and rna #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatInSituPlotDensity(g, feats = c(\"Mlc1\", \"Gprc5b\", \"Gfap\"), polygon_feat_type = \"z0\")"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotHex.html","id":null,"dir":"Reference","previous_headings":"","what":"spatInSituPlotHex — spatInSituPlotHex","title":"spatInSituPlotHex — spatInSituPlotHex","text":"Function plot hexbins features multiple modalities spatial situ level","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotHex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatInSituPlotHex — spatInSituPlotHex","text":"","code":"spatInSituPlotHex(   gobject,   feats = NULL,   feat_type = \"rna\",   sdimx = \"x\",   sdimy = \"y\",   binwidth = NULL,   min_axis_bins = 10,   alpha = 0.5,   show_polygon = TRUE,   polygon_feat_type = \"cell\",   polygon_color = \"black\",   polygon_fill = NULL,   polygon_fill_as_factor = NULL,   polygon_alpha = 0.5,   polygon_size = deprecated(),   polygon_line_size = 0.5,   coord_fix_ratio = 1,   axis_text = 8,   axis_title = 8,   legend_text = 6,   background_color = \"white\",   cow_n_col = NULL,   cow_rel_h = 1,   cow_rel_w = 1,   cow_align = \"h\",   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatInSituPlotHex\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotHex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatInSituPlotHex — spatInSituPlotHex","text":"gobject giotto object feats features plot feat_type feature types feats sdimx spatial dimension x sdimy spatial dimension y binwidth numeric vector x y width bins (default minor axis range/10, 10 min_axis_bins) min_axis_bins number bins create per range defined minor axis (default value 10) alpha alpha hexbin plot show_polygon overlay polygon information (e.g. cell shape) polygon_feat_type feature type associated polygon information polygon_color color polygon border. Set NA remove border polygon_fill character. color fill polgyons (e.g. metadata col spatial enrichment col) polygon_fill_as_factor fill color factor polygon_alpha alpha polygon polygon_size deprecated polygon_line_size line width polygon's outline coord_fix_ratio fix ratio x y-axis axis_text axis text size axis_title title text size legend_text legend text size background_color background color cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotHex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatInSituPlotHex — spatInSituPlotHex","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotHex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatInSituPlotHex — spatInSituPlotHex","text":"TODO","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotHex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatInSituPlotHex — spatInSituPlotHex","text":"","code":"g <- GiottoData::loadGiottoMini(\"vizgen\") #> 1. read Giotto object #> 2. read Giotto feature information #> /home/runner/work/_temp/Library/GiottoData/Mini_datasets/Vizgen/VizgenObject/Features/rna_feature_spatVector.shp #> rna #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> aggregate_spatInfo_spatVector.shp z0_spatInfo_spatVector.shp #>  z1_spatInfo_spatVector.shp #> aggregate #> z0 #> z1 #>  #> 3.2 read Giotto spatial centroid information #> aggregate #> z0 #> z1 #>  #> 3.3 read Giotto spatial overlap information #> rna_aggregate_spatInfo_spatVectorOverlaps.shp #>  rna_z0_spatInfo_spatVectorOverlaps.shp rna_z1_spatInfo_spatVectorOverlaps.shp #> poly_ID feat_ID feat_ID_uniq stack #> aggregate and rna #> poly_ID feat_ID feat_ID_uniq #> z0 and rna #> poly_ID feat_ID feat_ID_uniq #> z1 and rna #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatInSituPlotHex(g, feats = c(\"Mlc1\", \"Gprc5b\", \"Gfap\"), polygon_feat_type = \"z0\") #> Warning: Computation failed in `stat_binhex()`. #> Caused by error in `compute_group()`: #> ! The package \"hexbin\" is required for `stat_bin_hex()`. #> Warning: Computation failed in `stat_binhex()`. #> Caused by error in `compute_group()`: #> ! The package \"hexbin\" is required for `stat_bin_hex()`. #> Warning: Computation failed in `stat_binhex()`. #> Caused by error in `compute_group()`: #> ! The package \"hexbin\" is required for `stat_bin_hex()`."},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"spatInSituPlotPoints — spatInSituPlotPoints","title":"spatInSituPlotPoints — spatInSituPlotPoints","text":"Function plot multiple features multiple modalities spatial situ level","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatInSituPlotPoints — spatInSituPlotPoints","text":"","code":"spatInSituPlotPoints(   gobject,   show_image = FALSE,   gimage = NULL,   image_name = NULL,   largeImage_name = NULL,   spat_unit = NULL,   spat_loc_name = NULL,   feats = NULL,   feat_type = \"rna\",   feats_color_code = NULL,   feat_shape_code = NULL,   sdimx = \"x\",   sdimy = \"y\",   spat_enr_names = NULL,   point_size = 1.5,   stroke = 0.5,   expand_counts = FALSE,   count_info_column = \"count\",   jitter = c(0, 0),   show_polygon = TRUE,   use_overlap = TRUE,   polygon_feat_type = \"cell\",   polygon_color = \"black\",   polygon_bg_color = \"black\",   polygon_fill = NULL,   polygon_fill_gradient = NULL,   polygon_fill_gradient_midpoint = NULL,   polygon_fill_gradient_style = c(\"divergent\", \"sequential\"),   polygon_fill_as_factor = NULL,   polygon_fill_code = NULL,   polygon_alpha = NULL,   polygon_line_size = 0.4,   axis_text = 8,   axis_title = 8,   legend_text = 6,   coord_fix_ratio = 1,   background_color = \"black\",   show_legend = TRUE,   plot_method = c(\"ggplot\", \"scattermore\", \"scattermost\"),   plot_last = c(\"polygons\", \"points\"),   theme_param = list(),   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatInSituPlotPoints\",   verbose = TRUE )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatInSituPlotPoints — spatInSituPlotPoints","text":"gobject giotto object show_image show tissue background image gimage giotto image image_name name giotto image multiple images group_by largeImage_name deprecated spat_unit spatial unit (e.g. \"cell\") spat_loc_name name spatial locations feats named list features plot feat_type feature types feats feats_color_code code color provided features feat_shape_code code shape provided feature types sdimx spatial dimension x sdimy spatial dimension y spat_enr_names character. names spatial enrichment results include point_size size points stroke stroke apply feature points expand_counts expand feature coordinate counts (see details) count_info_column column name count information (expand_counts = TRUE) jitter numeric. Maximum x,y jitter provided c(x, y) single number recycled length 2. show_polygon overlay polygon information (e.g. cell shape) use_overlap use polygon feature coordinates overlap results polygon_feat_type feature type associated polygon information polygon_color color polygon border. Set NA remove border polygon_bg_color color polygon background (overruled polygon_fill) polygon_fill character. color fill polgyons (e.g. metadata col spatial enrichment col) polygon_fill_gradient polygon fill gradient colors given order low high polygon_fill_gradient_midpoint value set gradient midpoint (optional). left NULL, median value detected chosen polygon_fill_gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) polygon_fill_as_factor fill color factor polygon_fill_code code color fill column polygon_alpha alpha polygon polygon_line_size line width polygon's outline axis_text axis text size axis_title title text size legend_text legend text size coord_fix_ratio fix ratio coordinates background_color background color show_legend show legend plot_method method plot points plot_last layer show top plot, polygons (default) points. theme_param list additional params passed ggplot2::theme() show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param verbose verbose","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatInSituPlotPoints — spatInSituPlotPoints","text":"ggplot","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatInSituPlotPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatInSituPlotPoints — spatInSituPlotPoints","text":"","code":"g <- GiottoData::loadGiottoMini(\"vizgen\") #> 1. read Giotto object #> 2. read Giotto feature information #> /home/runner/work/_temp/Library/GiottoData/Mini_datasets/Vizgen/VizgenObject/Features/rna_feature_spatVector.shp #> rna #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> aggregate_spatInfo_spatVector.shp z0_spatInfo_spatVector.shp #>  z1_spatInfo_spatVector.shp #> aggregate #> z0 #> z1 #>  #> 3.2 read Giotto spatial centroid information #> aggregate #> z0 #> z1 #>  #> 3.3 read Giotto spatial overlap information #> rna_aggregate_spatInfo_spatVectorOverlaps.shp #>  rna_z0_spatInfo_spatVectorOverlaps.shp rna_z1_spatInfo_spatVectorOverlaps.shp #> poly_ID feat_ID feat_ID_uniq stack #> aggregate and rna #> poly_ID feat_ID feat_ID_uniq #> z0 and rna #> poly_ID feat_ID feat_ID_uniq #> z1 and rna #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed  # plot the number detected features in the `giotto` object. spatInSituPlotPoints(     g,     polygon_feat_type = \"aggregate\",     polygon_fill = \"nr_feats\",     polygon_fill_as_factor = FALSE,     polygon_fill_gradient_style = \"sequential\",     polygon_line_size = 0.1,     polygon_alpha = 1 ) #> plot polygon layer done   # plot the same as above, but with the first 4 rna features plotted as # detection points. Also add in the background and change the polygon # alpha and border color spatInSituPlotPoints(     g,     polygon_feat_type = \"aggregate\",     polygon_fill = \"nr_feats\",     polygon_fill_as_factor = FALSE,     polygon_fill_gradient_style = \"sequential\",     polygon_line_size = 0.1,     polygon_alpha = 0.4,     polygon_color = \"magenta\",     feats = list(\"rna\" = GiottoClass::featIDs(g)[1:4]),     point_size = 0.8,     plot_last = \"points\",     show_image = TRUE,     image_name = \"dapi_z0\" ) #> plot image layer done #> plot polygon layer done #> --| Plotting 1360 feature points #> plot feature points layer done   # plot with spatial enrichment information spatInSituPlotPoints(     g,     polygon_feat_type = \"aggregate\",     spat_enr_names = \"cluster_metagene\",     polygon_fill = \"1\",     polygon_fill_as_factor = FALSE,     polygon_fill_gradient_style = \"sequential\",     polygon_alpha = 1 ) #> plot polygon layer done"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributions.html","id":null,"dir":"Reference","previous_headings":"","what":"spatNetwDistributions — spatNetwDistributions","title":"spatNetwDistributions — spatNetwDistributions","text":"function return histograms displaying distance distribution spatial k-neighbor","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatNetwDistributions — spatNetwDistributions","text":"","code":"spatNetwDistributions(   gobject,   spat_unit = NULL,   spatial_network_name = \"spatial_network\",   distribution = c(\"distance\", \"k_neighbors\"),   hist_bins = 30,   test_distance_limit = NULL,   ncol = 1,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatNetwDistributions\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatNetwDistributions — spatNetwDistributions","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") spatial_network_name name spatial network distribution show distribution cell--cell distance number k neighbors hist_bins number binds use histogram test_distance_limit effect different distance threshold k-neighbors ncol number columns visualize histograms show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatNetwDistributions — spatNetwDistributions","text":"ggplot plot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatNetwDistributions — spatNetwDistributions","text":"distance option shows spatial distance distribution nearest neighbor rank (1st, 2nd, 3th, ... neighbor). option user can also test effect distance limit spatial network. distance limit can used remove neighbor cells considered far away.  k_neighbors option shows number k neighbors distribution cells.","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributionsDistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial distance distribution — spatNetwDistributionsDistance","title":"Plot spatial distance distribution — spatNetwDistributionsDistance","text":"function return histograms displaying distance distribution spatial k-neighbor","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributionsDistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial distance distribution — spatNetwDistributionsDistance","text":"","code":"spatNetwDistributionsDistance(   gobject,   spat_unit = NULL,   spatial_network_name = \"spatial_network\",   hist_bins = 30,   test_distance_limit = NULL,   ncol = 1,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatNetwDistributionsDistance\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributionsDistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial distance distribution — spatNetwDistributionsDistance","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") spatial_network_name name spatial network hist_bins number binds use histogram test_distance_limit effect different distance threshold k-neighbors ncol number columns visualize histograms show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributionsDistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot spatial distance distribution — spatNetwDistributionsDistance","text":"ggplot plot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributionsKneighbors.html","id":null,"dir":"Reference","previous_headings":"","what":"spatNetwDistributionsKneighbors — spatNetwDistributionsKneighbors","title":"spatNetwDistributionsKneighbors — spatNetwDistributionsKneighbors","text":"function returns histogram displaying number k-neighbors distribution cell","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributionsKneighbors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatNetwDistributionsKneighbors — spatNetwDistributionsKneighbors","text":"","code":"spatNetwDistributionsKneighbors(   gobject,   spat_unit = NULL,   spatial_network_name = \"spatial_network\",   hist_bins = 30,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spatNetwDistributionsKneighbors\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributionsKneighbors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatNetwDistributionsKneighbors — spatNetwDistributionsKneighbors","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") spatial_network_name name spatial network hist_bins number binds use histogram show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatNetwDistributionsKneighbors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatNetwDistributionsKneighbors — spatNetwDistributionsKneighbors","text":"ggplot plot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"spatPlot — spatPlot2D","title":"spatPlot — spatPlot2D","text":"Visualize cells according spatial coordinates","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatPlot — spatPlot2D","text":"","code":"spatPlot2D(   gobject,   spat_unit = NULL,   feat_type = NULL,   show_image = FALSE,   gimage = NULL,   image_name = NULL,   largeImage_name = NULL,   group_by = NULL,   group_by_subset = NULL,   spat_loc_name = NULL,   sdimx = \"sdimx\",   sdimy = \"sdimy\",   spat_enr_names = NULL,   cell_color = NULL,   color_as_factor = TRUE,   cell_color_code = NULL,   cell_color_gradient = NULL,   gradient_midpoint = NULL,   gradient_style = c(\"divergent\", \"sequential\"),   gradient_limits = NULL,   select_cell_groups = NULL,   select_cells = NULL,   point_shape = c(\"border\", \"no_border\", \"voronoi\"),   point_size = 3,   point_alpha = 1,   point_border_col = \"black\",   point_border_stroke = 0.1,   show_cluster_center = FALSE,   show_center_label = FALSE,   center_point_size = 4,   center_point_border_col = \"black\",   center_point_border_stroke = 0.1,   label_size = 4,   label_fontface = \"bold\",   show_network = FALSE,   spatial_network_name = \"Delaunay_network\",   network_color = NULL,   network_alpha = 1,   show_grid = FALSE,   spatial_grid_name = \"spatial_grid\",   grid_color = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 1,   other_cells_alpha = 0.1,   coord_fix_ratio = 1,   title = NULL,   show_legend = TRUE,   legend_text = 10,   legend_symbol_size = 2,   background_color = \"white\",   vor_border_color = \"white\",   vor_max_radius = 200,   vor_alpha = 1,   axis_text = 8,   axis_title = 8,   cow_n_col = NULL,   cow_rel_h = 1,   cow_rel_w = 1,   cow_align = \"h\",   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   theme_param = list(),   default_save_name = \"spatPlot2D\" )  spatPlot(...)  spatPlot3D(   gobject,   spat_unit = NULL,   feat_type = NULL,   sdimx = \"sdimx\",   sdimy = \"sdimy\",   sdimz = \"sdimz\",   spat_enr_names = NULL,   point_size = 3,   cell_color = NULL,   cell_color_code = NULL,   select_cell_groups = NULL,   select_cells = NULL,   show_other_cells = TRUE,   other_cell_color = \"lightgrey\",   other_point_size = 0.5,   other_cell_alpha = 0.5,   show_network = FALSE,   spatial_network_name = \"Delaunay_network\",   network_color = NULL,   network_alpha = 1,   show_grid = FALSE,   spatial_grid_name = \"spatial_grid\",   grid_color = NULL,   grid_alpha = 1,   title = \"\",   show_legend = TRUE,   axis_scale = c(\"cube\", \"real\", \"custom\"),   custom_ratio = NULL,   x_ticks = NULL,   y_ticks = NULL,   z_ticks = NULL,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"spat3D\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatPlot — spatPlot2D","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") show_image show tissue background image gimage giotto image image_name name giotto image multiple images group_by largeImage_name name giottoLargeImage multiple images group_by group_by character. Create multiple plots based cell annotation column group_by_subset character. subset group_by factor column spat_loc_name name spatial locations sdimx x-axis dimension name (default = 'sdimx') sdimy y-axis dimension name (default = 'sdimy') spat_enr_names character. names spatial enrichment results include cell_color character. color cells (e.g. metadata col spatial enrichment col) color_as_factor logical. convert color column factor. Discrete colors used TRUE. continuous colors FALSE. cell_color_code character. discrete colors use. palette use named vector colors cell_color_gradient character. continuous colors use. palette use vector colors use (minimum 2). gradient_midpoint midpoint color gradient gradient_style either 'divergent' (midpoint used color scaling) 'sequential' (scaled based data range) gradient_limits vector lower upper limits select_cell_groups select subset cells/clusters based cell_color parameter select_cells select subset cells based cell IDs point_shape shape points (border, no_border voronoi) point_size size point (cell) point_alpha transparancy point point_border_col color border around points point_border_stroke stroke size border around points show_cluster_center plot center selected clusters show_center_label plot label selected clusters center_point_size size center points center_point_border_col border color center points center_point_border_stroke border stroke size center points label_size size labels label_fontface font labels show_network show underlying spatial network spatial_network_name name spatial network use network_color color spatial network network_alpha alpha spatial network show_grid show spatial grid spatial_grid_name name spatial grid use grid_color color spatial grid show_other_cells display selected cells other_cell_color color selected cells other_point_size point size selected cells other_cells_alpha alpha selected cells coord_fix_ratio fix ratio x y-axis (default = 1) title title plot show_legend show legend legend_text size legend text legend_symbol_size size legend symbols background_color color plot background vor_border_color border color voronoi plot vor_max_radius maximum radius voronoi 'cells' vor_alpha transparency voronoi 'cells' axis_text size axis text axis_title size axis title cow_n_col cowplot param: many columns cow_rel_h cowplot param: relative heights rows (e.g. c(1,2)) cow_rel_w cowplot param: relative widths columns (e.g. c(1,2)) cow_align cowplot param: align show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters theme_param list additional params passed ggplot2::theme() default_save_name default save name saving, change, change save_name save_param ... spatPLot(...) passes spatPlot2D sdimz z-axis dimension name (default = 'sdimy') other_cell_alpha (0 1) alpha selected cells grid_alpha opacity spatial grid axis_scale way scale axis custom_ratio customize scale plot x_ticks set number ticks x-axis y_ticks set number ticks y-axis z_ticks set number ticks z-axis","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatPlot — spatPlot2D","text":"ggplot ggplot (2D), plotly (3D) ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spatPlot — spatPlot2D","text":"coord_fix_ratio: set NULL use default ggplot parameters","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/reference/spatPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatPlot — spatPlot2D","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\", verbose = FALSE) #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed spatPlot(g, show_image = TRUE, image_name = \"image\")   # the more specific spatPlot2D with networks shown spatPlot2D(g, show_image = TRUE, image_name = \"image\", show_network = TRUE)   # plotting of some cell metadata (number of different features detected) spatPlot2D(g,     show_image = TRUE,     image_name = \"image\",     cell_color = \"nr_feats\",     color_as_factor = FALSE,     gradient_style = \"sequential\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/subsetSankeySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply subset index on a sankey set — subsetSankeySet","title":"Apply subset index on a sankey set — subsetSankeySet","text":"Apply subset index sankey set","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/subsetSankeySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply subset index on a sankey set — subsetSankeySet","text":"","code":"subsetSankeySet(x, set_id, index = list())"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/subsetSankeySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply subset index on a sankey set — subsetSankeySet","text":"x giottoSankeyPlan object set_id set index node label index new index subset, provided order set_id","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/subsetSankeySet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply subset index on a sankey set — subsetSankeySet","text":"giottoSankeyPlan","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/violinPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"violinPlot — violinPlot","title":"violinPlot — violinPlot","text":"Creates violinplot selected clusters","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/violinPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"violinPlot — violinPlot","text":"","code":"violinPlot(   gobject,   spat_unit = NULL,   feat_type = NULL,   expression_values = c(\"normalized\", \"scaled\", \"custom\"),   feats = NULL,   cluster_column,   cluster_custom_order = NULL,   color_violin = c(\"feats\", \"cluster\"),   cluster_color_code = NULL,   strip_position = c(\"top\", \"right\", \"left\", \"bottom\"),   strip_text = 7,   axis_text_x_size = 10,   axis_text_y_size = 6,   show_plot = NULL,   return_plot = NULL,   save_plot = NULL,   save_param = list(),   default_save_name = \"violinPlot\" )"},{"path":"https://drieslab.github.io/GiottoVisuals/reference/violinPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"violinPlot — violinPlot","text":"gobject giotto object spat_unit spatial unit (e.g. \"cell\") feat_type feature type (e.g. \"rna\", \"dna\", \"protein\") expression_values expression values use (e.g. \"normalized\", \"scaled\", \"custom\") feats features plot cluster_column name column use clusters (e.g. \"leiden_clus\") cluster_custom_order custom order clusters color_violin color violin according \"genes\" \"clusters\" cluster_color_code color code clusters strip_position position gene labels (e.g. \"top\", \"right\", \"left\", \"bottom\") strip_text size strip text axis_text_x_size size x-axis text axis_text_y_size size y-axis text show_plot logical. show plot return_plot logical. return ggplot object save_plot logical. save plot save_param list saving parameters, see showSaveParameters default_save_name default save name saving, change, change save_name save_param","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/violinPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"violinPlot — violinPlot","text":"ggplot","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/reference/violinPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"violinPlot — violinPlot","text":"","code":"g <- GiottoData::loadGiottoMini(\"visium\") #> 1. read Giotto object #> 2. read Giotto feature information #> 3. read Giotto spatial information #> 3.1 read Giotto spatial shape information #> cell_spatInfo_spatVector.shp #> cell #>  #> 3.2 read Giotto spatial centroid information #> cell #>  #> 3.3 read Giotto spatial overlap information #> No overlaps were found, overlap loading will be #>  skipped #>  #> 4. read Giotto image information #>  #> no external python path or giotto #>  environment was specified, will check if a #>  default python path is available #>  #> A default python path was found: /usr/bin/python3 and will be used #>  If this is not the correct python path, either #>  #> 1. use installGiottoEnvironment() to install #>  a local miniconda python environment along with required modules #>  #> 2. provide an existing python path to #>  python_path to use your own python path which has all modules #>  installed #> Set options(\"giotto.use_conda\" = FALSE) if #>  python functionalities are not needed violinPlot(g, feats = c(\"Gna12\", \"Ccnd2\", \"Btbd17\"), cluster_column = \"leiden_clus\")"},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"bug-fixes-0-2-3","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"GiottoVisuals 0.2.3 (2024/05/28)","text":"hotfix sprintf numerics usage %d -> %f","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"breaking-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"breaking changes","title":"GiottoVisuals 0.2.2 (2024/05/22)","text":"option \"giotto.color_c_pal\" split \"giotto.color_cd_pal\" \"giotto.color_cs_pal\" divergent sequential continuous palettes","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"enhancements-0-2-2","dir":"Changelog","previous_headings":"","what":"enhancements","title":"GiottoVisuals 0.2.2 (2024/05/22)","text":"options now initialized library load make easier access","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"changes-0-2-0","dir":"Changelog","previous_headings":"","what":"changes","title":"GiottoVisuals 0.2.0 (2024/05/13)","text":"GiottoClass >= 0.3.0 now required. (object longer @largeImages slot) largeImage_name arg deprecated. image_name arg used instead spatial y dim values vertically plotted deprecated spatDimGenePlot3D(), spatGenePlot3D(), dimGenePlot3D favor ‘feat’ naming scheme","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"GiottoVisuals 0.2.0 (2024/05/13)","text":"removed centroid point unintentionally gets plotted polygons","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"enhancements-0-2-0","dir":"Changelog","previous_headings":"","what":"enhancements","title":"GiottoVisuals 0.2.0 (2024/05/13)","text":"theme_param arg added plotting functions provides access ggplot2::theme() finetuning gg_annotation_raster() now performs plot extent detection resampling largeImages resampling args now globally settable (see ?auto_image_resample) polygon_alpha default now 1 plotting polys without images, 0.5 plotting images.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"changes-0-1-7","dir":"Changelog","previous_headings":"","what":"Changes","title":"GiottoVisuals 0.1.7 (2024/03/11)","text":"Change default values show_plot = NA, return_plot = NA, save_plot = NA -> show_plot = NULL, return_plot = NULL, save_plot = NULL. Add examples exported functions Update License","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"bug-fixes-0-1-6","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"GiottoVisuals 0.1.6 (2024/03/07)","text":"fix spatPlot2D() spatFeatPlot2D() largeImage plotting using group_by fix edge_alpha arg spatFeatPlot2D()","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"new-0-1-6","dir":"Changelog","previous_headings":"","what":"new","title":"GiottoVisuals 0.1.6 (2024/03/07)","text":"mixRGB() vectorized additive mixing RGB space mixHSV() vectorized color mixing HSV space","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"bug-fixes-0-1-4","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"GiottoVisuals 0.1.4 (2024/01/25)","text":"fix plotting color gradient using arg point_shape = \"no_border\" fix image NA value #865 rbutleriii","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"new-0-1-4","dir":"Changelog","previous_headings":"","what":"new","title":"GiottoVisuals 0.1.4 (2024/01/25)","text":"gg_annotation_raster() internal generic adding giottoImage, giottoLargeImage, list thereof ggplot object","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"bug-fixes-0-1-2","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"GiottoVisuals 0.1.2 (2023/01/12)","text":"fix ComplexHeatmap saving size issue #861 rbutleriii","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"breaking-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"GiottoVisuals 0.1.1 (2023/12/16)","text":"Removed: getDistinctColors() GiottoUtils","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"added-0-1-1","dir":"Changelog","previous_headings":"","what":"Added","title":"GiottoVisuals 0.1.1 (2023/12/16)","text":"Add: getDistinctColors() getRainbowColors() re-exports GiottoUtils","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"GiottoVisuals 0.1.1 (2023/12/16)","text":"Changed: Package internal functions now . prefix Changed: GiottoUtils GiottoClass moved Imports Changed: internal function naming changes bring line updates GiottoUtils","code":""},{"path":"https://drieslab.github.io/GiottoVisuals/news/index.html","id":"giottovisuals-010-231129","dir":"Changelog","previous_headings":"","what":"GiottoVisuals 0.1.0 (23/11/29)","title":"GiottoVisuals 0.1.0 (23/11/29)","text":"Initial release","code":""}]
