% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vis_spatial_gg.R, R/vis_spatial_plotly.R
\name{dimPlot2D}
\alias{dimPlot2D}
\alias{dimPlot}
\alias{dimPlot3D}
\title{Plot dimension reduction}
\usage{
dimPlot2D(
  gobject,
  spat_unit = NULL,
  feat_type = NULL,
  group_by = NULL,
  group_by_subset = NULL,
  dim_reduction_to_use = "umap",
  dim_reduction_name = NULL,
  dim1_to_use = 1,
  dim2_to_use = 2,
  spat_enr_names = NULL,
  show_NN_network = FALSE,
  nn_network_to_use = "sNN",
  network_name = "sNN.pca",
  cell_color = NULL,
  color_as_factor = TRUE,
  cell_color_code = NULL,
  cell_color_gradient = NULL,
  gradient_midpoint = NULL,
  gradient_style = c("divergent", "sequential"),
  gradient_limits = NULL,
  select_cell_groups = NULL,
  select_cells = NULL,
  show_other_cells = TRUE,
  other_cell_color = "lightgrey",
  other_point_size = 0.5,
  show_cluster_center = FALSE,
  show_center_label = TRUE,
  center_point_size = 4,
  center_point_border_col = "black",
  center_point_border_stroke = 0.1,
  label_size = 4,
  label_fontface = "bold",
  edge_alpha = NULL,
  point_shape = c("border", "no_border"),
  point_size = 1,
  point_alpha = 1,
  point_border_col = "black",
  point_border_stroke = 0.1,
  title = NULL,
  show_legend = TRUE,
  legend_text = 10,
  legend_symbol_size = 2,
  background_color = "white",
  axis_text = 8,
  axis_title = 8,
  cow_n_col = NULL,
  cow_rel_h = 1,
  cow_rel_w = 1,
  cow_align = "h",
  show_plot = NULL,
  return_plot = NULL,
  save_plot = NULL,
  save_param = list(),
  default_save_name = "dimPlot2D"
)

dimPlot(...)

dimPlot3D(
  gobject,
  spat_unit = NULL,
  feat_type = NULL,
  dim_reduction_to_use = "umap",
  dim_reduction_name = "umap",
  dim1_to_use = 1,
  dim2_to_use = 2,
  dim3_to_use = 3,
  spat_enr_names = NULL,
  select_cell_groups = NULL,
  select_cells = NULL,
  show_other_cells = TRUE,
  other_cell_color = "lightgrey",
  other_point_size = 2,
  show_NN_network = FALSE,
  nn_network_to_use = "sNN",
  network_name = "sNN.pca",
  color_as_factor = TRUE,
  cell_color = NULL,
  cell_color_code = NULL,
  show_cluster_center = FALSE,
  show_center_label = TRUE,
  center_point_size = 4,
  label_size = 4,
  edge_alpha = NULL,
  point_size = 3,
  show_plot = NULL,
  return_plot = NULL,
  save_plot = NULL,
  save_param = list(),
  default_save_name = "dim3D"
)
}
\arguments{
\item{gobject}{giotto object}

\item{spat_unit}{spatial unit (e.g. "cell")}

\item{feat_type}{feature type (e.g. "rna", "dna", "protein")}

\item{group_by}{character. Create multiple plots based on cell
annotation column}

\item{group_by_subset}{character. subset the group_by factor column}

\item{dim_reduction_to_use}{character. dimension reduction to use}

\item{dim_reduction_name}{character. dimension reduction name}

\item{dim1_to_use}{numeric. dimension to use on x-axis}

\item{dim2_to_use}{numeric. dimension to use on y-axis}

\item{spat_enr_names}{character. names of spatial enrichment results
to include}

\item{show_NN_network}{logical. Show underlying NN network}

\item{nn_network_to_use}{character. type of NN network to use (kNN vs sNN)}

\item{network_name}{character. name of NN network to use,
if show_NN_network = TRUE}

\item{cell_color}{character. what to color cells by (e.g. metadata col or
spatial enrichment col)}

\item{color_as_factor}{logical. convert color column to factor.
Discrete colors are used when this is TRUE. continuous colors when FALSE.}

\item{cell_color_code}{character. discrete colors to use. palette to use or
named vector of colors}

\item{cell_color_gradient}{character. continuous colors to use. palette to
use or vector of colors to use (minimum of 2).}

\item{gradient_midpoint}{numeric. midpoint for color gradient}

\item{gradient_style}{either 'divergent' (midpoint is used in color scaling)
or 'sequential' (scaled based on data range)}

\item{gradient_limits}{numeric vector with lower and upper limits}

\item{select_cell_groups}{select subset of cells/clusters based on
cell_color parameter}

\item{select_cells}{select subset of cells based on cell IDs}

\item{show_other_cells}{display not selected cells}

\item{other_cell_color}{color for not selected cells}

\item{other_point_size}{point size for not selected cells}

\item{show_cluster_center}{plot center of selected clusters}

\item{show_center_label}{plot label of selected clusters}

\item{center_point_size}{size of center points}

\item{center_point_border_col}{border color of center points}

\item{center_point_border_stroke}{border stroke size of center points}

\item{label_size}{size of labels}

\item{label_fontface}{font of labels}

\item{edge_alpha}{column to use for alpha of the edges}

\item{point_shape}{point with border or not (border or no_border)}

\item{point_size}{size of point (cell)}

\item{point_alpha}{transparency of points}

\item{point_border_col}{color of border around points}

\item{point_border_stroke}{stroke size of border around points}

\item{title}{character. title for plot, defaults to cell_color parameter}

\item{show_legend}{logical. show legend}

\item{legend_text}{size of legend text}

\item{legend_symbol_size}{size of legend symbols}

\item{background_color}{color of plot background}

\item{axis_text}{size of axis text}

\item{axis_title}{size of axis title}

\item{cow_n_col}{cowplot param: how many columns}

\item{cow_rel_h}{cowplot param: relative heights of rows (e.g. c(1,2))}

\item{cow_rel_w}{cowplot param: relative widths of columns (e.g. c(1,2))}

\item{cow_align}{cowplot param: how to align}

\item{show_plot}{logical. show plot}

\item{return_plot}{logical. return ggplot object}

\item{save_plot}{logical. save the plot}

\item{save_param}{list of saving parameters,
see \code{\link{showSaveParameters}}}

\item{default_save_name}{default save name for saving, don't change,
change save_name in save_param}

\item{\dots}{dimPlot(...) passes to dimPlot2D()}

\item{dim3_to_use}{numeric. dimension to use on z-axis}
}
\value{
ggplot

ggplot

plotly (dimplot3D only)
}
\description{
Visualize cells according to dimension reduction coordinates
}
\examples{
g <- GiottoData::loadGiottoMini("visium", verbose = FALSE)
dimPlot2D(g)
g <- GiottoData::loadGiottoMini("visium", verbose = FALSE)
dimPlot(g)
}
\seealso{
Other reduced dimension visualizations: 
\code{\link{plotPCA}()},
\code{\link{plotPCA_2D}()},
\code{\link{plotPCA_3D}()},
\code{\link{plotTSNE}()},
\code{\link{plotTSNE_2D}()},
\code{\link{plotTSNE_3D}()},
\code{\link{plotUMAP}()},
\code{\link{plotUMAP_2D}()},
\code{\link{plotUMAP_3D}()}
}
\concept{reduced dimension visualizations}
