% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aux_save.R
\name{plot_save}
\alias{plot_save}
\alias{all_plots_save_function}
\alias{gpsparam}
\title{Plot saving}
\usage{
all_plots_save_function(
  gobject,
  plot_object,
  save_dir = NULL,
  save_folder = NULL,
  save_name = NULL,
  default_save_name = "giotto_plot",
  save_format = NULL,
  show_saved_plot = FALSE,
  ncol = 1,
  nrow = 1,
  scale = 1,
  base_width = NULL,
  base_height = NULL,
  base_aspect_ratio = NULL,
  units = NULL,
  dpi = NULL,
  limitsize = TRUE,
  plot_count = NULL,
  GPSPARAM = NULL,
  ...
)

gpsparam(
  instructions,
  type = c("gg", "plotly", "general"),
  save_dir = NULL,
  save_folder = NULL,
  save_name = NULL,
  default_save_name = "giotto_plot",
  save_format = NULL,
  dpi = NULL,
  base_width = NULL,
  base_height = NULL,
  base_aspect_ratio = NULL,
  units = NULL,
  plot_count = NULL,
  ...
)
}
\arguments{
\item{gobject}{giotto object or giottoInstructions}

\item{plot_object}{ggplot object to plot}

\item{save_dir}{directory to save to}

\item{save_folder}{folder in save_dir to save to}

\item{save_name}{name of plot}

\item{default_save_name}{default name to save a plot}

\item{save_format}{format (e.g. png, tiff, pdf, ...)}

\item{show_saved_plot}{load & display the saved plot}

\item{ncol}{number of columns for multiplots}

\item{nrow}{number of rows for multiplot}

\item{scale}{scale of plots}

\item{base_width}{width of plot}

\item{base_height}{height of plot}

\item{base_aspect_ratio}{aspect ratio of plot}

\item{units}{plotting units (e.g. in)}

\item{dpi}{dpi for each plot if plot is in raster format}

\item{limitsize}{When TRUE (the default), ggsave will not save images larger
than 50x50 inches, to prevent the common error of specifying dimensions in
pixels.}

\item{plot_count}{manually set the plot count that is appended to a
default_save_name}

\item{GPSPARAM}{\code{giotto_plot_save_param} object. If provided, will be
used instead of most other general save params. (save_dir, save_folder,
save_name, default_save_name, save_format, base_width, base_height,
base_aspect_ratio, units, dpi, plot_count)}

\item{\dots}{additional parameters to pass downstream save functions.
\code{\link[cowplot:save_plot]{cowplot::save_plot()}} is used for \code{ggplot2} plots. grDevices png, tiff
svg, pdf is used for base and general saving}

\item{instructions}{\code{giotto} or \code{giottoInstructions} object}

\item{type}{\code{character}. One of \verb{"gg"', '"plotly"', '"general"} to designate
which type of plot to save. This affects which types of outputs are
possible.}
}
\value{
\code{all_plots_save_function} returns a plot file. \code{gpsparam} returns
a \code{giotto_plot_save_param} object
}
\description{
Functions to save plots to directory of interest.
\code{all_plots_save_function()} is used for plot saving operations. \code{gpsparam()}
is used to generate a set of save parameters and filepath based on available
parameter and \code{giottoInstructions} values.
}
\examples{
g <- GiottoData::loadGiottoMini("vis")
df <- data.frame(x = rnorm(5), y = rnorm(5))
g_plot <- ggplot2::ggplot(df, ggplot2::aes(x,y)) + ggplot2::geom_point()
all_plots_save_function(g, g_plot)

}
\seealso{
\code{\link{showSaveParameters}} \code{\link[cowplot]{save_plot}}
\code{\link[grDevices]{png}}
\code{\link[grDevices]{tiff}}
\code{\link[grDevices]{pdf}}
\code{\link[grDevices]{svg}}
}
